

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Mar  3 20:36:47 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16LF15323
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16LF15323 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000E                     	;# 
    65  0012                     	;# 
    66  0014                     	;# 
    67  0018                     	;# 
    68  001A                     	;# 
    69  009B                     	;# 
    70  009B                     	;# 
    71  009C                     	;# 
    72  009D                     	;# 
    73  009E                     	;# 
    74  009F                     	;# 
    75  0119                     	;# 
    76  0119                     	;# 
    77  0119                     	;# 
    78  011A                     	;# 
    79  011A                     	;# 
    80  011A                     	;# 
    81  011B                     	;# 
    82  011B                     	;# 
    83  011B                     	;# 
    84  011B                     	;# 
    85  011B                     	;# 
    86  011C                     	;# 
    87  011C                     	;# 
    88  011C                     	;# 
    89  011D                     	;# 
    90  011D                     	;# 
    91  011D                     	;# 
    92  011E                     	;# 
    93  011E                     	;# 
    94  011E                     	;# 
    95  011F                     	;# 
    96  011F                     	;# 
    97  011F                     	;# 
    98  011F                     	;# 
    99  011F                     	;# 
   100  018C                     	;# 
   101  018D                     	;# 
   102  018E                     	;# 
   103  018F                     	;# 
   104  0190                     	;# 
   105  0191                     	;# 
   106  0192                     	;# 
   107  020C                     	;# 
   108  020C                     	;# 
   109  020D                     	;# 
   110  020E                     	;# 
   111  020F                     	;# 
   112  020F                     	;# 
   113  0210                     	;# 
   114  0210                     	;# 
   115  0211                     	;# 
   116  0211                     	;# 
   117  028C                     	;# 
   118  028C                     	;# 
   119  028D                     	;# 
   120  028D                     	;# 
   121  028E                     	;# 
   122  028F                     	;# 
   123  0290                     	;# 
   124  0291                     	;# 
   125  030C                     	;# 
   126  030C                     	;# 
   127  030D                     	;# 
   128  030E                     	;# 
   129  030F                     	;# 
   130  0310                     	;# 
   131  0310                     	;# 
   132  0311                     	;# 
   133  0312                     	;# 
   134  0313                     	;# 
   135  0314                     	;# 
   136  0314                     	;# 
   137  0315                     	;# 
   138  0316                     	;# 
   139  0318                     	;# 
   140  0318                     	;# 
   141  0319                     	;# 
   142  031A                     	;# 
   143  031C                     	;# 
   144  031C                     	;# 
   145  031D                     	;# 
   146  031E                     	;# 
   147  038C                     	;# 
   148  038C                     	;# 
   149  038D                     	;# 
   150  038E                     	;# 
   151  058C                     	;# 
   152  058C                     	;# 
   153  058D                     	;# 
   154  058E                     	;# 
   155  058F                     	;# 
   156  058F                     	;# 
   157  0590                     	;# 
   158  0591                     	;# 
   159  0592                     	;# 
   160  0593                     	;# 
   161  059C                     	;# 
   162  059C                     	;# 
   163  059D                     	;# 
   164  059D                     	;# 
   165  059E                     	;# 
   166  059F                     	;# 
   167  060C                     	;# 
   168  060D                     	;# 
   169  060E                     	;# 
   170  060F                     	;# 
   171  0610                     	;# 
   172  0611                     	;# 
   173  0612                     	;# 
   174  0613                     	;# 
   175  0614                     	;# 
   176  070C                     	;# 
   177  070D                     	;# 
   178  070E                     	;# 
   179  070F                     	;# 
   180  0710                     	;# 
   181  0711                     	;# 
   182  0712                     	;# 
   183  0713                     	;# 
   184  0716                     	;# 
   185  0717                     	;# 
   186  0718                     	;# 
   187  0719                     	;# 
   188  071A                     	;# 
   189  071B                     	;# 
   190  071C                     	;# 
   191  071D                     	;# 
   192  0796                     	;# 
   193  0797                     	;# 
   194  0798                     	;# 
   195  0799                     	;# 
   196  079A                     	;# 
   197  079B                     	;# 
   198  080C                     	;# 
   199  080D                     	;# 
   200  080E                     	;# 
   201  080F                     	;# 
   202  0810                     	;# 
   203  0811                     	;# 
   204  0813                     	;# 
   205  0814                     	;# 
   206  081A                     	;# 
   207  081A                     	;# 
   208  081B                     	;# 
   209  081C                     	;# 
   210  081C                     	;# 
   211  081D                     	;# 
   212  081E                     	;# 
   213  081F                     	;# 
   214  088C                     	;# 
   215  088D                     	;# 
   216  088E                     	;# 
   217  088F                     	;# 
   218  0890                     	;# 
   219  0891                     	;# 
   220  0892                     	;# 
   221  0893                     	;# 
   222  0895                     	;# 
   223  0896                     	;# 
   224  090C                     	;# 
   225  090E                     	;# 
   226  090F                     	;# 
   227  091F                     	;# 
   228  098F                     	;# 
   229  098F                     	;# 
   230  0990                     	;# 
   231  0991                     	;# 
   232  0992                     	;# 
   233  0993                     	;# 
   234  0994                     	;# 
   235  0995                     	;# 
   236  0996                     	;# 
   237  0997                     	;# 
   238  1E0F                     	;# 
   239  1E10                     	;# 
   240  1E11                     	;# 
   241  1E12                     	;# 
   242  1E13                     	;# 
   243  1E14                     	;# 
   244  1E15                     	;# 
   245  1E16                     	;# 
   246  1E17                     	;# 
   247  1E18                     	;# 
   248  1E19                     	;# 
   249  1E1A                     	;# 
   250  1E1B                     	;# 
   251  1E1C                     	;# 
   252  1E1D                     	;# 
   253  1E1E                     	;# 
   254  1E1F                     	;# 
   255  1E20                     	;# 
   256  1E21                     	;# 
   257  1E22                     	;# 
   258  1E23                     	;# 
   259  1E24                     	;# 
   260  1E25                     	;# 
   261  1E26                     	;# 
   262  1E27                     	;# 
   263  1E28                     	;# 
   264  1E29                     	;# 
   265  1E2A                     	;# 
   266  1E2B                     	;# 
   267  1E2C                     	;# 
   268  1E2D                     	;# 
   269  1E2E                     	;# 
   270  1E2F                     	;# 
   271  1E30                     	;# 
   272  1E31                     	;# 
   273  1E32                     	;# 
   274  1E33                     	;# 
   275  1E34                     	;# 
   276  1E35                     	;# 
   277  1E36                     	;# 
   278  1E37                     	;# 
   279  1E8F                     	;# 
   280  1E90                     	;# 
   281  1E91                     	;# 
   282  1E92                     	;# 
   283  1E93                     	;# 
   284  1E9C                     	;# 
   285  1EA1                     	;# 
   286  1EA2                     	;# 
   287  1EB1                     	;# 
   288  1EBB                     	;# 
   289  1EBC                     	;# 
   290  1EBD                     	;# 
   291  1EBE                     	;# 
   292  1EC3                     	;# 
   293  1EC5                     	;# 
   294  1EC6                     	;# 
   295  1EC7                     	;# 
   296  1ECB                     	;# 
   297  1ECC                     	;# 
   298  1F10                     	;# 
   299  1F11                     	;# 
   300  1F12                     	;# 
   301  1F13                     	;# 
   302  1F14                     	;# 
   303  1F15                     	;# 
   304  1F20                     	;# 
   305  1F21                     	;# 
   306  1F22                     	;# 
   307  1F23                     	;# 
   308  1F24                     	;# 
   309  1F25                     	;# 
   310  1F38                     	;# 
   311  1F39                     	;# 
   312  1F3A                     	;# 
   313  1F3B                     	;# 
   314  1F3C                     	;# 
   315  1F3D                     	;# 
   316  1F3E                     	;# 
   317  1F3F                     	;# 
   318  1F4E                     	;# 
   319  1F4F                     	;# 
   320  1F50                     	;# 
   321  1F51                     	;# 
   322  1F52                     	;# 
   323  1F53                     	;# 
   324  1F54                     	;# 
   325  1F55                     	;# 
   326  1FE4                     	;# 
   327  1FE5                     	;# 
   328  1FE6                     	;# 
   329  1FE7                     	;# 
   330  1FE8                     	;# 
   331  1FE8                     	;# 
   332  1FE9                     	;# 
   333  1FEA                     	;# 
   334  1FEA                     	;# 
   335  1FEB                     	;# 
   336  1FED                     	;# 
   337  1FEE                     	;# 
   338  1FEF                     	;# 
   339  000B                     _INTCONbits	set	11
   340  0014                     _TRISC	set	20
   341  0012                     _TRISA	set	18
   342  001A                     _LATC	set	26
   343  0018                     _LATA	set	24
   344  0018                     _LATAbits	set	24
   345  0119                     _RC1REG	set	281
   346  011D                     _RC1STAbits	set	285
   347  011D                     _RC1STA	set	285
   348  011E                     _TX1STA	set	286
   349  011B                     _SP1BRGL	set	283
   350  011A                     _TX1REG	set	282
   351  028E                     _T2CON	set	654
   352  028D                     _PR2	set	653
   353  0290                     _T2CLKCON	set	656
   354  059F                     _T0CON1	set	1439
   355  059E                     _T0CON0bits	set	1438
   356  059C                     _TMR0L	set	1436
   357  059D                     _TMR0H	set	1437
   358  0716                     _PIE0bits	set	1814
   359  071A                     _PIE4bits	set	1818
   360  070F                     _PIR3bits	set	1807
   361  070C                     _PIR0bits	set	1804
   362  0710                     _PIR4bits	set	1808
   363  091F                     _ZCDCON	set	2335
   364  1ECB                     _RX1DTPPS	set	7883
   365  1ECC                     _TX1CKPPS	set	7884
   366  1F10                     _RA0PPS	set	7952
   367  1F4E                     _ANSELC	set	8014
   368  1F38                     _ANSELA	set	7992
   369                           
   370                           ; #config settings
   371  0000                     
   372                           	psect	cinit
   373  0171                     start_initialization:	
   374  0171                     __initialization:	
   375                           
   376                           ; Clear objects allocated to COMMON
   377  0171  01F7               	clrf	__pbssCOMMON& (0+127)
   378  0172  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   379  0173  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   380  0174  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   381  0175  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   382                           
   383                           ; Clear objects allocated to BANK0
   384  0176  0140               	movlb	0	; select bank0
   385  0177  01A0               	clrf	__pbssBANK0& (0+127)
   386  0178  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   387  0179  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   388  017A  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   389  017B  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   390  017C  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   391  017D  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   392  017E  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   393  017F  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   394  0180  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   395  0181  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   396  0182  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   397  0183                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  0183                     __end_of__initialization:	
   401  0183  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   402  0184  0140               	movlb	0
   403  0185  2986               	ljmp	_main	;jump to C main() function
   404                           
   405                           	psect	bssCOMMON
   406  0077                     __pbssCOMMON:	
   407  0077                     _Delay0:	
   408  0077                     	ds	2
   409  0079                     _Ch0Delay:	
   410  0079                     	ds	2
   411  007B                     _Flags0:	
   412  007B                     	ds	1
   413                           
   414                           	psect	bssBANK0
   415  0020                     __pbssBANK0:	
   416  0020                     _Delay2:	
   417  0020                     	ds	2
   418  0022                     _Delay1:	
   419  0022                     	ds	2
   420  0024                     _CmdVal:	
   421  0024                     	ds	2
   422  0026                     _Ch1Delay:	
   423  0026                     	ds	2
   424  0028                     _Flags1:	
   425  0028                     	ds	1
   426  0029                     _Rx:	
   427  0029                     	ds	1
   428  002A                     _RcvCnt:	
   429  002A                     	ds	1
   430  002B                     _Cmd:	
   431  002B                     	ds	1
   432                           
   433                           	psect	cstackCOMMON
   434  0070                     __pcstackCOMMON:	
   435  0070                     ?_myIsr:	
   436  0070                     ??_myIsr:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_nibbleToHex:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_sendChar:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_sendInt:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_hexToNibble:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_main:	
   452                           ; 1 bytes @ 0x0
   453                           
   454                           
   455                           ; 2 bytes @ 0x0
   456  0070                     	ds	2
   457  0072                     ??_nibbleToHex:	
   458  0072                     ??_sendChar:	
   459                           ; 1 bytes @ 0x2
   460                           
   461  0072                     ??_hexToNibble:	
   462                           ; 1 bytes @ 0x2
   463                           
   464  0072                     nibbleToHex@i:	
   465                           ; 1 bytes @ 0x2
   466                           
   467  0072                     sendChar@c:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0072                     hexToNibble@c:	
   471                           ; 1 bytes @ 0x2
   472                           
   473                           
   474                           ; 1 bytes @ 0x2
   475  0072                     	ds	1
   476  0073                     ??_sendInt:	
   477                           
   478                           ; 1 bytes @ 0x3
   479  0073                     	ds	1
   480  0074                     sendInt@tmp:	
   481                           
   482                           ; 1 bytes @ 0x4
   483  0074                     	ds	1
   484  0075                     sendInt@i:	
   485                           
   486                           ; 1 bytes @ 0x5
   487  0075                     	ds	1
   488  0076                     main@state:	
   489                           
   490                           ; 1 bytes @ 0x6
   491  0076                     	ds	1
   492                           
   493                           	psect	cstackBANK0
   494  002C                     __pcstackBANK0:	
   495  002C                     ??_main:	
   496                           
   497                           ; 1 bytes @ 0x0
   498  002C                     	ds	2
   499                           
   500                           	psect	maintext
   501  0186                     __pmaintext:	
   502 ;;
   503 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   504 ;;
   505 ;; *************** function _main *****************
   506 ;; Defined at:
   507 ;;		line 228 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  state           1    6[COMMON] unsigned char 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  2  146[None  ] int 
   514 ;; Registers used:
   515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : B3F/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   521 ;;      Params:         0       0       0       0
   522 ;;      Locals:         1       0       0       0
   523 ;;      Temps:          0       2       0       0
   524 ;;      Totals:         1       2       0       0
   525 ;;Total ram usage:        3 bytes
   526 ;; Hardware stack levels required when called:    3
   527 ;; This function calls:
   528 ;;		_hexToNibble
   529 ;;		_sendChar
   530 ;;		_sendInt
   531 ;; This function is called by:
   532 ;;		Startup code after reset
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           
   537                           ;psect for function _main
   538  0186                     _main:	
   539  0186                     l1512:	
   540                           ;incstack = 0
   541                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   542                           
   543                           
   544                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 230:     uchar state;;/Users/craig/MP
      +                          LABXProjects/AC-Dimmer-C.X/main.c: 232:     ANSELA = 0b00000100;
   545  0186  3004               	movlw	4
   546  0187  017E               	movlb	62	; select bank62
   547  0188  00B8               	movwf	56	;volatile
   548  0189                     l1514:	
   549                           
   550                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 234:     ANSELC = 0b00000000;
   551  0189  01CE               	clrf	78	;volatile
   552  018A                     l1516:	
   553                           
   554                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 238:     RA0PPS = 0xF;
   555  018A  300F               	movlw	15
   556  018B  0090               	movwf	16	;volatile
   557                           
   558                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 242:     LATA = 0b00000000;
   559  018C  0140               	movlb	0	; select bank0
   560  018D  0198               	clrf	24	;volatile
   561                           
   562                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 244:     LATC = 0b00000000;
   563  018E  019A               	clrf	26	;volatile
   564  018F                     l1518:	
   565                           
   566                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 246:     TRISA = 0b11001110;
   567  018F  30CE               	movlw	206
   568  0190  0092               	movwf	18	;volatile
   569  0191                     l1520:	
   570                           
   571                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 248:     TRISC = 0b11111111;
   572  0191  30FF               	movlw	255
   573  0192  0094               	movwf	20	;volatile
   574                           
   575                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 252:     TX1CKPPS = 0x00;
   576  0193  017D               	movlb	61	; select bank61
   577  0194  01CC               	clrf	76	;volatile
   578  0195                     l1522:	
   579                           
   580                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 253:     RX1DTPPS = 0x01;
   581  0195  3001               	movlw	1
   582  0196  00CB               	movwf	75	;volatile
   583  0197                     l1524:	
   584                           
   585                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 259:     SP1BRGL = 16;
   586  0197  3010               	movlw	16
   587  0198  0142               	movlb	2	; select bank2
   588  0199  009B               	movwf	27	;volatile
   589  019A                     l1526:	
   590                           
   591                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 261:     TX1STA = 0b00100100;
   592  019A  3024               	movlw	36
   593  019B  009E               	movwf	30	;volatile
   594  019C                     l1528:	
   595                           
   596                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 262:     RC1STA = 0b10010000;
   597  019C  3090               	movlw	144
   598  019D  009D               	movwf	29	;volatile
   599  019E                     l1530:	
   600                           
   601                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 269:     T0CON0bits.T016BIT = 1;
   602  019E  014B               	movlb	11	; select bank11
   603  019F  161E               	bsf	30,4	;volatile
   604  01A0                     l1532:	
   605                           
   606                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 270:     T0CON1 = 0b01000011;
   607  01A0  3043               	movlw	67
   608  01A1  009F               	movwf	31	;volatile
   609  01A2                     l1534:	
   610                           
   611                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 273:     ZCDCON = 0b10000011;
   612  01A2  3083               	movlw	131
   613  01A3  0152               	movlb	18	; select bank18
   614  01A4  009F               	movwf	31	;volatile
   615  01A5                     l1536:	
   616                           
   617                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 277:     T2CLKCON = 0b00000110;
   618  01A5  3006               	movlw	6
   619  01A6  0145               	movlb	5	; select bank5
   620  01A7  0090               	movwf	16	;volatile
   621  01A8                     l1538:	
   622                           
   623                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 279:     PR2 = 133;
   624  01A8  3085               	movlw	133
   625  01A9  008D               	movwf	13	;volatile
   626  01AA                     l1540:	
   627                           
   628                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 280:     T2CON = 0b10010000;
   629  01AA  3090               	movlw	144
   630  01AB  008E               	movwf	14	;volatile
   631  01AC                     l1542:	
   632                           
   633                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 281:     PIE4bits.TMR2IE = 1;
   634  01AC  014E               	movlb	14	; select bank14
   635  01AD  149A               	bsf	26,1	;volatile
   636  01AE                     l1544:	
   637                           
   638                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 287:     INTCONbits.PEIE = 1;
   639  01AE  170B               	bsf	11,6	;volatile
   640  01AF                     l1546:	
   641                           
   642                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 288:     INTCONbits.GIE = 1;
   643  01AF  178B               	bsf	11,7	;volatile
   644  01B0                     l1548:	
   645                           
   646                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 291:     PIE0bits.TMR0IE = 1;
   647  01B0  1696               	bsf	22,5	;volatile
   648  01B1                     l1550:	
   649                           
   650                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 293:     RcvCnt = 0;
   651  01B1  0140               	movlb	0	; select bank0
   652  01B2  01AA               	clrf	_RcvCnt
   653  01B3                     l1552:	
   654                           
   655                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 294:     Flags1.value = 0;
   656  01B3  01A8               	clrf	_Flags1
   657  01B4                     l1554:	
   658                           
   659                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 295:     Flags0.value = 0;
   660  01B4  01FB               	clrf	_Flags0
   661  01B5                     l1556:	
   662                           
   663                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 298:         state = 0;
   664  01B5  01F6               	clrf	main@state
   665  01B6                     l1558:	
   666                           
   667                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 299:         if (PIR3bits.RC1IF) {
   668  01B6  014E               	movlb	14	; select bank14
   669  01B7  1E8F               	btfss	15,5	;volatile
   670  01B8  29BA               	goto	u851
   671  01B9  29BB               	goto	u850
   672  01BA                     u851:	
   673  01BA  2AAE               	goto	l148
   674  01BB                     u850:	
   675  01BB                     l1560:	
   676                           
   677                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 300:             if (RC1STAbits.FERR)
      +                           {
   678  01BB  0142               	movlb	2	; select bank2
   679  01BC  1D1D               	btfss	29,2	;volatile
   680  01BD  29BF               	goto	u861
   681  01BE  29C0               	goto	u860
   682  01BF                     u861:	
   683  01BF  29D1               	goto	l1570
   684  01C0                     u860:	
   685  01C0                     l1562:	
   686                           
   687                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 301:                 RC1REG;
   688  01C0  0819               	movf	25,w	;volatile
   689  01C1                     l1564:	
   690                           
   691                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 303:                 if (Rx != 0 || R
      +                          cvCnt != 0) {
   692  01C1  0140               	movlb	0	; select bank0
   693  01C2  0829               	movf	_Rx,w
   694  01C3  1D03               	btfss	3,2
   695  01C4  29C6               	goto	u871
   696  01C5  29C7               	goto	u870
   697  01C6                     u871:	
   698  01C6  29CC               	goto	l1568
   699  01C7                     u870:	
   700  01C7                     l1566:	
   701  01C7  082A               	movf	_RcvCnt,w
   702  01C8  1903               	btfsc	3,2
   703  01C9  29CB               	goto	u881
   704  01CA  29CC               	goto	u880
   705  01CB                     u881:	
   706  01CB  2ABA               	goto	l1646
   707  01CC                     u880:	
   708  01CC                     l1568:	
   709                           
   710                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 304:                     state = 3;
   711  01CC  3003               	movlw	3
   712  01CD  00AC               	movwf	??_main
   713  01CE  082C               	movf	??_main,w
   714  01CF  00F6               	movwf	main@state
   715  01D0  2ABA               	goto	l1646
   716  01D1                     l1570:	
   717                           
   718                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 307:                 Rx = RC1REG;
   719  01D1  0819               	movf	25,w	;volatile
   720  01D2  0140               	movlb	0	; select bank0
   721  01D3  00AC               	movwf	??_main
   722  01D4  082C               	movf	??_main,w
   723  01D5  00A9               	movwf	_Rx
   724  01D6                     l1572:	
   725                           
   726                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 308:                 if (Rx == 'S') {
   727  01D6  3053               	movlw	83
   728  01D7  0629               	xorwf	_Rx,w
   729  01D8  1D03               	btfss	3,2
   730  01D9  29DB               	goto	u891
   731  01DA  29DC               	goto	u890
   732  01DB                     u891:	
   733  01DB  2A89               	goto	l1636
   734  01DC                     u890:	
   735  01DC                     l1574:	
   736                           
   737                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 309:                     if (RcvCnt !
      +                          = 0) {
   738  01DC  082A               	movf	_RcvCnt,w
   739  01DD  1903               	btfsc	3,2
   740  01DE  29E0               	goto	u901
   741  01DF  29E1               	goto	u900
   742  01E0                     u901:	
   743  01E0  29E5               	goto	l1578
   744  01E1                     u900:	
   745  01E1                     l1576:	
   746                           
   747                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 310:                         sendChar
      +                          ('N');
   748  01E1  304E               	movlw	78
   749  01E2  3183  2313  3181   	fcall	_sendChar
   750  01E5                     l1578:	
   751                           
   752                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 312:                     RcvCnt = 1;
   753  01E5  0140               	movlb	0	; select bank0
   754  01E6  01AA               	clrf	_RcvCnt
   755  01E7  0AAA               	incf	_RcvCnt,f
   756                           
   757                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 313:                 } else {
   758  01E8  2ABA               	goto	l1646
   759  01E9                     l1580:	
   760                           
   761                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 316:                             if (
      +                          Rx != 0) {
   762  01E9  0829               	movf	_Rx,w
   763  01EA  1903               	btfsc	3,2
   764  01EB  29ED               	goto	u911
   765  01EC  29EE               	goto	u910
   766  01ED                     u911:	
   767  01ED  29F1               	goto	l1584
   768  01EE                     u910:	
   769  01EE                     l1582:	
   770                           
   771                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 317:                                 
      +                          state = 1;
   772  01EE  01F6               	clrf	main@state
   773  01EF  0AF6               	incf	main@state,f
   774                           
   775                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 318:                             } el
      +                          se {
   776  01F0  2AA9               	goto	l1638
   777  01F1                     l1584:	
   778                           
   779                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 319:                                 
      +                          RcvCnt--;
   780  01F1  3001               	movlw	1
   781  01F2  02AA               	subwf	_RcvCnt,f
   782  01F3  2AA9               	goto	l1638
   783  01F4                     l1586:	
   784                           
   785                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 323:                             Cmd 
      +                          = hexToNibble(Rx);
   786  01F4  0829               	movf	_Rx,w
   787  01F5  3183  2306  3181   	fcall	_hexToNibble
   788  01F8  0140               	movlb	0	; select bank0
   789  01F9  00AC               	movwf	??_main
   790  01FA  082C               	movf	??_main,w
   791  01FB  00AB               	movwf	_Cmd
   792  01FC                     l1588:	
   793                           
   794                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 324:                             Cmd 
      +                          <<= 4;
   795  01FC  0EAB               	swapf	_Cmd,f
   796  01FD  30F0               	movlw	240
   797  01FE  05AB               	andwf	_Cmd,f
   798                           
   799                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 325:                             brea
      +                          k;
   800  01FF  2AA9               	goto	l1638
   801  0200                     l1590:	
   802                           
   803                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 327:                             Cmd 
      +                          += hexToNibble(Rx);
   804  0200  0829               	movf	_Rx,w
   805  0201  3183  2306  3181   	fcall	_hexToNibble
   806  0204  0140               	movlb	0	; select bank0
   807  0205  00AC               	movwf	??_main
   808  0206  082C               	movf	??_main,w
   809  0207  07AB               	addwf	_Cmd,f
   810  0208                     l1592:	
   811                           
   812                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 328:                             if (
      +                          Cmd > 2) {
   813  0208  3003               	movlw	3
   814  0209  022B               	subwf	_Cmd,w
   815  020A  1C03               	skipc
   816  020B  2A0D               	goto	u921
   817  020C  2A0E               	goto	u920
   818  020D                     u921:	
   819  020D  2AA9               	goto	l1638
   820  020E                     u920:	
   821  020E  29EE               	goto	l1582
   822  020F                     l1596:	
   823                           
   824                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 333:                             CmdV
      +                          al.msb = hexToNibble(Rx);
   825  020F  0829               	movf	_Rx,w
   826  0210  3183  2306  3181   	fcall	_hexToNibble
   827  0213  0140               	movlb	0	; select bank0
   828  0214  00AC               	movwf	??_main
   829  0215  082C               	movf	??_main,w
   830  0216  00A5               	movwf	_CmdVal+1
   831  0217                     l1598:	
   832                           
   833                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 334:                             CmdV
      +                          al.msb <<= 4;
   834  0217  0EA5               	swapf	_CmdVal+1,f
   835  0218  30F0               	movlw	240
   836  0219  05A5               	andwf	_CmdVal+1,f
   837                           
   838                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 335:                             brea
      +                          k;
   839  021A  2AA9               	goto	l1638
   840  021B                     l1600:	
   841                           
   842                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 337:                             CmdV
      +                          al.msb += hexToNibble(Rx);
   843  021B  0829               	movf	_Rx,w
   844  021C  3183  2306  3181   	fcall	_hexToNibble
   845  021F  0140               	movlb	0	; select bank0
   846  0220  00AC               	movwf	??_main
   847  0221  082C               	movf	??_main,w
   848  0222  07A5               	addwf	_CmdVal+1,f
   849                           
   850                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 338:                             brea
      +                          k;
   851  0223  2AA9               	goto	l1638
   852  0224                     l1602:	
   853                           
   854                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 340:                             CmdV
      +                          al.lsb = hexToNibble(Rx);
   855  0224  0829               	movf	_Rx,w
   856  0225  3183  2306  3181   	fcall	_hexToNibble
   857  0228  0140               	movlb	0	; select bank0
   858  0229  00AC               	movwf	??_main
   859  022A  082C               	movf	??_main,w
   860  022B  00A4               	movwf	_CmdVal
   861  022C                     l1604:	
   862                           
   863                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 341:                             CmdV
      +                          al.lsb <<= 4;
   864  022C  0EA4               	swapf	_CmdVal,f
   865  022D  30F0               	movlw	240
   866  022E  05A4               	andwf	_CmdVal,f
   867                           
   868                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 342:                             brea
      +                          k;
   869  022F  2AA9               	goto	l1638
   870  0230                     l1606:	
   871                           
   872                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 344:                             CmdV
      +                          al.lsb += hexToNibble(Rx);
   873  0230  0829               	movf	_Rx,w
   874  0231  3183  2306  3181   	fcall	_hexToNibble
   875  0234  0140               	movlb	0	; select bank0
   876  0235  00AC               	movwf	??_main
   877  0236  082C               	movf	??_main,w
   878  0237  07A4               	addwf	_CmdVal,f
   879  0238                     l1608:	
   880                           
   881                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 345:                             if (
      +                          Cmd == 0) {
   882  0238  082B               	movf	_Cmd,w
   883  0239  1D03               	btfss	3,2
   884  023A  2A3C               	goto	u931
   885  023B  2A3D               	goto	u930
   886  023C                     u931:	
   887  023C  2A5D               	goto	l1620
   888  023D                     u930:	
   889  023D                     l1610:	
   890                           
   891                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 346:                                 
      +                          if (Flags1.update || CmdVal.value > 8192) {
   892  023D  18A8               	btfsc	_Flags1,1
   893  023E  2A40               	goto	u941
   894  023F  2A41               	goto	u940
   895  0240                     u941:	
   896  0240  29EE               	goto	l1582
   897  0241                     u940:	
   898  0241                     l1612:	
   899  0241  3020               	movlw	32
   900  0242  0225               	subwf	_CmdVal+1,w
   901  0243  3001               	movlw	1
   902  0244  1903               	skipnz
   903  0245  0224               	subwf	_CmdVal,w
   904  0246  1C03               	skipc
   905  0247  2A49               	goto	u951
   906  0248  2A4A               	goto	u950
   907  0249                     u951:	
   908  0249  2A4B               	goto	l1614
   909  024A                     u950:	
   910  024A  29EE               	goto	l1582
   911  024B                     l1614:	
   912                           
   913                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 349:                                 
      +                              Ch0Delay.value = CmdVal.value;
   914  024B  0825               	movf	_CmdVal+1,w
   915  024C  00FA               	movwf	_Ch0Delay+1
   916  024D  0824               	movf	_CmdVal,w
   917  024E  00F9               	movwf	_Ch0Delay
   918  024F                     l1616:	
   919                           
   920                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 350:                                 
      +                              sendInt(Ch0Delay.msb);
   921  024F  087A               	movf	_Ch0Delay+1,w
   922  0250  3182  22DE  3181   	fcall	_sendInt
   923  0253                     l1618:	
   924                           
   925                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 351:                                 
      +                              sendInt(Ch0Delay.lsb);
   926  0253  0879               	movf	_Ch0Delay,w
   927  0254  3182  22DE  3181   	fcall	_sendInt
   928                           
   929                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 352:                                 
      +                              state = 2;
   930  0257  3002               	movlw	2
   931  0258  0140               	movlb	0	; select bank0
   932  0259  00AC               	movwf	??_main
   933  025A  082C               	movf	??_main,w
   934  025B  00F6               	movwf	main@state
   935  025C  2AA9               	goto	l1638
   936  025D                     l1620:	
   937  025D  032B               	decf	_Cmd,w
   938  025E  1D03               	btfss	3,2
   939  025F  2A61               	goto	u961
   940  0260  2A62               	goto	u960
   941  0261                     u961:	
   942  0261  2A83               	goto	l175
   943  0262                     u960:	
   944  0262                     l1622:	
   945                           
   946                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 355:                                 
      +                          if (Flags1.update || CmdVal.value > 8192) {
   947  0262  18A8               	btfsc	_Flags1,1
   948  0263  2A65               	goto	u971
   949  0264  2A66               	goto	u970
   950  0265                     u971:	
   951  0265  29EE               	goto	l1582
   952  0266                     u970:	
   953  0266                     l1624:	
   954  0266  3020               	movlw	32
   955  0267  0225               	subwf	_CmdVal+1,w
   956  0268  3001               	movlw	1
   957  0269  1903               	skipnz
   958  026A  0224               	subwf	_CmdVal,w
   959  026B  1C03               	skipc
   960  026C  2A6E               	goto	u981
   961  026D  2A6F               	goto	u980
   962  026E                     u981:	
   963  026E  2A70               	goto	l1626
   964  026F                     u980:	
   965  026F  29EE               	goto	l1582
   966  0270                     l1626:	
   967                           
   968                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 358:                                 
      +                              Ch1Delay.value = CmdVal.value;
   969  0270  0825               	movf	_CmdVal+1,w
   970  0271  00A7               	movwf	_Ch1Delay+1
   971  0272  0824               	movf	_CmdVal,w
   972  0273  00A6               	movwf	_Ch1Delay
   973  0274                     l1628:	
   974                           
   975                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 359:                                 
      +                              sendInt(Ch1Delay.msb);
   976  0274  0827               	movf	_Ch1Delay+1,w
   977  0275  3182  22DE  3181   	fcall	_sendInt
   978  0278                     l1630:	
   979                           
   980                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 360:                                 
      +                              sendInt(Ch1Delay.lsb);
   981  0278  0140               	movlb	0	; select bank0
   982  0279  0826               	movf	_Ch1Delay,w
   983  027A  3182  22DE  3181   	fcall	_sendInt
   984                           
   985                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 361:                                 
      +                              state = 2;
   986  027D  3002               	movlw	2
   987  027E  0140               	movlb	0	; select bank0
   988  027F  00AC               	movwf	??_main
   989  0280  082C               	movf	??_main,w
   990  0281  00F6               	movwf	main@state
   991  0282  2AA9               	goto	l1638
   992  0283                     l175:	
   993                           
   994                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 364:                                 
      +                          Flags1.update = 1;
   995  0283  14A8               	bsf	_Flags1,1
   996  0284                     l1632:	
   997                           
   998                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 365:                                 
      +                          state = 2;
   999  0284  3002               	movlw	2
  1000  0285  00AC               	movwf	??_main
  1001  0286  082C               	movf	??_main,w
  1002  0287  00F6               	movwf	main@state
  1003  0288  2AA9               	goto	l1638
  1004  0289                     l1636:	
  1005  0289  082A               	movf	_RcvCnt,w
  1006  028A  3907               	andlw	7
  1007  028B  00AC               	movwf	??_main
  1008  028C  01AD               	clrf	??_main+1
  1009                           
  1010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1011                           ; Switch size 1, requested type "simple"
  1012                           ; Number of cases is 1, Range of values is 0 to 0
  1013                           ; switch strategies available:
  1014                           ; Name         Instructions Cycles
  1015                           ; simple_byte            4     3 (average)
  1016                           ; direct_byte            8     6 (fixed)
  1017                           ; jumptable            260     6 (fixed)
  1018                           ;	Chosen strategy is simple_byte
  1019  028D  082D               	movf	??_main+1,w
  1020  028E  3A00               	xorlw	0	; case 0
  1021  028F  1903               	skipnz
  1022  0290  2A92               	goto	l1730
  1023  0291  2AA9               	goto	l1638
  1024  0292                     l1730:	
  1025                           
  1026                           ; Switch size 1, requested type "simple"
  1027                           ; Number of cases is 7, Range of values is 0 to 6
  1028                           ; switch strategies available:
  1029                           ; Name         Instructions Cycles
  1030                           ; direct_byte           20     6 (fixed)
  1031                           ; simple_byte           22    12 (average)
  1032                           ; jumptable            260     6 (fixed)
  1033                           ;	Chosen strategy is simple_byte
  1034  0292  082C               	movf	??_main,w
  1035  0293  3A00               	xorlw	0	; case 0
  1036  0294  1903               	skipnz
  1037  0295  29E9               	goto	l1580
  1038  0296  3A01               	xorlw	1	; case 1
  1039  0297  1903               	skipnz
  1040  0298  29F4               	goto	l1586
  1041  0299  3A03               	xorlw	3	; case 2
  1042  029A  1903               	skipnz
  1043  029B  2A00               	goto	l1590
  1044  029C  3A01               	xorlw	1	; case 3
  1045  029D  1903               	skipnz
  1046  029E  2A0F               	goto	l1596
  1047  029F  3A07               	xorlw	7	; case 4
  1048  02A0  1903               	skipnz
  1049  02A1  2A1B               	goto	l1600
  1050  02A2  3A01               	xorlw	1	; case 5
  1051  02A3  1903               	skipnz
  1052  02A4  2A24               	goto	l1602
  1053  02A5  3A03               	xorlw	3	; case 6
  1054  02A6  1903               	skipnz
  1055  02A7  2A30               	goto	l1606
  1056  02A8  2AA9               	goto	l1638
  1057  02A9                     l1638:	
  1058                           
  1059                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 369:                     RcvCnt++;
  1060  02A9  3001               	movlw	1
  1061  02AA  00AC               	movwf	??_main
  1062  02AB  082C               	movf	??_main,w
  1063  02AC  07AA               	addwf	_RcvCnt,f
  1064  02AD  2ABA               	goto	l1646
  1065  02AE                     l148:	
  1066  02AE  0142               	movlb	2	; select bank2
  1067  02AF  1C9D               	btfss	29,1	;volatile
  1068  02B0  2AB2               	goto	u991
  1069  02B1  2AB3               	goto	u990
  1070  02B2                     u991:	
  1071  02B2  2ABA               	goto	l1646
  1072  02B3                     u990:	
  1073  02B3                     l1640:	
  1074                           
  1075                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 373:             sendChar('O');
  1076  02B3  304F               	movlw	79
  1077  02B4  3183  2313  3181   	fcall	_sendChar
  1078  02B7                     l1642:	
  1079                           
  1080                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 374:             RC1STAbits.CREN = 0;
  1081  02B7  0142               	movlb	2	; select bank2
  1082  02B8  121D               	bcf	29,4	;volatile
  1083  02B9                     l1644:	
  1084                           
  1085                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 375:             RC1STAbits.CREN = 1;
  1086  02B9  161D               	bsf	29,4	;volatile
  1087  02BA                     l1646:	
  1088                           
  1089                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 378:         if (state == 2) {
  1090  02BA  3002               	movlw	2
  1091  02BB  0676               	xorwf	main@state,w
  1092  02BC  1D03               	btfss	3,2
  1093  02BD  2ABF               	goto	u1001
  1094  02BE  2AC0               	goto	u1000
  1095  02BF                     u1001:	
  1096  02BF  2AC7               	goto	l1652
  1097  02C0                     u1000:	
  1098  02C0                     l1648:	
  1099                           
  1100                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 379:             sendChar('K');
  1101  02C0  304B               	movlw	75
  1102  02C1  3183  2313  3181   	fcall	_sendChar
  1103  02C4                     l1650:	
  1104                           
  1105                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 380:             RcvCnt = 0;
  1106  02C4  0140               	movlb	0	; select bank0
  1107  02C5  01AA               	clrf	_RcvCnt
  1108                           
  1109                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 381:         } else if (state == 1) {
  1110  02C6  29B5               	goto	l1556
  1111  02C7                     l1652:	
  1112  02C7  0376               	decf	main@state,w
  1113  02C8  1D03               	btfss	3,2
  1114  02C9  2ACB               	goto	u1011
  1115  02CA  2ACC               	goto	u1010
  1116  02CB                     u1011:	
  1117  02CB  2AD1               	goto	l1658
  1118  02CC                     u1010:	
  1119  02CC                     l1654:	
  1120                           
  1121                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 382:             sendChar('N');
  1122  02CC  304E               	movlw	78
  1123  02CD  3183  2313  3181   	fcall	_sendChar
  1124  02D0  2AC4               	goto	l1650
  1125  02D1                     l1658:	
  1126  02D1  3003               	movlw	3
  1127  02D2  0676               	xorwf	main@state,w
  1128  02D3  1D03               	btfss	3,2
  1129  02D4  2AD6               	goto	u1021
  1130  02D5  2AD7               	goto	u1020
  1131  02D6                     u1021:	
  1132  02D6  2ADC               	goto	l184
  1133  02D7                     u1020:	
  1134  02D7                     l1660:	
  1135                           
  1136                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 385:             sendChar('Z');
  1137  02D7  305A               	movlw	90
  1138  02D8  3183  2313  3181   	fcall	_sendChar
  1139  02DB  2AC4               	goto	l1650
  1140  02DC                     l184:	
  1141  02DC  29B5               	goto	l1556
  1142  02DD  2970               	ljmp	start
  1143  02DE                     __end_of_main:	
  1144                           
  1145                           	psect	text1
  1146  02DE                     __ptext1:	
  1147 ;; *************** function _sendInt *****************
  1148 ;; Defined at:
  1149 ;;		line 213 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  i               1    wreg     unsigned char 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  i               1    5[COMMON] unsigned char 
  1154 ;;  tmp             1    4[COMMON] unsigned char 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, status,0, pclath, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1164 ;;      Params:         0       0       0       0
  1165 ;;      Locals:         2       0       0       0
  1166 ;;      Temps:          1       0       0       0
  1167 ;;      Totals:         3       0       0       0
  1168 ;;Total ram usage:        3 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    2
  1171 ;; This function calls:
  1172 ;;		_nibbleToHex
  1173 ;;		_sendChar
  1174 ;; This function is called by:
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _sendInt
  1181  02DE                     _sendInt:	
  1182                           
  1183                           ;incstack = 0
  1184                           ; Regs used in _sendInt: [wreg+status,2+status,0+pclath+cstack]
  1185                           ;sendInt@i stored from wreg
  1186  02DE  00F5               	movwf	sendInt@i
  1187  02DF                     l1128:	
  1188                           
  1189                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 214:     uchar tmp = i;
  1190  02DF  0875               	movf	sendInt@i,w
  1191  02E0  00F3               	movwf	??_sendInt
  1192  02E1  0873               	movf	??_sendInt,w
  1193  02E2  00F4               	movwf	sendInt@tmp
  1194                           
  1195                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 215:     tmp >>= 4;
  1196  02E3  0EF4               	swapf	sendInt@tmp,f
  1197  02E4  300F               	movlw	15
  1198  02E5  05F4               	andwf	sendInt@tmp,f
  1199  02E6                     l1130:	
  1200                           
  1201                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 216:     sendChar(nibbleToHex(tmp));
  1202  02E6  0874               	movf	sendInt@tmp,w
  1203  02E7  3182  22F9  3182   	fcall	_nibbleToHex
  1204  02EA  3183  2313  3182   	fcall	_sendChar
  1205  02ED                     l1132:	
  1206                           
  1207                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 217:     i &= 0xF;
  1208  02ED  300F               	movlw	15
  1209  02EE  00F3               	movwf	??_sendInt
  1210  02EF  0873               	movf	??_sendInt,w
  1211  02F0  05F5               	andwf	sendInt@i,f
  1212  02F1                     l1134:	
  1213                           
  1214                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 218:     sendChar(nibbleToHex(i));
  1215  02F1  0875               	movf	sendInt@i,w
  1216  02F2  3182  22F9  3182   	fcall	_nibbleToHex
  1217  02F5  3183  2313  3182   	fcall	_sendChar
  1218  02F8                     l138:	
  1219  02F8  0008               	return
  1220  02F9                     __end_of_sendInt:	
  1221                           
  1222                           	psect	text2
  1223  0313                     __ptext2:	
  1224 ;; *************** function _sendChar *****************
  1225 ;; Defined at:
  1226 ;;		line 208 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  c               1    wreg     unsigned char 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  c               1    2[COMMON] unsigned char 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1240 ;;      Params:         0       0       0       0
  1241 ;;      Locals:         1       0       0       0
  1242 ;;      Temps:          0       0       0       0
  1243 ;;      Totals:         1       0       0       0
  1244 ;;Total ram usage:        1 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    1
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_sendInt
  1251 ;;		_main
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function _sendChar
  1257  0313                     _sendChar:	
  1258                           
  1259                           ;incstack = 0
  1260                           ; Regs used in _sendChar: [wreg]
  1261                           ;sendChar@c stored from wreg
  1262  0313  00F2               	movwf	sendChar@c
  1263  0314                     l1124:	
  1264  0314                     l132:	
  1265                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 209:     while (!PIR3bits.TX1IF);
  1266                           
  1267  0314  014E               	movlb	14	; select bank14
  1268  0315  1E0F               	btfss	15,4	;volatile
  1269  0316  2B18               	goto	u441
  1270  0317  2B19               	goto	u440
  1271  0318                     u441:	
  1272  0318  2B14               	goto	l132
  1273  0319                     u440:	
  1274  0319                     l1126:	
  1275                           
  1276                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 210:     TX1REG = c;
  1277  0319  0872               	movf	sendChar@c,w
  1278  031A  0142               	movlb	2	; select bank2
  1279  031B  009A               	movwf	26	;volatile
  1280  031C                     l135:	
  1281  031C  0008               	return
  1282  031D                     __end_of_sendChar:	
  1283                           
  1284                           	psect	text3
  1285  02F9                     __ptext3:	
  1286 ;; *************** function _nibbleToHex *****************
  1287 ;; Defined at:
  1288 ;;		line 201 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  i               1    wreg     unsigned char 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  i               1    2[COMMON] unsigned char 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      unsigned char 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2, status,0
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1302 ;;      Params:         0       0       0       0
  1303 ;;      Locals:         1       0       0       0
  1304 ;;      Temps:          0       0       0       0
  1305 ;;      Totals:         1       0       0       0
  1306 ;;Total ram usage:        1 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    1
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_sendInt
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           
  1317                           ;psect for function _nibbleToHex
  1318  02F9                     _nibbleToHex:	
  1319                           
  1320                           ;incstack = 0
  1321                           ; Regs used in _nibbleToHex: [wreg+status,2+status,0]
  1322                           ;nibbleToHex@i stored from wreg
  1323  02F9  00F2               	movwf	nibbleToHex@i
  1324  02FA                     l1114:	
  1325                           
  1326                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 202:     if (i >= 10) {
  1327  02FA  300A               	movlw	10
  1328  02FB  0272               	subwf	nibbleToHex@i,w
  1329  02FC  1C03               	skipc
  1330  02FD  2AFF               	goto	u431
  1331  02FE  2B00               	goto	u430
  1332  02FF                     u431:	
  1333  02FF  2B03               	goto	l1120
  1334  0300                     u430:	
  1335  0300                     l1116:	
  1336                           
  1337                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 203:         return 'A'+i-10;
  1338  0300  0872               	movf	nibbleToHex@i,w
  1339  0301  3E37               	addlw	55
  1340  0302  2B05               	goto	l129
  1341  0303                     l1120:	
  1342                           
  1343                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 205:     return '0'+i;
  1344  0303  0872               	movf	nibbleToHex@i,w
  1345  0304  3E30               	addlw	48
  1346  0305                     l129:	
  1347  0305  0008               	return
  1348  0306                     __end_of_nibbleToHex:	
  1349                           
  1350                           	psect	text4
  1351  0306                     __ptext4:	
  1352 ;; *************** function _hexToNibble *****************
  1353 ;; Defined at:
  1354 ;;		line 221 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  c               1    wreg     unsigned char 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  c               1    2[COMMON] unsigned char 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      unsigned char 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2, status,0
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1368 ;;      Params:         0       0       0       0
  1369 ;;      Locals:         1       0       0       0
  1370 ;;      Temps:          0       0       0       0
  1371 ;;      Totals:         1       0       0       0
  1372 ;;Total ram usage:        1 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; Hardware stack levels required when called:    1
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_main
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           
  1383                           ;psect for function _hexToNibble
  1384  0306                     _hexToNibble:	
  1385                           
  1386                           ;incstack = 0
  1387                           ; Regs used in _hexToNibble: [wreg+status,2+status,0]
  1388                           ;hexToNibble@c stored from wreg
  1389  0306  00F2               	movwf	hexToNibble@c
  1390  0307                     l1136:	
  1391                           
  1392                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 222:     if (c >= 'A') {
  1393  0307  3041               	movlw	65
  1394  0308  0272               	subwf	hexToNibble@c,w
  1395  0309  1C03               	skipc
  1396  030A  2B0C               	goto	u451
  1397  030B  2B0D               	goto	u450
  1398  030C                     u451:	
  1399  030C  2B10               	goto	l1142
  1400  030D                     u450:	
  1401  030D                     l1138:	
  1402                           
  1403                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 223:         return c-'A'+10;
  1404  030D  0872               	movf	hexToNibble@c,w
  1405  030E  3EC9               	addlw	201
  1406  030F  2B12               	goto	l142
  1407  0310                     l1142:	
  1408                           
  1409                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 225:     return c-'0';
  1410  0310  0872               	movf	hexToNibble@c,w
  1411  0311  3ED0               	addlw	208
  1412  0312                     l142:	
  1413  0312  0008               	return
  1414  0313                     __end_of_hexToNibble:	
  1415                           
  1416                           	psect	intentry
  1417  0004                     __pintentry:	
  1418 ;; *************** function _myIsr *****************
  1419 ;; Defined at:
  1420 ;;		line 59 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1434 ;;      Params:         0       0       0       0
  1435 ;;      Locals:         0       0       0       0
  1436 ;;      Temps:          2       0       0       0
  1437 ;;      Totals:         2       0       0       0
  1438 ;;Total ram usage:        2 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		Interrupt level 1
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447  0004                     _myIsr:	
  1448                           
  1449                           ;incstack = 0
  1450  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1451                           
  1452                           ; Regs used in _myIsr: [wreg-fsr0h+status,2+status,0]
  1453  0005  3180               	pagesel	$
  1454  0006                     i1l1146:	
  1455                           
  1456                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 61:     if (PIR4bits.TMR2IF) {
  1457  0006  014E               	movlb	14	; select bank14
  1458  0007  1C90               	btfss	16,1	;volatile
  1459  0008  280A               	goto	u46_21
  1460  0009  280B               	goto	u46_20
  1461  000A                     u46_21:	
  1462  000A  2907               	goto	i1l87
  1463  000B                     u46_20:	
  1464  000B                     i1l1148:	
  1465                           
  1466                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 62:         PIR4bits.TMR2IF = 0;
  1467  000B  1090               	bcf	16,1	;volatile
  1468  000C                     i1l1150:	
  1469                           
  1470                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 67:         TMR0H = (0xFF74 >> 8);
  1471  000C  30FF               	movlw	255
  1472  000D  014B               	movlb	11	; select bank11
  1473  000E  009D               	movwf	29	;volatile
  1474                           
  1475                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 68:         TMR0L = (0xFF74 & 0xFF);
  1476  000F  3074               	movlw	116
  1477  0010  009C               	movwf	28	;volatile
  1478  0011                     i1l1152:	
  1479                           
  1480                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 69:         Flags0.delay = 0;
  1481  0011  30FC               	movlw	-4
  1482  0012  05FB               	andwf	_Flags0,f
  1483  0013                     i1l1154:	
  1484                           
  1485                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 71:         if (Flags1.update) {
  1486  0013  0140               	movlb	0	; select bank0
  1487  0014  1CA8               	btfss	_Flags1,1
  1488  0015  2817               	goto	u47_21
  1489  0016  2818               	goto	u47_20
  1490  0017                     u47_21:	
  1491  0017  296E               	goto	i1l125
  1492  0018                     u47_20:	
  1493  0018                     i1l1156:	
  1494                           
  1495                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 72:             T0CON0bits.T0EN = 1;
  1496  0018  014B               	movlb	11	; select bank11
  1497  0019  179E               	bsf	30,7	;volatile
  1498  001A                     i1l1158:	
  1499                           
  1500                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 74:             Flags0.value = 0;
  1501  001A  01FB               	clrf	_Flags0
  1502                           
  1503                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 75:             Flags1.value = 0;
  1504  001B  0140               	movlb	0	; select bank0
  1505  001C  01A8               	clrf	_Flags1
  1506  001D                     i1l1160:	
  1507                           
  1508                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 76:             Delay0.value = 0xFFFF
      +                          ;
  1509  001D  30FF               	movlw	255
  1510  001E  00F7               	movwf	_Delay0
  1511  001F  30FF               	movlw	255
  1512  0020  00F8               	movwf	_Delay0+1
  1513  0021                     i1l1162:	
  1514                           
  1515                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 77:             Delay1.value = 0xFFFF
      +                          ;
  1516  0021  30FF               	movlw	255
  1517  0022  00A2               	movwf	_Delay1
  1518  0023  30FF               	movlw	255
  1519  0024  00A3               	movwf	_Delay1+1
  1520  0025                     i1l1164:	
  1521                           
  1522                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 78:             Delay2.value = 0xFFFF
      +                          ;
  1523  0025  30FF               	movlw	255
  1524  0026  00A0               	movwf	_Delay2
  1525  0027  30FF               	movlw	255
  1526  0028  00A1               	movwf	_Delay2+1
  1527  0029                     i1l1166:	
  1528                           
  1529                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 80:             LATAbits.LATA4 = 0;
  1530  0029  1218               	bcf	24,4	;volatile
  1531  002A                     i1l1168:	
  1532                           
  1533                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 81:             LATAbits.LATA5 = 0;
  1534  002A  1298               	bcf	24,5	;volatile
  1535  002B                     i1l1170:	
  1536                           
  1537                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 83:             if (Ch0Delay.value ==
      +                           0) {
  1538  002B  0879               	movf	_Ch0Delay,w
  1539  002C  047A               	iorwf	_Ch0Delay+1,w
  1540  002D  1D03               	btfss	3,2
  1541  002E  2830               	goto	u48_21
  1542  002F  2831               	goto	u48_20
  1543  0030                     u48_21:	
  1544  0030  2859               	goto	i1l1190
  1545  0031                     u48_20:	
  1546  0031                     i1l1172:	
  1547                           
  1548                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 84:                 Flags0.ch0aon = 1
      +                          ;
  1549  0031  177B               	bsf	_Flags0,6
  1550                           
  1551                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 85:                 LATAbits.LATA4 = 
      +                          1;
  1552  0032  1618               	bsf	24,4	;volatile
  1553  0033                     i1l1174:	
  1554                           
  1555                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 87:                 if (Ch1Delay.valu
      +                          e == 0) {
  1556  0033  0826               	movf	_Ch1Delay,w
  1557  0034  0427               	iorwf	_Ch1Delay+1,w
  1558  0035  1D03               	btfss	3,2
  1559  0036  2838               	goto	u49_21
  1560  0037  2839               	goto	u49_20
  1561  0038                     u49_21:	
  1562  0038  283E               	goto	i1l1178
  1563  0039                     u49_20:	
  1564  0039                     i1l1176:	
  1565                           
  1566                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 88:                     Flags0.ch1aon
      +                           = 1;
  1567  0039  17FB               	bsf	_Flags0,7
  1568                           
  1569                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 89:                     LATAbits.LATA
      +                          5 = 1;
  1570  003A  1698               	bsf	24,5	;volatile
  1571                           
  1572                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 90:                     T0CON0bits.T0
      +                          EN = 0;
  1573  003B  014B               	movlb	11	; select bank11
  1574  003C  139E               	bcf	30,7	;volatile
  1575                           
  1576                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 91:                 } else {
  1577  003D  28FF               	goto	i1l1252
  1578  003E                     i1l1178:	
  1579                           
  1580                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 92:                     if (Ch1Delay.
      +                          value == 8192) {
  1581  003E  3020               	movlw	32
  1582  003F  0627               	xorwf	_Ch1Delay+1,w
  1583  0040  0426               	iorwf	_Ch1Delay,w
  1584  0041  1D03               	btfss	3,2
  1585  0042  2844               	goto	u50_21
  1586  0043  2845               	goto	u50_20
  1587  0044                     u50_21:	
  1588  0044  2848               	goto	i1l1182
  1589  0045                     u50_20:	
  1590  0045                     i1l1180:	
  1591                           
  1592                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 93:                         T0CON0bit
      +                          s.T0EN = 0;
  1593  0045  014B               	movlb	11	; select bank11
  1594  0046  139E               	bcf	30,7	;volatile
  1595                           
  1596                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 94:                     } else {
  1597  0047  28FF               	goto	i1l1252
  1598  0048                     i1l1182:	
  1599                           
  1600                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 95:                         Delay0.va
      +                          lue = Ch1Delay.value;
  1601  0048  0827               	movf	_Ch1Delay+1,w
  1602  0049  00F8               	movwf	_Delay0+1
  1603  004A  0826               	movf	_Ch1Delay,w
  1604  004B  00F7               	movwf	_Delay0
  1605  004C                     i1l1184:	
  1606                           
  1607                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 96:                         Flags0.ch
      +                          1on0 = 1;
  1608  004C  15FB               	bsf	_Flags0,3
  1609  004D                     i1l1186:	
  1610                           
  1611                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 97:                         Delay1.va
      +                          lue = 8192 - Ch1Delay.value;
  1612  004D  3000               	movlw	0
  1613  004E  00F0               	movwf	??_myIsr
  1614  004F  3020               	movlw	32
  1615  0050  00F1               	movwf	??_myIsr+1
  1616  0051  0826               	movf	_Ch1Delay,w
  1617  0052  0270               	subwf	??_myIsr,w
  1618  0053  00A2               	movwf	_Delay1
  1619  0054  0827               	movf	_Ch1Delay+1,w
  1620  0055  3B71               	subwfb	??_myIsr+1,w
  1621  0056  00A3               	movwf	_Delay1+1
  1622  0057                     i1l1188:	
  1623                           
  1624                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 98:                         Flags1.of
      +                          f2 = 1;
  1625  0057  1428               	bsf	_Flags1,0
  1626  0058  28FF               	goto	i1l1252
  1627  0059                     i1l1190:	
  1628  0059  0826               	movf	_Ch1Delay,w
  1629  005A  0427               	iorwf	_Ch1Delay+1,w
  1630  005B  1D03               	btfss	3,2
  1631  005C  285E               	goto	u51_21
  1632  005D  285F               	goto	u51_20
  1633  005E                     u51_21:	
  1634  005E  287C               	goto	i1l1206
  1635  005F                     u51_20:	
  1636  005F                     i1l1192:	
  1637                           
  1638                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 102:                 Flags0.ch1aon = 
      +                          1;
  1639  005F  17FB               	bsf	_Flags0,7
  1640                           
  1641                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 103:                 LATAbits.LATA5 =
      +                           1;
  1642  0060  1698               	bsf	24,5	;volatile
  1643  0061                     i1l1194:	
  1644                           
  1645                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 105:                 if (Ch0Delay.val
      +                          ue == 8192) {
  1646  0061  3020               	movlw	32
  1647  0062  067A               	xorwf	_Ch0Delay+1,w
  1648  0063  0479               	iorwf	_Ch0Delay,w
  1649  0064  1D03               	btfss	3,2
  1650  0065  2867               	goto	u52_21
  1651  0066  2868               	goto	u52_20
  1652  0067                     u52_21:	
  1653  0067  286B               	goto	i1l1198
  1654  0068                     u52_20:	
  1655  0068                     i1l1196:	
  1656                           
  1657                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 106:                     T0CON0bits.T
      +                          0EN = 0;
  1658  0068  014B               	movlb	11	; select bank11
  1659  0069  139E               	bcf	30,7	;volatile
  1660                           
  1661                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 107:                 } else {
  1662  006A  28FF               	goto	i1l1252
  1663  006B                     i1l1198:	
  1664                           
  1665                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 108:                     Delay0.value
      +                           = Ch0Delay.value;
  1666  006B  087A               	movf	_Ch0Delay+1,w
  1667  006C  00F8               	movwf	_Delay0+1
  1668  006D  0879               	movf	_Ch0Delay,w
  1669  006E  00F7               	movwf	_Delay0
  1670  006F                     i1l1200:	
  1671                           
  1672                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 109:                     Flags0.ch0on
      +                          0 = 1;
  1673  006F  157B               	bsf	_Flags0,2
  1674  0070                     i1l1202:	
  1675                           
  1676                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 110:                     Delay1.value
      +                           = 8192 - Ch0Delay.value;
  1677  0070  3000               	movlw	0
  1678  0071  00F0               	movwf	??_myIsr
  1679  0072  3020               	movlw	32
  1680  0073  00F1               	movwf	??_myIsr+1
  1681  0074  0879               	movf	_Ch0Delay,w
  1682  0075  0270               	subwf	??_myIsr,w
  1683  0076  00A2               	movwf	_Delay1
  1684  0077  087A               	movf	_Ch0Delay+1,w
  1685  0078  3B71               	subwfb	??_myIsr+1,w
  1686  0079  00A3               	movwf	_Delay1+1
  1687  007A                     i1l1204:	
  1688                           
  1689                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 111:                     Flags1.off2 
      +                          = 1;
  1690  007A  1428               	bsf	_Flags1,0
  1691  007B  28FF               	goto	i1l1252
  1692  007C                     i1l1206:	
  1693  007C  0827               	movf	_Ch1Delay+1,w
  1694  007D  067A               	xorwf	_Ch0Delay+1,w
  1695  007E  1D03               	skipz
  1696  007F  2882               	goto	u53_25
  1697  0080  0826               	movf	_Ch1Delay,w
  1698  0081  0679               	xorwf	_Ch0Delay,w
  1699  0082                     u53_25:	
  1700  0082  1D03               	skipz
  1701  0083  2885               	goto	u53_21
  1702  0084  2886               	goto	u53_20
  1703  0085                     u53_21:	
  1704  0085  28A2               	goto	i1l1222
  1705  0086                     u53_20:	
  1706  0086                     i1l1208:	
  1707                           
  1708                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 114:                 if (Ch0Delay.val
      +                          ue == 8192) {
  1709  0086  3020               	movlw	32
  1710  0087  067A               	xorwf	_Ch0Delay+1,w
  1711  0088  0479               	iorwf	_Ch0Delay,w
  1712  0089  1D03               	btfss	3,2
  1713  008A  288C               	goto	u54_21
  1714  008B  288D               	goto	u54_20
  1715  008C                     u54_21:	
  1716  008C  2890               	goto	i1l1212
  1717  008D                     u54_20:	
  1718  008D                     i1l1210:	
  1719                           
  1720                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 115:                     T0CON0bits.T
      +                          0EN = 0;
  1721  008D  014B               	movlb	11	; select bank11
  1722  008E  139E               	bcf	30,7	;volatile
  1723                           
  1724                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 116:                 } else {
  1725  008F  28FF               	goto	i1l1252
  1726  0090                     i1l1212:	
  1727                           
  1728                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 117:                     Delay0.value
      +                           = Ch0Delay.value;
  1729  0090  087A               	movf	_Ch0Delay+1,w
  1730  0091  00F8               	movwf	_Delay0+1
  1731  0092  0879               	movf	_Ch0Delay,w
  1732  0093  00F7               	movwf	_Delay0
  1733  0094                     i1l1214:	
  1734                           
  1735                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 118:                     Flags0.ch0on
      +                          0 = 1;
  1736  0094  157B               	bsf	_Flags0,2
  1737  0095                     i1l1216:	
  1738                           
  1739                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 119:                     Flags0.ch1on
      +                          0 = 1;
  1740  0095  15FB               	bsf	_Flags0,3
  1741  0096                     i1l1218:	
  1742                           
  1743                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 120:                     Delay1.value
      +                           = 8192 - Ch0Delay.value;
  1744  0096  3000               	movlw	0
  1745  0097  00F0               	movwf	??_myIsr
  1746  0098  3020               	movlw	32
  1747  0099  00F1               	movwf	??_myIsr+1
  1748  009A  0879               	movf	_Ch0Delay,w
  1749  009B  0270               	subwf	??_myIsr,w
  1750  009C  00A2               	movwf	_Delay1
  1751  009D  087A               	movf	_Ch0Delay+1,w
  1752  009E  3B71               	subwfb	??_myIsr+1,w
  1753  009F  00A3               	movwf	_Delay1+1
  1754  00A0                     i1l1220:	
  1755                           
  1756                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 121:                     Flags1.off2 
      +                          = 1;
  1757  00A0  1428               	bsf	_Flags1,0
  1758  00A1  28FF               	goto	i1l1252
  1759  00A2                     i1l1222:	
  1760  00A2  087A               	movf	_Ch0Delay+1,w
  1761  00A3  0227               	subwf	_Ch1Delay+1,w
  1762  00A4  1D03               	skipz
  1763  00A5  28A8               	goto	u55_25
  1764  00A6  0879               	movf	_Ch0Delay,w
  1765  00A7  0226               	subwf	_Ch1Delay,w
  1766  00A8                     u55_25:	
  1767  00A8  1803               	skipnc
  1768  00A9  28AB               	goto	u55_21
  1769  00AA  28AC               	goto	u55_20
  1770  00AB                     u55_21:	
  1771  00AB  28D6               	goto	i1l1238
  1772  00AC                     u55_20:	
  1773  00AC                     i1l1224:	
  1774                           
  1775                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 124:                 Delay0.value = C
      +                          h1Delay.value;
  1776  00AC  0827               	movf	_Ch1Delay+1,w
  1777  00AD  00F8               	movwf	_Delay0+1
  1778  00AE  0826               	movf	_Ch1Delay,w
  1779  00AF  00F7               	movwf	_Delay0
  1780  00B0                     i1l1226:	
  1781                           
  1782                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 125:                 Flags0.ch1on0 = 
      +                          1;
  1783  00B0  15FB               	bsf	_Flags0,3
  1784  00B1                     i1l1228:	
  1785                           
  1786                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 126:                 if (Ch0Delay.val
      +                          ue == 8192) {
  1787  00B1  3020               	movlw	32
  1788  00B2  067A               	xorwf	_Ch0Delay+1,w
  1789  00B3  0479               	iorwf	_Ch0Delay,w
  1790  00B4  1D03               	btfss	3,2
  1791  00B5  28B7               	goto	u56_21
  1792  00B6  28B8               	goto	u56_20
  1793  00B7                     u56_21:	
  1794  00B7  28C4               	goto	i1l1234
  1795  00B8                     u56_20:	
  1796  00B8                     i1l1230:	
  1797                           
  1798                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 127:                     Delay1.value
      +                           = 8192 - Delay0.value;
  1799  00B8  3000               	movlw	0
  1800  00B9  00F0               	movwf	??_myIsr
  1801  00BA  3020               	movlw	32
  1802  00BB  00F1               	movwf	??_myIsr+1
  1803  00BC  0877               	movf	_Delay0,w
  1804  00BD  0270               	subwf	??_myIsr,w
  1805  00BE  00A2               	movwf	_Delay1
  1806  00BF  0878               	movf	_Delay0+1,w
  1807  00C0  3B71               	subwfb	??_myIsr+1,w
  1808  00C1  00A3               	movwf	_Delay1+1
  1809  00C2                     i1l1232:	
  1810                           
  1811                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 128:                     Flags1.off2 
      +                          = 1;
  1812  00C2  1428               	bsf	_Flags1,0
  1813                           
  1814                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 129:                 } else {
  1815  00C3  28FF               	goto	i1l1252
  1816  00C4                     i1l1234:	
  1817                           
  1818                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 130:                     Delay1.value
      +                           = Ch0Delay.value - Ch1Delay.value;
  1819  00C4  0826               	movf	_Ch1Delay,w
  1820  00C5  0279               	subwf	_Ch0Delay,w
  1821  00C6  00A2               	movwf	_Delay1
  1822  00C7  0827               	movf	_Ch1Delay+1,w
  1823  00C8  3B7A               	subwfb	_Ch0Delay+1,w
  1824  00C9  00A3               	movwf	_Delay1+1
  1825  00CA                     i1l1236:	
  1826                           
  1827                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 131:                     Flags0.ch0on
      +                          1 = 1;
  1828  00CA  167B               	bsf	_Flags0,4
  1829                           
  1830                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 132:                     Delay2.value
      +                           = 8192 - Ch0Delay.value;
  1831  00CB  3000               	movlw	0
  1832  00CC  00F0               	movwf	??_myIsr
  1833  00CD  3020               	movlw	32
  1834  00CE  00F1               	movwf	??_myIsr+1
  1835  00CF  0879               	movf	_Ch0Delay,w
  1836  00D0  0270               	subwf	??_myIsr,w
  1837  00D1  00A0               	movwf	_Delay2
  1838  00D2  087A               	movf	_Ch0Delay+1,w
  1839  00D3  3B71               	subwfb	??_myIsr+1,w
  1840  00D4  00A1               	movwf	_Delay2+1
  1841  00D5  28FF               	goto	i1l1252
  1842  00D6                     i1l1238:	
  1843                           
  1844                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 135:                 Delay0.value = C
      +                          h0Delay.value;
  1845  00D6  087A               	movf	_Ch0Delay+1,w
  1846  00D7  00F8               	movwf	_Delay0+1
  1847  00D8  0879               	movf	_Ch0Delay,w
  1848  00D9  00F7               	movwf	_Delay0
  1849  00DA                     i1l1240:	
  1850                           
  1851                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 136:                 Flags0.ch0on0 = 
      +                          1;
  1852  00DA  157B               	bsf	_Flags0,2
  1853  00DB                     i1l1242:	
  1854                           
  1855                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 137:                 if (Ch1Delay.val
      +                          ue == 8192) {
  1856  00DB  3020               	movlw	32
  1857  00DC  0627               	xorwf	_Ch1Delay+1,w
  1858  00DD  0426               	iorwf	_Ch1Delay,w
  1859  00DE  1D03               	btfss	3,2
  1860  00DF  28E1               	goto	u57_21
  1861  00E0  28E2               	goto	u57_20
  1862  00E1                     u57_21:	
  1863  00E1  28EE               	goto	i1l1248
  1864  00E2                     u57_20:	
  1865  00E2                     i1l1244:	
  1866                           
  1867                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 138:                     Delay1.value
      +                           = 8192 - Delay0.value;
  1868  00E2  3000               	movlw	0
  1869  00E3  00F0               	movwf	??_myIsr
  1870  00E4  3020               	movlw	32
  1871  00E5  00F1               	movwf	??_myIsr+1
  1872  00E6  0877               	movf	_Delay0,w
  1873  00E7  0270               	subwf	??_myIsr,w
  1874  00E8  00A2               	movwf	_Delay1
  1875  00E9  0878               	movf	_Delay0+1,w
  1876  00EA  3B71               	subwfb	??_myIsr+1,w
  1877  00EB  00A3               	movwf	_Delay1+1
  1878  00EC                     i1l1246:	
  1879                           
  1880                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 139:                     Flags1.off2 
      +                          = 1;
  1881  00EC  1428               	bsf	_Flags1,0
  1882                           
  1883                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 140:                 } else {
  1884  00ED  28FF               	goto	i1l1252
  1885  00EE                     i1l1248:	
  1886                           
  1887                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 141:                     Delay1.value
      +                           = Ch1Delay.value - Ch0Delay.value;
  1888  00EE  0879               	movf	_Ch0Delay,w
  1889  00EF  0226               	subwf	_Ch1Delay,w
  1890  00F0  00A2               	movwf	_Delay1
  1891  00F1  087A               	movf	_Ch0Delay+1,w
  1892  00F2  3B27               	subwfb	_Ch1Delay+1,w
  1893  00F3  00A3               	movwf	_Delay1+1
  1894  00F4                     i1l1250:	
  1895                           
  1896                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 142:                     Flags0.ch1on
      +                          1 = 1;
  1897  00F4  16FB               	bsf	_Flags0,5
  1898                           
  1899                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 143:                     Delay2.value
      +                           = 8192 - Ch1Delay.value;
  1900  00F5  3000               	movlw	0
  1901  00F6  00F0               	movwf	??_myIsr
  1902  00F7  3020               	movlw	32
  1903  00F8  00F1               	movwf	??_myIsr+1
  1904  00F9  0826               	movf	_Ch1Delay,w
  1905  00FA  0270               	subwf	??_myIsr,w
  1906  00FB  00A0               	movwf	_Delay2
  1907  00FC  0827               	movf	_Ch1Delay+1,w
  1908  00FD  3B71               	subwfb	??_myIsr+1,w
  1909  00FE  00A1               	movwf	_Delay2+1
  1910  00FF                     i1l1252:	
  1911                           
  1912                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 148:             Delay0.value = ~Dela
      +                          y0.value;
  1913  00FF  09F7               	comf	_Delay0,f
  1914  0100  09F8               	comf	_Delay0+1,f
  1915  0101                     i1l1254:	
  1916                           
  1917                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 149:             Delay1.value = ~Dela
      +                          y1.value;
  1918  0101  0140               	movlb	0	; select bank0
  1919  0102  09A2               	comf	_Delay1,f
  1920  0103  09A3               	comf	_Delay1+1,f
  1921  0104                     i1l1256:	
  1922                           
  1923                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 150:             Delay2.value = ~Dela
      +                          y2.value;
  1924  0104  09A0               	comf	_Delay2,f
  1925  0105  09A1               	comf	_Delay2+1,f
  1926  0106  296E               	goto	i1l125
  1927  0107                     i1l87:	
  1928                           
  1929                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 153:         PIR0bits.TMR0IF = 0;
  1930  0107  128C               	bcf	12,5	;volatile
  1931                           
  1932                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 154:         switch(Flags0.delay) {
  1933  0108  2956               	goto	i1l1286
  1934  0109                     i1l1258:	
  1935                           
  1936                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 156:                 TMR0H = Delay0.m
      +                          sb;
  1937  0109  0878               	movf	_Delay0+1,w
  1938  010A  014B               	movlb	11	; select bank11
  1939  010B  009D               	movwf	29	;volatile
  1940                           
  1941                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 157:                 TMR0L = Delay0.l
      +                          sb;
  1942  010C  0877               	movf	_Delay0,w
  1943  010D  009C               	movwf	28	;volatile
  1944                           
  1945                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 158:                 break;
  1946  010E  296D               	goto	i1l112
  1947  010F                     i1l1260:	
  1948                           
  1949                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 160:                 TMR0H = Delay1.m
      +                          sb;
  1950  010F  0140               	movlb	0	; select bank0
  1951  0110  0823               	movf	_Delay1+1,w
  1952  0111  014B               	movlb	11	; select bank11
  1953  0112  009D               	movwf	29	;volatile
  1954                           
  1955                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 161:                 TMR0L = Delay1.l
      +                          sb;
  1956  0113  0140               	movlb	0	; select bank0
  1957  0114  0822               	movf	_Delay1,w
  1958  0115  014B               	movlb	11	; select bank11
  1959  0116  009C               	movwf	28	;volatile
  1960  0117                     i1l1262:	
  1961                           
  1962                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 162:                 if (Flags0.ch0on
      +                          0) {
  1963  0117  1D7B               	btfss	_Flags0,2
  1964  0118  291A               	goto	u58_21
  1965  0119  291B               	goto	u58_20
  1966  011A                     u58_21:	
  1967  011A  291D               	goto	i1l114
  1968  011B                     u58_20:	
  1969  011B                     i1l1264:	
  1970                           
  1971                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 163:                     LATAbits.LAT
      +                          A4 = 1;
  1972  011B  0140               	movlb	0	; select bank0
  1973  011C  1618               	bsf	24,4	;volatile
  1974  011D                     i1l114:	
  1975                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 164:                 }
  1976                           
  1977                           
  1978                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 165:                 if (Flags0.ch1on
      +                          0) {
  1979  011D  1DFB               	btfss	_Flags0,3
  1980  011E  2920               	goto	u59_21
  1981  011F  2921               	goto	u59_20
  1982  0120                     u59_21:	
  1983  0120  296D               	goto	i1l112
  1984  0121                     u59_20:	
  1985  0121                     i1l1266:	
  1986                           
  1987                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 166:                     LATAbits.LAT
      +                          A5 = 1;
  1988  0121  0140               	movlb	0	; select bank0
  1989  0122  1698               	bsf	24,5	;volatile
  1990  0123  296D               	goto	i1l112
  1991  0124                     i1l1268:	
  1992                           
  1993                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 170:                 TMR0H = Delay2.m
      +                          sb;
  1994  0124  0140               	movlb	0	; select bank0
  1995  0125  0821               	movf	_Delay2+1,w
  1996  0126  014B               	movlb	11	; select bank11
  1997  0127  009D               	movwf	29	;volatile
  1998                           
  1999                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 171:                 TMR0L = Delay2.l
      +                          sb;
  2000  0128  0140               	movlb	0	; select bank0
  2001  0129  0820               	movf	_Delay2,w
  2002  012A  014B               	movlb	11	; select bank11
  2003  012B  009C               	movwf	28	;volatile
  2004  012C                     i1l1270:	
  2005                           
  2006                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 172:                 if (Flags0.ch0on
      +                          1) {
  2007  012C  1E7B               	btfss	_Flags0,4
  2008  012D  292F               	goto	u60_21
  2009  012E  2930               	goto	u60_20
  2010  012F                     u60_21:	
  2011  012F  2932               	goto	i1l117
  2012  0130                     u60_20:	
  2013  0130                     i1l1272:	
  2014                           
  2015                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 173:                     LATAbits.LAT
      +                          A4 = 1;
  2016  0130  0140               	movlb	0	; select bank0
  2017  0131  1618               	bsf	24,4	;volatile
  2018  0132                     i1l117:	
  2019                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 174:                 }
  2020                           
  2021                           
  2022                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 175:                 if (Flags0.ch1on
      +                          1) {
  2023  0132  1EFB               	btfss	_Flags0,5
  2024  0133  2935               	goto	u61_21
  2025  0134  2936               	goto	u61_20
  2026  0135                     u61_21:	
  2027  0135  2938               	goto	i1l118
  2028  0136                     u61_20:	
  2029  0136                     i1l1274:	
  2030                           
  2031                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 176:                     LATAbits.LAT
      +                          A5 = 1;
  2032  0136  0140               	movlb	0	; select bank0
  2033  0137  1698               	bsf	24,5	;volatile
  2034  0138                     i1l118:	
  2035                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 177:                 }
  2036                           
  2037                           
  2038                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 178:                 if (Flags1.off2)
      +                           {
  2039  0138  0140               	movlb	0	; select bank0
  2040  0139  1C28               	btfss	_Flags1,0
  2041  013A  293C               	goto	u62_21
  2042  013B  293D               	goto	u62_20
  2043  013C                     u62_21:	
  2044  013C  296D               	goto	i1l112
  2045  013D                     u62_20:	
  2046  013D                     i1l1276:	
  2047                           
  2048                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 179:                     if (!Flags0.
      +                          ch0aon) {
  2049  013D  1B7B               	btfsc	_Flags0,6
  2050  013E  2940               	goto	u63_21
  2051  013F  2941               	goto	u63_20
  2052  0140                     u63_21:	
  2053  0140  2942               	goto	i1l120
  2054  0141                     u63_20:	
  2055  0141                     i1l1278:	
  2056                           
  2057                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 180:                         LATAbits
      +                          .LATA4 = 0;
  2058  0141  1218               	bcf	24,4	;volatile
  2059  0142                     i1l120:	
  2060                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 181:                     }
  2061                           
  2062                           
  2063                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 182:                     if (!Flags0.
      +                          ch1aon) {
  2064  0142  1BFB               	btfsc	_Flags0,7
  2065  0143  2945               	goto	u64_21
  2066  0144  2946               	goto	u64_20
  2067  0145                     u64_21:	
  2068  0145  296D               	goto	i1l112
  2069  0146                     u64_20:	
  2070  0146                     i1l1280:	
  2071                           
  2072                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 183:                         LATAbits
      +                          .LATA5 = 0;
  2073  0146  1298               	bcf	24,5	;volatile
  2074  0147  296D               	goto	i1l112
  2075  0148                     i1l122:	
  2076                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 187:             case 3:
  2077                           
  2078                           
  2079                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 188:                 if (!Flags0.ch0a
      +                          on) {
  2080  0148  1B7B               	btfsc	_Flags0,6
  2081  0149  294B               	goto	u65_21
  2082  014A  294C               	goto	u65_20
  2083  014B                     u65_21:	
  2084  014B  294E               	goto	i1l123
  2085  014C                     u65_20:	
  2086  014C                     i1l1282:	
  2087                           
  2088                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 189:                     LATAbits.LAT
      +                          A4 = 0;
  2089  014C  0140               	movlb	0	; select bank0
  2090  014D  1218               	bcf	24,4	;volatile
  2091  014E                     i1l123:	
  2092                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 190:                 }
  2093                           
  2094                           
  2095                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 191:                 if (!Flags0.ch1a
      +                          on) {
  2096  014E  1BFB               	btfsc	_Flags0,7
  2097  014F  2951               	goto	u66_21
  2098  0150  2952               	goto	u66_20
  2099  0151                     u66_21:	
  2100  0151  2954               	goto	i1l124
  2101  0152                     u66_20:	
  2102  0152                     i1l1284:	
  2103                           
  2104                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 192:                     LATAbits.LAT
      +                          A5 = 0;
  2105  0152  0140               	movlb	0	; select bank0
  2106  0153  1298               	bcf	24,5	;volatile
  2107  0154                     i1l124:	
  2108                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 193:                 }
  2109                           
  2110  0154  03FB               	decf	_Flags0,f	;# 
  2111                           
  2112                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 195:         }
  2113  0155  296D               	goto	i1l112
  2114  0156                     i1l1286:	
  2115  0156  087B               	movf	_Flags0,w
  2116  0157  3903               	andlw	3
  2117  0158  00F0               	movwf	??_myIsr
  2118  0159  01F1               	clrf	??_myIsr+1
  2119                           
  2120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2121                           ; Switch size 1, requested type "simple"
  2122                           ; Number of cases is 1, Range of values is 0 to 0
  2123                           ; switch strategies available:
  2124                           ; Name         Instructions Cycles
  2125                           ; simple_byte            4     3 (average)
  2126                           ; direct_byte            8     6 (fixed)
  2127                           ; jumptable            260     6 (fixed)
  2128                           ;	Chosen strategy is simple_byte
  2129  015A  0871               	movf	??_myIsr+1,w
  2130  015B  3A00               	xorlw	0	; case 0
  2131  015C  1903               	skipnz
  2132  015D  295F               	goto	i1l1732
  2133  015E  296D               	goto	i1l112
  2134  015F                     i1l1732:	
  2135                           
  2136                           ; Switch size 1, requested type "simple"
  2137                           ; Number of cases is 4, Range of values is 0 to 3
  2138                           ; switch strategies available:
  2139                           ; Name         Instructions Cycles
  2140                           ; simple_byte           13     7 (average)
  2141                           ; direct_byte           14     6 (fixed)
  2142                           ; jumptable            260     6 (fixed)
  2143                           ;	Chosen strategy is simple_byte
  2144  015F  0870               	movf	??_myIsr,w
  2145  0160  3A00               	xorlw	0	; case 0
  2146  0161  1903               	skipnz
  2147  0162  2909               	goto	i1l1258
  2148  0163  3A01               	xorlw	1	; case 1
  2149  0164  1903               	skipnz
  2150  0165  290F               	goto	i1l1260
  2151  0166  3A03               	xorlw	3	; case 2
  2152  0167  1903               	skipnz
  2153  0168  2924               	goto	i1l1268
  2154  0169  3A01               	xorlw	1	; case 3
  2155  016A  1903               	skipnz
  2156  016B  2948               	goto	i1l122
  2157  016C  296D               	goto	i1l112
  2158  016D                     i1l112:	
  2159  016D  0AFB               	incf	_Flags0,f	;# 
  2160  016E                     i1l125:	
  2161  016E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2162  016F  0009               	retfie
  2163  0170                     __end_of_myIsr:	
  2164  007E                     btemp	set	126	;btemp
  2165  007E                     int$flags	set	126
  2166  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         17
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      2      14
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_sendInt
    _sendInt->_nibbleToHex
    _sendInt->_sendChar

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     365
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                        _hexToNibble
                           _sendChar
                            _sendInt
 ---------------------------------------------------------------------------------
 (1) _sendInt                                              3     3      0     157
                                              3 COMMON     3     3      0
                        _nibbleToHex
                           _sendChar
 ---------------------------------------------------------------------------------
 (2) _sendChar                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _nibbleToHex                                          1     1      0      66
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _hexToNibble                                          1     1      0      66
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myIsr                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _hexToNibble
   _sendChar
   _sendInt
     _nibbleToHex
     _sendChar

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       E       5       17.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      1A      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      1A      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Mar  3 20:36:47 2020

            __CFG_CP$OFF 0000                       _Rx 0029              __CFG_LVP$ON 0000  
                    l132 0314                      l142 0312                      l135 031C  
                    l129 0305                      l138 02F8                      l148 02AE  
                    l175 0283                      l184 02DC                      u430 0300  
                    _PR2 028D                      u431 02FF                      u440 0319  
                    u441 0318                      u450 030D                      u451 030C  
                    u900 01E1                      u901 01E0                      u910 01EE  
                    u911 01ED                      u920 020E                      u921 020D  
                    u930 023D                      u850 01BB                      u931 023C  
                    u851 01BA                      u940 0241                      u860 01C0  
                    u941 0240                      u861 01BF                      u950 024A  
                    u870 01C7                      u951 0249                      u871 01C6  
                    u960 0262                      u880 01CC                      u961 0261  
                    u881 01CB                      u970 0266                      u890 01DC  
                    u971 0265                      u891 01DB                      u980 026F  
                    u981 026E                      u990 02B3                      u991 02B2  
                    _Cmd 002B             __CFG_BORV$HI 0000            __CFG_BBEN$OFF 0000  
           __CFG_ZCD$OFF 0000                     l1120 0303                     l1114 02FA  
                   l1130 02E6                     l1116 0300                     l1124 0314  
                   l1132 02ED                     l1142 0310                     l1126 0319  
                   l1134 02F1                     l1136 0307                     l1128 02DF  
                   l1138 030D                     l1600 021B                     l1520 0191  
                   l1512 0186                     l1610 023D                     l1602 0224  
                   l1530 019E                     l1522 0195                     l1514 0189  
                   l1612 0241                     l1620 025D                     l1604 022C  
                   l1540 01AA                     l1532 01A0                     l1524 0197  
                   l1516 018A                     l1630 0278                     l1622 0262  
                   l1614 024B                     l1606 0230                     l1550 01B1  
                   l1542 01AC                     l1534 01A2                     l1526 019A  
                   l1518 018F                     l1640 02B3                     l1632 0284  
                   l1624 0266                     l1616 024F                     l1608 0238  
                   l1560 01BB                     l1552 01B3                     l1544 01AE  
                   l1536 01A5                     l1528 019C                     l1650 02C4  
                   l1642 02B7                     l1730 0292                     l1626 0270  
                   l1618 0253                     l1562 01C0                     l1570 01D1  
                   l1554 01B4                     l1546 01AF                     l1538 01A8  
                   l1660 02D7                     l1652 02C7                     l1644 02B9  
                   l1628 0274                     l1580 01E9                     l1636 0289  
                   l1572 01D6                     l1564 01C1                     l1556 01B5  
                   l1548 01B0                     l1654 02CC                     l1590 0200  
                   l1638 02A9                     l1582 01EE                     l1574 01DC  
                   l1646 02BA                     l1566 01C7                     l1558 01B6  
                   l1648 02C0                     l1592 0208                     l1584 01F1  
                   l1576 01E1                     l1568 01CC                     l1658 02D1  
                   l1586 01F4                     l1578 01E5                     l1596 020F  
                   l1588 01FC                     l1598 0217                     u1000 02C0  
                   u1001 02BF                     u1010 02CC                     u1011 02CB  
                   u1020 02D7                     u1021 02D6                     _LATA 0018  
                   _LATC 001A                     i1l87 0107                     _main 0186  
           hexToNibble@c 0072                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0170            __CFG_MCLRE$ON 0000             ?_nibbleToHex 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _T2CON 028E  
                  i1l120 0142                    i1l112 016D                    i1l122 0148  
                  i1l114 011D                    i1l123 014E                    i1l124 0154  
                  i1l117 0132                    i1l125 016E                    i1l118 0138  
                  _TMR0H 059D                    _TMR0L 059C                    u50_20 0045  
                  u50_21 0044                    u51_20 005F                    u51_21 005E  
                  u60_20 0130                    u52_20 0068                    u60_21 012F  
                  u52_21 0067                    u61_20 0136                    u53_20 0086  
                  u61_21 0135                    u53_21 0085                    u53_25 0082  
                  u62_20 013D                    u54_20 008D                    u46_20 000B  
                  u62_21 013C                    u54_21 008C                    u46_21 000A  
                  u63_20 0141                    u55_20 00AC                    u47_20 0018  
                  u63_21 0140                    u55_21 00AB                    u47_21 0017  
                  u55_25 00A8                    u64_20 0146                    u56_20 00B8  
                  u48_20 0031                    u64_21 0145                    u56_21 00B7  
                  u48_21 0030                    u65_20 014C                    u57_20 00E2  
                  u49_20 0039                    u65_21 014B                    u57_21 00E1  
                  u49_21 0038                    _TRISA 0012                    _TRISC 0014  
                  u66_20 0152                    u58_20 011B                    u66_21 0151  
                  u58_21 011A                    u59_20 0121                    u59_21 0120  
         __CFG_FCMEN$OFF 0000            __CFG_WRTB$OFF 0000            __CFG_WRTC$OFF 0000  
                  _myIsr 0004          __end_of_sendInt 02F9                    status 0003  
                  wtemp0 007E           __CFG_CSWEN$OFF 0000          __initialization 0171  
           __end_of_main 02DE           __CFG_SAFEN$OFF 0000                   ??_main 002C  
                 ?_myIsr 0070                   _ANSELA 1F38                   _ANSELC 1F4E  
                 _T0CON1 059F                   _RA0PPS 1F10                   _RC1REG 0119  
                 _RC1STA 011D                   i1l1200 006F                   i1l1210 008D  
                 i1l1202 0070                   i1l1220 00A0                   i1l1212 0090  
                 i1l1204 007A                   i1l1230 00B8                   i1l1214 0094  
                 i1l1222 00A2                   i1l1206 007C                   i1l1150 000C  
                 i1l1240 00DA                   i1l1232 00C2                   i1l1224 00AC  
                 i1l1216 0095                   i1l1208 0086                   i1l1160 001D  
                 i1l1152 0011                   i1l1250 00F4                   i1l1242 00DB  
                 i1l1234 00C4                   i1l1226 00B0                   i1l1218 0096  
                 i1l1170 002B                   i1l1162 0021                   i1l1154 0013  
                 i1l1146 0006                   i1l1260 010F                   i1l1244 00E2  
                 i1l1236 00CA                   i1l1228 00B1                   i1l1180 0045  
                 i1l1252 00FF                   i1l1172 0031                   i1l1164 0025  
                 i1l1156 0018                   i1l1148 000B                   i1l1270 012C  
                 i1l1262 0117                   i1l1254 0101                   i1l1246 00EC  
                 i1l1238 00D6                   i1l1182 0048                   i1l1174 0033  
                 i1l1190 0059                   i1l1166 0029                   i1l1158 001A  
                 i1l1280 0146                   i1l1272 0130                   i1l1264 011B  
                 i1l1256 0104                   i1l1248 00EE                   i1l1192 005F  
                 i1l1184 004C                   i1l1176 0039                   i1l1168 002A  
                 i1l1282 014C                   i1l1274 0136                   i1l1266 0121  
                 i1l1258 0109                   i1l1194 0061                   i1l1186 004D  
                 i1l1178 003E                   i1l1284 0152                   i1l1276 013D  
                 i1l1268 0124                   i1l1196 0068                   i1l1188 0057  
                 i1l1278 0141                   i1l1286 0156                   i1l1198 006B  
                 i1l1732 015F           __CFG_WDTCCS$SC 0000                   _ZCDCON 091F  
                 _TX1REG 011A                   _TX1STA 011E                   _CmdVal 0024  
                 _Delay0 0077                   _Delay1 0022                   _Delay2 0020  
                 _Flags0 007B                   _Flags1 0028           __CFG_PWRTE$OFF 0000  
                 _RcvCnt 002A     __size_of_hexToNibble 000D           __CFG_STVREN$ON 0000  
       __end_of_sendChar 031D                ??_sendInt 0073  __end_of__initialization 0183  
         __pcstackCOMMON 0070            __end_of_myIsr 0170     __size_of_nibbleToHex 000D  
                ??_myIsr 0070               __pbssBANK0 0020               __pmaintext 0186  
        __CFG_PPS1WAY$ON 0000               __pintentry 0004             nibbleToHex@i 0072  
                _SP1BRGL 011B                ?_sendChar 0070                  __ptext1 02DE  
                __ptext2 0313                  __ptext3 02F9                  __ptext4 0306  
        __CFG_WRTAPP$OFF 0000                  _sendInt 02DE          __CFG_WRTSAF$OFF 0000  
   end_of_initialization 0183               ??_sendChar 0072    __CFG_WDTCPS$WDTCPS_31 0000  
       __CFG_FEXTOSC$OFF 0000            ??_hexToNibble 0072      start_initialization 0171  
       __CFG_LPBOREN$OFF 0000            ??_nibbleToHex 0072      __end_of_hexToNibble 0313  
            __pbssCOMMON 0077                ___latbits 0000            __pcstackBANK0 002C  
             sendInt@tmp 0074        __size_of_sendChar 000A      __end_of_nibbleToHex 0306  
               ?_sendInt 0070     __CFG_RSTOSC$HFINTPLL 0000                 _T2CLKCON 0290  
         __size_of_myIsr 016C                 _LATAbits 0018                 _Ch0Delay 0079  
               _PIE0bits 0716                 _Ch1Delay 0026                 _PIE4bits 071A  
            _hexToNibble 0306                 _PIR0bits 070C                 _PIR3bits 070F  
               _PIR4bits 0710                 _RX1DTPPS 1ECB        __CFG_BBSIZE$BB512 0000  
               _TX1CKPPS 1ECC                main@state 0076              _nibbleToHex 02F9  
              sendChar@c 0072               _T0CON0bits 059E         __size_of_sendInt 001B  
          __size_of_main 0158                 _sendChar 0313     __CFG_WDTCWS$WDTCWS_7 0000  
             _RC1STAbits 011D                 int$flags 007E               _INTCONbits 000B  
               intlevel1 0000                 sendInt@i 0075        __CFG_CLKOUTEN$OFF 0000  
           ?_hexToNibble 0070  
