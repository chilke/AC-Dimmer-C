

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Apr  6 20:05:57 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16LF15323
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16LF15323 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000E                     	;# 
    65  0012                     	;# 
    66  0014                     	;# 
    67  0018                     	;# 
    68  001A                     	;# 
    69  009B                     	;# 
    70  009B                     	;# 
    71  009C                     	;# 
    72  009D                     	;# 
    73  009E                     	;# 
    74  009F                     	;# 
    75  0119                     	;# 
    76  0119                     	;# 
    77  0119                     	;# 
    78  011A                     	;# 
    79  011A                     	;# 
    80  011A                     	;# 
    81  011B                     	;# 
    82  011B                     	;# 
    83  011B                     	;# 
    84  011B                     	;# 
    85  011B                     	;# 
    86  011C                     	;# 
    87  011C                     	;# 
    88  011C                     	;# 
    89  011D                     	;# 
    90  011D                     	;# 
    91  011D                     	;# 
    92  011E                     	;# 
    93  011E                     	;# 
    94  011E                     	;# 
    95  011F                     	;# 
    96  011F                     	;# 
    97  011F                     	;# 
    98  011F                     	;# 
    99  011F                     	;# 
   100  018C                     	;# 
   101  018D                     	;# 
   102  018E                     	;# 
   103  018F                     	;# 
   104  0190                     	;# 
   105  0191                     	;# 
   106  0192                     	;# 
   107  020C                     	;# 
   108  020C                     	;# 
   109  020D                     	;# 
   110  020E                     	;# 
   111  020F                     	;# 
   112  020F                     	;# 
   113  0210                     	;# 
   114  0210                     	;# 
   115  0211                     	;# 
   116  0211                     	;# 
   117  028C                     	;# 
   118  028C                     	;# 
   119  028D                     	;# 
   120  028D                     	;# 
   121  028E                     	;# 
   122  028F                     	;# 
   123  0290                     	;# 
   124  0291                     	;# 
   125  030C                     	;# 
   126  030C                     	;# 
   127  030D                     	;# 
   128  030E                     	;# 
   129  030F                     	;# 
   130  0310                     	;# 
   131  0310                     	;# 
   132  0311                     	;# 
   133  0312                     	;# 
   134  0313                     	;# 
   135  0314                     	;# 
   136  0314                     	;# 
   137  0315                     	;# 
   138  0316                     	;# 
   139  0318                     	;# 
   140  0318                     	;# 
   141  0319                     	;# 
   142  031A                     	;# 
   143  031C                     	;# 
   144  031C                     	;# 
   145  031D                     	;# 
   146  031E                     	;# 
   147  038C                     	;# 
   148  038C                     	;# 
   149  038D                     	;# 
   150  038E                     	;# 
   151  058C                     	;# 
   152  058C                     	;# 
   153  058D                     	;# 
   154  058E                     	;# 
   155  058F                     	;# 
   156  058F                     	;# 
   157  0590                     	;# 
   158  0591                     	;# 
   159  0592                     	;# 
   160  0593                     	;# 
   161  059C                     	;# 
   162  059C                     	;# 
   163  059D                     	;# 
   164  059D                     	;# 
   165  059E                     	;# 
   166  059F                     	;# 
   167  060C                     	;# 
   168  060D                     	;# 
   169  060E                     	;# 
   170  060F                     	;# 
   171  0610                     	;# 
   172  0611                     	;# 
   173  0612                     	;# 
   174  0613                     	;# 
   175  0614                     	;# 
   176  070C                     	;# 
   177  070D                     	;# 
   178  070E                     	;# 
   179  070F                     	;# 
   180  0710                     	;# 
   181  0711                     	;# 
   182  0712                     	;# 
   183  0713                     	;# 
   184  0716                     	;# 
   185  0717                     	;# 
   186  0718                     	;# 
   187  0719                     	;# 
   188  071A                     	;# 
   189  071B                     	;# 
   190  071C                     	;# 
   191  071D                     	;# 
   192  0796                     	;# 
   193  0797                     	;# 
   194  0798                     	;# 
   195  0799                     	;# 
   196  079A                     	;# 
   197  079B                     	;# 
   198  080C                     	;# 
   199  080D                     	;# 
   200  080E                     	;# 
   201  080F                     	;# 
   202  0810                     	;# 
   203  0811                     	;# 
   204  0813                     	;# 
   205  0814                     	;# 
   206  081A                     	;# 
   207  081A                     	;# 
   208  081B                     	;# 
   209  081C                     	;# 
   210  081C                     	;# 
   211  081D                     	;# 
   212  081E                     	;# 
   213  081F                     	;# 
   214  088C                     	;# 
   215  088D                     	;# 
   216  088E                     	;# 
   217  088F                     	;# 
   218  0890                     	;# 
   219  0891                     	;# 
   220  0892                     	;# 
   221  0893                     	;# 
   222  0895                     	;# 
   223  0896                     	;# 
   224  090C                     	;# 
   225  090E                     	;# 
   226  090F                     	;# 
   227  091F                     	;# 
   228  098F                     	;# 
   229  098F                     	;# 
   230  0990                     	;# 
   231  0991                     	;# 
   232  0992                     	;# 
   233  0993                     	;# 
   234  0994                     	;# 
   235  0995                     	;# 
   236  0996                     	;# 
   237  0997                     	;# 
   238  1E0F                     	;# 
   239  1E10                     	;# 
   240  1E11                     	;# 
   241  1E12                     	;# 
   242  1E13                     	;# 
   243  1E14                     	;# 
   244  1E15                     	;# 
   245  1E16                     	;# 
   246  1E17                     	;# 
   247  1E18                     	;# 
   248  1E19                     	;# 
   249  1E1A                     	;# 
   250  1E1B                     	;# 
   251  1E1C                     	;# 
   252  1E1D                     	;# 
   253  1E1E                     	;# 
   254  1E1F                     	;# 
   255  1E20                     	;# 
   256  1E21                     	;# 
   257  1E22                     	;# 
   258  1E23                     	;# 
   259  1E24                     	;# 
   260  1E25                     	;# 
   261  1E26                     	;# 
   262  1E27                     	;# 
   263  1E28                     	;# 
   264  1E29                     	;# 
   265  1E2A                     	;# 
   266  1E2B                     	;# 
   267  1E2C                     	;# 
   268  1E2D                     	;# 
   269  1E2E                     	;# 
   270  1E2F                     	;# 
   271  1E30                     	;# 
   272  1E31                     	;# 
   273  1E32                     	;# 
   274  1E33                     	;# 
   275  1E34                     	;# 
   276  1E35                     	;# 
   277  1E36                     	;# 
   278  1E37                     	;# 
   279  1E8F                     	;# 
   280  1E90                     	;# 
   281  1E91                     	;# 
   282  1E92                     	;# 
   283  1E93                     	;# 
   284  1E9C                     	;# 
   285  1EA1                     	;# 
   286  1EA2                     	;# 
   287  1EB1                     	;# 
   288  1EBB                     	;# 
   289  1EBC                     	;# 
   290  1EBD                     	;# 
   291  1EBE                     	;# 
   292  1EC3                     	;# 
   293  1EC5                     	;# 
   294  1EC6                     	;# 
   295  1EC7                     	;# 
   296  1ECB                     	;# 
   297  1ECC                     	;# 
   298  1F10                     	;# 
   299  1F11                     	;# 
   300  1F12                     	;# 
   301  1F13                     	;# 
   302  1F14                     	;# 
   303  1F15                     	;# 
   304  1F20                     	;# 
   305  1F21                     	;# 
   306  1F22                     	;# 
   307  1F23                     	;# 
   308  1F24                     	;# 
   309  1F25                     	;# 
   310  1F38                     	;# 
   311  1F39                     	;# 
   312  1F3A                     	;# 
   313  1F3B                     	;# 
   314  1F3C                     	;# 
   315  1F3D                     	;# 
   316  1F3E                     	;# 
   317  1F3F                     	;# 
   318  1F4E                     	;# 
   319  1F4F                     	;# 
   320  1F50                     	;# 
   321  1F51                     	;# 
   322  1F52                     	;# 
   323  1F53                     	;# 
   324  1F54                     	;# 
   325  1F55                     	;# 
   326  1FE4                     	;# 
   327  1FE5                     	;# 
   328  1FE6                     	;# 
   329  1FE7                     	;# 
   330  1FE8                     	;# 
   331  1FE8                     	;# 
   332  1FE9                     	;# 
   333  1FEA                     	;# 
   334  1FEA                     	;# 
   335  1FEB                     	;# 
   336  1FED                     	;# 
   337  1FEE                     	;# 
   338  1FEF                     	;# 
   339  000B                     _INTCONbits	set	11
   340  0014                     _TRISC	set	20
   341  0012                     _TRISA	set	18
   342  001A                     _LATC	set	26
   343  0018                     _LATA	set	24
   344  0018                     _LATAbits	set	24
   345  0119                     _RC1REG	set	281
   346  011D                     _RC1STAbits	set	285
   347  011D                     _RC1STA	set	285
   348  011E                     _TX1STA	set	286
   349  011B                     _SP1BRGL	set	283
   350  011A                     _TX1REG	set	282
   351  028E                     _T2CON	set	654
   352  028D                     _PR2	set	653
   353  0290                     _T2CLKCON	set	656
   354  059F                     _T0CON1	set	1439
   355  059E                     _T0CON0bits	set	1438
   356  059C                     _TMR0L	set	1436
   357  059D                     _TMR0H	set	1437
   358  0716                     _PIE0bits	set	1814
   359  071A                     _PIE4bits	set	1818
   360  070F                     _PIR3bits	set	1807
   361  070C                     _PIR0bits	set	1804
   362  0710                     _PIR4bits	set	1808
   363  091F                     _ZCDCON	set	2335
   364  1ECB                     _RX1DTPPS	set	7883
   365  1ECC                     _TX1CKPPS	set	7884
   366  1F10                     _RA0PPS	set	7952
   367  1F4E                     _ANSELC	set	8014
   368  1F38                     _ANSELA	set	7992
   369                           
   370                           ; #config settings
   371  0000                     
   372                           	psect	cinit
   373  0176                     start_initialization:	
   374  0176                     __initialization:	
   375                           
   376                           ; Clear objects allocated to COMMON
   377  0176  01F7               	clrf	__pbssCOMMON& (0+127)
   378  0177  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   379  0178  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   380  0179  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   381  017A  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   382                           
   383                           ; Clear objects allocated to BANK0
   384  017B  0140               	movlb	0	; select bank0
   385  017C  01A0               	clrf	__pbssBANK0& (0+127)
   386  017D  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   387  017E  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   388  017F  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   389  0180  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   390  0181  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   391  0182  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   392  0183  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   393  0184  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   394  0185  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   395  0186  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   396  0187  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   397  0188                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  0188                     __end_of__initialization:	
   401  0188  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   402  0189  0140               	movlb	0
   403  018A  298B               	ljmp	_main	;jump to C main() function
   404                           
   405                           	psect	bssCOMMON
   406  0077                     __pbssCOMMON:	
   407  0077                     _Delay0:	
   408  0077                     	ds	2
   409  0079                     _Ch0Delay:	
   410  0079                     	ds	2
   411  007B                     _Flags0:	
   412  007B                     	ds	1
   413                           
   414                           	psect	bssBANK0
   415  0020                     __pbssBANK0:	
   416  0020                     _Delay2:	
   417  0020                     	ds	2
   418  0022                     _Delay1:	
   419  0022                     	ds	2
   420  0024                     _CmdVal:	
   421  0024                     	ds	2
   422  0026                     _Ch1Delay:	
   423  0026                     	ds	2
   424  0028                     _Flags1:	
   425  0028                     	ds	1
   426  0029                     _Rx:	
   427  0029                     	ds	1
   428  002A                     _RcvCnt:	
   429  002A                     	ds	1
   430  002B                     _Cmd:	
   431  002B                     	ds	1
   432                           
   433                           	psect	cstackCOMMON
   434  0070                     __pcstackCOMMON:	
   435  0070                     ?_myIsr:	
   436  0070                     ??_myIsr:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_nibbleToHex:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_sendChar:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_sendInt:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_hexToNibble:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_main:	
   452                           ; 1 bytes @ 0x0
   453                           
   454                           
   455                           ; 2 bytes @ 0x0
   456  0070                     	ds	2
   457  0072                     ??_nibbleToHex:	
   458  0072                     ??_sendChar:	
   459                           ; 1 bytes @ 0x2
   460                           
   461  0072                     ??_hexToNibble:	
   462                           ; 1 bytes @ 0x2
   463                           
   464  0072                     nibbleToHex@i:	
   465                           ; 1 bytes @ 0x2
   466                           
   467  0072                     sendChar@c:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0072                     hexToNibble@c:	
   471                           ; 1 bytes @ 0x2
   472                           
   473                           
   474                           ; 1 bytes @ 0x2
   475  0072                     	ds	1
   476  0073                     ??_sendInt:	
   477                           
   478                           ; 1 bytes @ 0x3
   479  0073                     	ds	1
   480  0074                     sendInt@tmp:	
   481                           
   482                           ; 1 bytes @ 0x4
   483  0074                     	ds	1
   484  0075                     sendInt@i:	
   485                           
   486                           ; 1 bytes @ 0x5
   487  0075                     	ds	1
   488  0076                     main@state:	
   489                           
   490                           ; 1 bytes @ 0x6
   491  0076                     	ds	1
   492                           
   493                           	psect	cstackBANK0
   494  002C                     __pcstackBANK0:	
   495  002C                     ??_main:	
   496                           
   497                           ; 1 bytes @ 0x0
   498  002C                     	ds	2
   499                           
   500                           	psect	maintext
   501  018B                     __pmaintext:	
   502 ;;
   503 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   504 ;;
   505 ;; *************** function _main *****************
   506 ;; Defined at:
   507 ;;		line 228 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  state           1    6[COMMON] unsigned char 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  2  146[None  ] int 
   514 ;; Registers used:
   515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : B3F/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   521 ;;      Params:         0       0       0       0
   522 ;;      Locals:         1       0       0       0
   523 ;;      Temps:          0       2       0       0
   524 ;;      Totals:         1       2       0       0
   525 ;;Total ram usage:        3 bytes
   526 ;; Hardware stack levels required when called:    3
   527 ;; This function calls:
   528 ;;		_hexToNibble
   529 ;;		_sendChar
   530 ;;		_sendInt
   531 ;; This function is called by:
   532 ;;		Startup code after reset
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           
   537                           ;psect for function _main
   538  018B                     _main:	
   539  018B                     l1519:	
   540                           ;incstack = 0
   541                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   542                           
   543                           
   544                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 230:     uchar state;;/Users/craig/MP
      +                          LABXProjects/AC-Dimmer-C.X/main.c: 232:     ANSELA = 0b00000100;
   545  018B  3004               	movlw	4
   546  018C  017E               	movlb	62	; select bank62
   547  018D  00B8               	movwf	56	;volatile
   548  018E                     l1521:	
   549                           
   550                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 234:     ANSELC = 0b00000000;
   551  018E  01CE               	clrf	78	;volatile
   552  018F                     l1523:	
   553                           
   554                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 238:     RA0PPS = 0xF;
   555  018F  300F               	movlw	15
   556  0190  0090               	movwf	16	;volatile
   557                           
   558                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 242:     LATA = 0b00000000;
   559  0191  0140               	movlb	0	; select bank0
   560  0192  0198               	clrf	24	;volatile
   561                           
   562                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 244:     LATC = 0b00000000;
   563  0193  019A               	clrf	26	;volatile
   564  0194                     l1525:	
   565                           
   566                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 246:     TRISA = 0b11001110;
   567  0194  30CE               	movlw	206
   568  0195  0092               	movwf	18	;volatile
   569  0196                     l1527:	
   570                           
   571                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 248:     TRISC = 0b11111111;
   572  0196  30FF               	movlw	255
   573  0197  0094               	movwf	20	;volatile
   574                           
   575                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 252:     TX1CKPPS = 0x00;
   576  0198  017D               	movlb	61	; select bank61
   577  0199  01CC               	clrf	76	;volatile
   578  019A                     l1529:	
   579                           
   580                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 253:     RX1DTPPS = 0x01;
   581  019A  3001               	movlw	1
   582  019B  00CB               	movwf	75	;volatile
   583  019C                     l1531:	
   584                           
   585                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 259:     SP1BRGL = 16;
   586  019C  3010               	movlw	16
   587  019D  0142               	movlb	2	; select bank2
   588  019E  009B               	movwf	27	;volatile
   589  019F                     l1533:	
   590                           
   591                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 261:     TX1STA = 0b00100100;
   592  019F  3024               	movlw	36
   593  01A0  009E               	movwf	30	;volatile
   594  01A1                     l1535:	
   595                           
   596                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 262:     RC1STA = 0b10010000;
   597  01A1  3090               	movlw	144
   598  01A2  009D               	movwf	29	;volatile
   599  01A3                     l1537:	
   600                           
   601                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 269:     T0CON0bits.T016BIT = 1;
   602  01A3  014B               	movlb	11	; select bank11
   603  01A4  161E               	bsf	30,4	;volatile
   604  01A5                     l1539:	
   605                           
   606                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 270:     T0CON1 = 0b01000011;
   607  01A5  3043               	movlw	67
   608  01A6  009F               	movwf	31	;volatile
   609  01A7                     l1541:	
   610                           
   611                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 273:     ZCDCON = 0b10000011;
   612  01A7  3083               	movlw	131
   613  01A8  0152               	movlb	18	; select bank18
   614  01A9  009F               	movwf	31	;volatile
   615  01AA                     l1543:	
   616                           
   617                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 277:     T2CLKCON = 0b00000110;
   618  01AA  3006               	movlw	6
   619  01AB  0145               	movlb	5	; select bank5
   620  01AC  0090               	movwf	16	;volatile
   621  01AD                     l1545:	
   622                           
   623                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 279:     PR2 = 133;
   624  01AD  3085               	movlw	133
   625  01AE  008D               	movwf	13	;volatile
   626  01AF                     l1547:	
   627                           
   628                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 280:     T2CON = 0b10010000;
   629  01AF  3090               	movlw	144
   630  01B0  008E               	movwf	14	;volatile
   631  01B1                     l1549:	
   632                           
   633                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 281:     PIE4bits.TMR2IE = 1;
   634  01B1  014E               	movlb	14	; select bank14
   635  01B2  149A               	bsf	26,1	;volatile
   636  01B3                     l1551:	
   637                           
   638                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 287:     INTCONbits.PEIE = 1;
   639  01B3  170B               	bsf	11,6	;volatile
   640  01B4                     l1553:	
   641                           
   642                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 288:     INTCONbits.GIE = 1;
   643  01B4  178B               	bsf	11,7	;volatile
   644  01B5                     l1555:	
   645                           
   646                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 291:     PIE0bits.TMR0IE = 1;
   647  01B5  1696               	bsf	22,5	;volatile
   648  01B6                     l1557:	
   649                           
   650                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 293:     RcvCnt = 0;
   651  01B6  0140               	movlb	0	; select bank0
   652  01B7  01AA               	clrf	_RcvCnt
   653  01B8                     l1559:	
   654                           
   655                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 294:     Flags1.value = 0;
   656  01B8  01A8               	clrf	_Flags1
   657  01B9                     l1561:	
   658                           
   659                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 295:     Flags0.value = 0;
   660  01B9  01FB               	clrf	_Flags0
   661                           
   662                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 296:     Ch0Delay.value = 8191;
   663  01BA  30FF               	movlw	255
   664  01BB  00F9               	movwf	_Ch0Delay
   665  01BC  301F               	movlw	31
   666  01BD  00FA               	movwf	_Ch0Delay+1
   667                           
   668                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 297:     Ch1Delay.value = 8191;
   669  01BE  30FF               	movlw	255
   670  01BF  00A6               	movwf	_Ch1Delay
   671  01C0  301F               	movlw	31
   672  01C1  00A7               	movwf	_Ch1Delay+1
   673  01C2                     l1563:	
   674                           
   675                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 300:         state = 0;
   676  01C2  01F6               	clrf	main@state
   677  01C3                     l1565:	
   678                           
   679                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 301:         if (PIR3bits.RC1IF) {
   680  01C3  014E               	movlb	14	; select bank14
   681  01C4  1E8F               	btfss	15,5	;volatile
   682  01C5  29C7               	goto	u811
   683  01C6  29C8               	goto	u810
   684  01C7                     u811:	
   685  01C7  2ABA               	goto	l148
   686  01C8                     u810:	
   687  01C8                     l1567:	
   688                           
   689                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 302:             if (RC1STAbits.FERR)
      +                           {
   690  01C8  0142               	movlb	2	; select bank2
   691  01C9  1D1D               	btfss	29,2	;volatile
   692  01CA  29CC               	goto	u821
   693  01CB  29CD               	goto	u820
   694  01CC                     u821:	
   695  01CC  29DE               	goto	l1577
   696  01CD                     u820:	
   697  01CD                     l1569:	
   698                           
   699                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 303:                 RC1REG;
   700  01CD  0819               	movf	25,w	;volatile
   701  01CE                     l1571:	
   702                           
   703                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 305:                 if (Rx != 0 || R
      +                          cvCnt != 0) {
   704  01CE  0140               	movlb	0	; select bank0
   705  01CF  0829               	movf	_Rx,w
   706  01D0  1D03               	btfss	3,2
   707  01D1  29D3               	goto	u831
   708  01D2  29D4               	goto	u830
   709  01D3                     u831:	
   710  01D3  29D9               	goto	l1575
   711  01D4                     u830:	
   712  01D4                     l1573:	
   713  01D4  082A               	movf	_RcvCnt,w
   714  01D5  1903               	btfsc	3,2
   715  01D6  29D8               	goto	u841
   716  01D7  29D9               	goto	u840
   717  01D8                     u841:	
   718  01D8  2AC6               	goto	l1659
   719  01D9                     u840:	
   720  01D9                     l1575:	
   721                           
   722                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 306:                     state = 3;
   723  01D9  3003               	movlw	3
   724  01DA  00AC               	movwf	??_main
   725  01DB  082C               	movf	??_main,w
   726  01DC  00F6               	movwf	main@state
   727  01DD  2AC6               	goto	l1659
   728  01DE                     l1577:	
   729                           
   730                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 309:                 Rx = RC1REG;
   731  01DE  0819               	movf	25,w	;volatile
   732  01DF  0140               	movlb	0	; select bank0
   733  01E0  00AC               	movwf	??_main
   734  01E1  082C               	movf	??_main,w
   735  01E2  00A9               	movwf	_Rx
   736  01E3                     l1579:	
   737                           
   738                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 310:                 if (Rx == 'S') {
   739  01E3  3053               	movlw	83
   740  01E4  0629               	xorwf	_Rx,w
   741  01E5  1D03               	btfss	3,2
   742  01E6  29E8               	goto	u851
   743  01E7  29E9               	goto	u850
   744  01E8                     u851:	
   745  01E8  2A95               	goto	l1649
   746  01E9                     u850:	
   747  01E9                     l1581:	
   748                           
   749                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 311:                     if (RcvCnt !
      +                          = 0) {
   750  01E9  082A               	movf	_RcvCnt,w
   751  01EA  1903               	btfsc	3,2
   752  01EB  29ED               	goto	u861
   753  01EC  29EE               	goto	u860
   754  01ED                     u861:	
   755  01ED  29F2               	goto	l1585
   756  01EE                     u860:	
   757  01EE                     l1583:	
   758                           
   759                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 312:                         sendChar
      +                          ('N');
   760  01EE  304E               	movlw	78
   761  01EF  3183  231F  3181   	fcall	_sendChar
   762  01F2                     l1585:	
   763                           
   764                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 314:                     RcvCnt = 1;
   765  01F2  0140               	movlb	0	; select bank0
   766  01F3  01AA               	clrf	_RcvCnt
   767  01F4  0AAA               	incf	_RcvCnt,f
   768                           
   769                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 315:                 } else {
   770  01F5  2AC6               	goto	l1659
   771  01F6                     l1587:	
   772                           
   773                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 318:                             if (
      +                          Rx != 0) {
   774  01F6  0829               	movf	_Rx,w
   775  01F7  1903               	btfsc	3,2
   776  01F8  29FA               	goto	u871
   777  01F9  29FB               	goto	u870
   778  01FA                     u871:	
   779  01FA  29FE               	goto	l1591
   780  01FB                     u870:	
   781  01FB                     l1589:	
   782                           
   783                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 319:                                 
      +                          state = 1;
   784  01FB  01F6               	clrf	main@state
   785  01FC  0AF6               	incf	main@state,f
   786                           
   787                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 320:                             } el
      +                          se {
   788  01FD  2AB5               	goto	l1651
   789  01FE                     l1591:	
   790                           
   791                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 321:                                 
      +                          RcvCnt--;
   792  01FE  3001               	movlw	1
   793  01FF  02AA               	subwf	_RcvCnt,f
   794  0200  2AB5               	goto	l1651
   795  0201                     l1593:	
   796                           
   797                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 325:                             Cmd 
      +                          = hexToNibble(Rx);
   798  0201  0829               	movf	_Rx,w
   799  0202  3183  2312  3181   	fcall	_hexToNibble
   800  0205  0140               	movlb	0	; select bank0
   801  0206  00AC               	movwf	??_main
   802  0207  082C               	movf	??_main,w
   803  0208  00AB               	movwf	_Cmd
   804  0209                     l1595:	
   805                           
   806                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 326:                             Cmd 
      +                          <<= 4;
   807  0209  0EAB               	swapf	_Cmd,f
   808  020A  30F0               	movlw	240
   809  020B  05AB               	andwf	_Cmd,f
   810                           
   811                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 327:                             brea
      +                          k;
   812  020C  2AB5               	goto	l1651
   813  020D                     l1597:	
   814                           
   815                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 329:                             Cmd 
      +                          += hexToNibble(Rx);
   816  020D  0829               	movf	_Rx,w
   817  020E  3183  2312  3181   	fcall	_hexToNibble
   818  0211  0140               	movlb	0	; select bank0
   819  0212  00AC               	movwf	??_main
   820  0213  082C               	movf	??_main,w
   821  0214  07AB               	addwf	_Cmd,f
   822  0215                     l1599:	
   823                           
   824                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 330:                             if (
      +                          Cmd > 1) {
   825  0215  3002               	movlw	2
   826  0216  022B               	subwf	_Cmd,w
   827  0217  1C03               	skipc
   828  0218  2A1A               	goto	u881
   829  0219  2A1B               	goto	u880
   830  021A                     u881:	
   831  021A  2AB5               	goto	l1651
   832  021B                     u880:	
   833  021B  29FB               	goto	l1589
   834  021C                     l1603:	
   835                           
   836                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 335:                             CmdV
      +                          al.msb = hexToNibble(Rx);
   837  021C  0829               	movf	_Rx,w
   838  021D  3183  2312  3181   	fcall	_hexToNibble
   839  0220  0140               	movlb	0	; select bank0
   840  0221  00AC               	movwf	??_main
   841  0222  082C               	movf	??_main,w
   842  0223  00A5               	movwf	_CmdVal+1
   843  0224                     l1605:	
   844                           
   845                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 336:                             CmdV
      +                          al.msb <<= 4;
   846  0224  0EA5               	swapf	_CmdVal+1,f
   847  0225  30F0               	movlw	240
   848  0226  05A5               	andwf	_CmdVal+1,f
   849                           
   850                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 337:                             brea
      +                          k;
   851  0227  2AB5               	goto	l1651
   852  0228                     l1607:	
   853                           
   854                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 339:                             CmdV
      +                          al.msb += hexToNibble(Rx);
   855  0228  0829               	movf	_Rx,w
   856  0229  3183  2312  3181   	fcall	_hexToNibble
   857  022C  0140               	movlb	0	; select bank0
   858  022D  00AC               	movwf	??_main
   859  022E  082C               	movf	??_main,w
   860  022F  07A5               	addwf	_CmdVal+1,f
   861                           
   862                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 340:                             brea
      +                          k;
   863  0230  2AB5               	goto	l1651
   864  0231                     l1609:	
   865                           
   866                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 342:                             CmdV
      +                          al.lsb = hexToNibble(Rx);
   867  0231  0829               	movf	_Rx,w
   868  0232  3183  2312  3181   	fcall	_hexToNibble
   869  0235  0140               	movlb	0	; select bank0
   870  0236  00AC               	movwf	??_main
   871  0237  082C               	movf	??_main,w
   872  0238  00A4               	movwf	_CmdVal
   873  0239                     l1611:	
   874                           
   875                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 343:                             CmdV
      +                          al.lsb <<= 4;
   876  0239  0EA4               	swapf	_CmdVal,f
   877  023A  30F0               	movlw	240
   878  023B  05A4               	andwf	_CmdVal,f
   879                           
   880                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 344:                             brea
      +                          k;
   881  023C  2AB5               	goto	l1651
   882  023D                     l1613:	
   883                           
   884                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 346:                             CmdV
      +                          al.lsb += hexToNibble(Rx);
   885  023D  0829               	movf	_Rx,w
   886  023E  3183  2312  3181   	fcall	_hexToNibble
   887  0241  0140               	movlb	0	; select bank0
   888  0242  00AC               	movwf	??_main
   889  0243  082C               	movf	??_main,w
   890  0244  07A4               	addwf	_CmdVal,f
   891  0245                     l1615:	
   892                           
   893                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 347:                             if (
      +                          Cmd == 0) {
   894  0245  082B               	movf	_Cmd,w
   895  0246  1D03               	btfss	3,2
   896  0247  2A49               	goto	u891
   897  0248  2A4A               	goto	u890
   898  0249                     u891:	
   899  0249  2A6F               	goto	l1631
   900  024A                     u890:	
   901  024A                     l1617:	
   902                           
   903                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 348:                                 
      +                          if (CmdVal.value > 8191) {
   904  024A  3020               	movlw	32
   905  024B  0225               	subwf	_CmdVal+1,w
   906  024C  3000               	movlw	0
   907  024D  1903               	skipnz
   908  024E  0224               	subwf	_CmdVal,w
   909  024F  1C03               	skipc
   910  0250  2A52               	goto	u901
   911  0251  2A53               	goto	u900
   912  0252                     u901:	
   913  0252  2A54               	goto	l170
   914  0253                     u900:	
   915  0253  29FB               	goto	l1589
   916  0254                     l170:	
   917                           
   918                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 351:                                 
      +                              Flags1.update = 0;
   919  0254  10A8               	bcf	_Flags1,1
   920  0255                     l1621:	
   921                           
   922                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 352:                                 
      +                              Ch0Delay.value = 8191 -CmdVal.value;
   923  0255  30FF               	movlw	255
   924  0256  00AC               	movwf	??_main
   925  0257  301F               	movlw	31
   926  0258  00AD               	movwf	??_main+1
   927  0259  0824               	movf	_CmdVal,w
   928  025A  022C               	subwf	??_main,w
   929  025B  00F9               	movwf	_Ch0Delay
   930  025C  0825               	movf	_CmdVal+1,w
   931  025D  3B2D               	subwfb	??_main+1,w
   932  025E  00FA               	movwf	_Ch0Delay+1
   933  025F                     l1623:	
   934                           
   935                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 353:                                 
      +                              sendInt(CmdVal.msb);
   936  025F  0825               	movf	_CmdVal+1,w
   937  0260  3182  22EA  3181   	fcall	_sendInt
   938  0263                     l1625:	
   939                           
   940                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 354:                                 
      +                              sendInt(CmdVal.lsb);
   941  0263  0140               	movlb	0	; select bank0
   942  0264  0824               	movf	_CmdVal,w
   943  0265  3182  22EA  3181   	fcall	_sendInt
   944  0268                     l1627:	
   945                           
   946                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 355:                                 
      +                              Flags1.update = 1;
   947  0268  0140               	movlb	0	; select bank0
   948  0269  14A8               	bsf	_Flags1,1
   949  026A                     l1629:	
   950                           
   951                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 356:                                 
      +                              state = 2;
   952  026A  3002               	movlw	2
   953  026B  00AC               	movwf	??_main
   954  026C  082C               	movf	??_main,w
   955  026D  00F6               	movwf	main@state
   956  026E  2AB5               	goto	l1651
   957  026F                     l1631:	
   958  026F  032B               	decf	_Cmd,w
   959  0270  1D03               	btfss	3,2
   960  0271  2A73               	goto	u911
   961  0272  2A74               	goto	u910
   962  0273                     u911:	
   963  0273  2AB5               	goto	l1651
   964  0274                     u910:	
   965  0274                     l1633:	
   966                           
   967                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 359:                                 
      +                          if (CmdVal.value > 8191) {
   968  0274  3020               	movlw	32
   969  0275  0225               	subwf	_CmdVal+1,w
   970  0276  3000               	movlw	0
   971  0277  1903               	skipnz
   972  0278  0224               	subwf	_CmdVal,w
   973  0279  1C03               	skipc
   974  027A  2A7C               	goto	u921
   975  027B  2A7D               	goto	u920
   976  027C                     u921:	
   977  027C  2A7E               	goto	l174
   978  027D                     u920:	
   979  027D  29FB               	goto	l1589
   980  027E                     l174:	
   981                           
   982                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 362:                                 
      +                              Flags1.update = 0;
   983  027E  10A8               	bcf	_Flags1,1
   984  027F                     l1637:	
   985                           
   986                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 363:                                 
      +                              Ch1Delay.value = 8191 -CmdVal.value;
   987  027F  30FF               	movlw	255
   988  0280  00AC               	movwf	??_main
   989  0281  301F               	movlw	31
   990  0282  00AD               	movwf	??_main+1
   991  0283  0824               	movf	_CmdVal,w
   992  0284  022C               	subwf	??_main,w
   993  0285  00A6               	movwf	_Ch1Delay
   994  0286  0825               	movf	_CmdVal+1,w
   995  0287  3B2D               	subwfb	??_main+1,w
   996  0288  00A7               	movwf	_Ch1Delay+1
   997  0289                     l1639:	
   998                           
   999                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 364:                                 
      +                              sendInt(CmdVal.msb);
  1000  0289  0825               	movf	_CmdVal+1,w
  1001  028A  3182  22EA  3181   	fcall	_sendInt
  1002  028D                     l1641:	
  1003                           
  1004                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 365:                                 
      +                              sendInt(CmdVal.lsb);
  1005  028D  0140               	movlb	0	; select bank0
  1006  028E  0824               	movf	_CmdVal,w
  1007  028F  3182  22EA  3181   	fcall	_sendInt
  1008  0292                     l1643:	
  1009                           
  1010                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 366:                                 
      +                              Flags1.update = 1;
  1011  0292  0140               	movlb	0	; select bank0
  1012  0293  14A8               	bsf	_Flags1,1
  1013  0294  2A6A               	goto	l1629
  1014  0295                     l1649:	
  1015  0295  082A               	movf	_RcvCnt,w
  1016  0296  3907               	andlw	7
  1017  0297  00AC               	movwf	??_main
  1018  0298  01AD               	clrf	??_main+1
  1019                           
  1020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1021                           ; Switch size 1, requested type "simple"
  1022                           ; Number of cases is 1, Range of values is 0 to 0
  1023                           ; switch strategies available:
  1024                           ; Name         Instructions Cycles
  1025                           ; simple_byte            4     3 (average)
  1026                           ; direct_byte            8     6 (fixed)
  1027                           ; jumptable            260     6 (fixed)
  1028                           ;	Chosen strategy is simple_byte
  1029  0299  082D               	movf	??_main+1,w
  1030  029A  3A00               	xorlw	0	; case 0
  1031  029B  1903               	skipnz
  1032  029C  2A9E               	goto	l1743
  1033  029D  2AB5               	goto	l1651
  1034  029E                     l1743:	
  1035                           
  1036                           ; Switch size 1, requested type "simple"
  1037                           ; Number of cases is 7, Range of values is 0 to 6
  1038                           ; switch strategies available:
  1039                           ; Name         Instructions Cycles
  1040                           ; direct_byte           20     6 (fixed)
  1041                           ; simple_byte           22    12 (average)
  1042                           ; jumptable            260     6 (fixed)
  1043                           ;	Chosen strategy is simple_byte
  1044  029E  082C               	movf	??_main,w
  1045  029F  3A00               	xorlw	0	; case 0
  1046  02A0  1903               	skipnz
  1047  02A1  29F6               	goto	l1587
  1048  02A2  3A01               	xorlw	1	; case 1
  1049  02A3  1903               	skipnz
  1050  02A4  2A01               	goto	l1593
  1051  02A5  3A03               	xorlw	3	; case 2
  1052  02A6  1903               	skipnz
  1053  02A7  2A0D               	goto	l1597
  1054  02A8  3A01               	xorlw	1	; case 3
  1055  02A9  1903               	skipnz
  1056  02AA  2A1C               	goto	l1603
  1057  02AB  3A07               	xorlw	7	; case 4
  1058  02AC  1903               	skipnz
  1059  02AD  2A28               	goto	l1607
  1060  02AE  3A01               	xorlw	1	; case 5
  1061  02AF  1903               	skipnz
  1062  02B0  2A31               	goto	l1609
  1063  02B1  3A03               	xorlw	3	; case 6
  1064  02B2  1903               	skipnz
  1065  02B3  2A3D               	goto	l1613
  1066  02B4  2AB5               	goto	l1651
  1067  02B5                     l1651:	
  1068                           
  1069                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 372:                     RcvCnt++;
  1070  02B5  3001               	movlw	1
  1071  02B6  00AC               	movwf	??_main
  1072  02B7  082C               	movf	??_main,w
  1073  02B8  07AA               	addwf	_RcvCnt,f
  1074  02B9  2AC6               	goto	l1659
  1075  02BA                     l148:	
  1076  02BA  0142               	movlb	2	; select bank2
  1077  02BB  1C9D               	btfss	29,1	;volatile
  1078  02BC  2ABE               	goto	u931
  1079  02BD  2ABF               	goto	u930
  1080  02BE                     u931:	
  1081  02BE  2AC6               	goto	l1659
  1082  02BF                     u930:	
  1083  02BF                     l1653:	
  1084                           
  1085                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 376:             sendChar('O');
  1086  02BF  304F               	movlw	79
  1087  02C0  3183  231F  3181   	fcall	_sendChar
  1088  02C3                     l1655:	
  1089                           
  1090                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 377:             RC1STAbits.CREN = 0;
  1091  02C3  0142               	movlb	2	; select bank2
  1092  02C4  121D               	bcf	29,4	;volatile
  1093  02C5                     l1657:	
  1094                           
  1095                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 378:             RC1STAbits.CREN = 1;
  1096  02C5  161D               	bsf	29,4	;volatile
  1097  02C6                     l1659:	
  1098                           
  1099                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 381:         if (state == 2) {
  1100  02C6  3002               	movlw	2
  1101  02C7  0676               	xorwf	main@state,w
  1102  02C8  1D03               	btfss	3,2
  1103  02C9  2ACB               	goto	u941
  1104  02CA  2ACC               	goto	u940
  1105  02CB                     u941:	
  1106  02CB  2AD3               	goto	l1665
  1107  02CC                     u940:	
  1108  02CC                     l1661:	
  1109                           
  1110                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 382:             sendChar('K');
  1111  02CC  304B               	movlw	75
  1112  02CD  3183  231F  3181   	fcall	_sendChar
  1113  02D0                     l1663:	
  1114                           
  1115                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 383:             RcvCnt = 0;
  1116  02D0  0140               	movlb	0	; select bank0
  1117  02D1  01AA               	clrf	_RcvCnt
  1118                           
  1119                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 384:         } else if (state == 1) {
  1120  02D2  29C2               	goto	l1563
  1121  02D3                     l1665:	
  1122  02D3  0376               	decf	main@state,w
  1123  02D4  1D03               	btfss	3,2
  1124  02D5  2AD7               	goto	u951
  1125  02D6  2AD8               	goto	u950
  1126  02D7                     u951:	
  1127  02D7  2ADD               	goto	l1671
  1128  02D8                     u950:	
  1129  02D8                     l1667:	
  1130                           
  1131                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 385:             sendChar('N');
  1132  02D8  304E               	movlw	78
  1133  02D9  3183  231F  3181   	fcall	_sendChar
  1134  02DC  2AD0               	goto	l1663
  1135  02DD                     l1671:	
  1136  02DD  3003               	movlw	3
  1137  02DE  0676               	xorwf	main@state,w
  1138  02DF  1D03               	btfss	3,2
  1139  02E0  2AE2               	goto	u961
  1140  02E1  2AE3               	goto	u960
  1141  02E2                     u961:	
  1142  02E2  2AE8               	goto	l179
  1143  02E3                     u960:	
  1144  02E3                     l1673:	
  1145                           
  1146                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 388:             sendChar('Z');
  1147  02E3  305A               	movlw	90
  1148  02E4  3183  231F  3181   	fcall	_sendChar
  1149  02E7  2AD0               	goto	l1663
  1150  02E8                     l179:	
  1151  02E8  29C2               	goto	l1563
  1152  02E9  2975               	ljmp	start
  1153  02EA                     __end_of_main:	
  1154                           
  1155                           	psect	text1
  1156  02EA                     __ptext1:	
  1157 ;; *************** function _sendInt *****************
  1158 ;; Defined at:
  1159 ;;		line 213 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  i               1    wreg     unsigned char 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  i               1    5[COMMON] unsigned char 
  1164 ;;  tmp             1    4[COMMON] unsigned char 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0, pclath, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1174 ;;      Params:         0       0       0       0
  1175 ;;      Locals:         2       0       0       0
  1176 ;;      Temps:          1       0       0       0
  1177 ;;      Totals:         3       0       0       0
  1178 ;;Total ram usage:        3 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    2
  1181 ;; This function calls:
  1182 ;;		_nibbleToHex
  1183 ;;		_sendChar
  1184 ;; This function is called by:
  1185 ;;		_main
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           
  1190                           ;psect for function _sendInt
  1191  02EA                     _sendInt:	
  1192                           
  1193                           ;incstack = 0
  1194                           ; Regs used in _sendInt: [wreg+status,2+status,0+pclath+cstack]
  1195                           ;sendInt@i stored from wreg
  1196  02EA  00F5               	movwf	sendInt@i
  1197  02EB                     l1129:	
  1198                           
  1199                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 214:     uchar tmp = i;
  1200  02EB  0875               	movf	sendInt@i,w
  1201  02EC  00F3               	movwf	??_sendInt
  1202  02ED  0873               	movf	??_sendInt,w
  1203  02EE  00F4               	movwf	sendInt@tmp
  1204                           
  1205                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 215:     tmp >>= 4;
  1206  02EF  0EF4               	swapf	sendInt@tmp,f
  1207  02F0  300F               	movlw	15
  1208  02F1  05F4               	andwf	sendInt@tmp,f
  1209  02F2                     l1131:	
  1210                           
  1211                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 216:     sendChar(nibbleToHex(tmp));
  1212  02F2  0874               	movf	sendInt@tmp,w
  1213  02F3  3183  2305  3182   	fcall	_nibbleToHex
  1214  02F6  3183  231F  3182   	fcall	_sendChar
  1215  02F9                     l1133:	
  1216                           
  1217                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 217:     i &= 0xF;
  1218  02F9  300F               	movlw	15
  1219  02FA  00F3               	movwf	??_sendInt
  1220  02FB  0873               	movf	??_sendInt,w
  1221  02FC  05F5               	andwf	sendInt@i,f
  1222  02FD                     l1135:	
  1223                           
  1224                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 218:     sendChar(nibbleToHex(i));
  1225  02FD  0875               	movf	sendInt@i,w
  1226  02FE  3183  2305  3182   	fcall	_nibbleToHex
  1227  0301  3183  231F  3182   	fcall	_sendChar
  1228  0304                     l138:	
  1229  0304  0008               	return
  1230  0305                     __end_of_sendInt:	
  1231                           
  1232                           	psect	text2
  1233  031F                     __ptext2:	
  1234 ;; *************** function _sendChar *****************
  1235 ;; Defined at:
  1236 ;;		line 208 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  c               1    wreg     unsigned char 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  c               1    2[COMMON] unsigned char 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1250 ;;      Params:         0       0       0       0
  1251 ;;      Locals:         1       0       0       0
  1252 ;;      Temps:          0       0       0       0
  1253 ;;      Totals:         1       0       0       0
  1254 ;;Total ram usage:        1 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    1
  1257 ;; This function calls:
  1258 ;;		Nothing
  1259 ;; This function is called by:
  1260 ;;		_sendInt
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           
  1266                           ;psect for function _sendChar
  1267  031F                     _sendChar:	
  1268                           
  1269                           ;incstack = 0
  1270                           ; Regs used in _sendChar: [wreg]
  1271                           ;sendChar@c stored from wreg
  1272  031F  00F2               	movwf	sendChar@c
  1273  0320                     l1125:	
  1274  0320                     l132:	
  1275                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 209:     while (!PIR3bits.TX1IF);
  1276                           
  1277  0320  014E               	movlb	14	; select bank14
  1278  0321  1E0F               	btfss	15,4	;volatile
  1279  0322  2B24               	goto	u421
  1280  0323  2B25               	goto	u420
  1281  0324                     u421:	
  1282  0324  2B20               	goto	l132
  1283  0325                     u420:	
  1284  0325                     l1127:	
  1285                           
  1286                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 210:     TX1REG = c;
  1287  0325  0872               	movf	sendChar@c,w
  1288  0326  0142               	movlb	2	; select bank2
  1289  0327  009A               	movwf	26	;volatile
  1290  0328                     l135:	
  1291  0328  0008               	return
  1292  0329                     __end_of_sendChar:	
  1293                           
  1294                           	psect	text3
  1295  0305                     __ptext3:	
  1296 ;; *************** function _nibbleToHex *****************
  1297 ;; Defined at:
  1298 ;;		line 201 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  i               1    wreg     unsigned char 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  i               1    2[COMMON] unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      unsigned char 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1312 ;;      Params:         0       0       0       0
  1313 ;;      Locals:         1       0       0       0
  1314 ;;      Temps:          0       0       0       0
  1315 ;;      Totals:         1       0       0       0
  1316 ;;Total ram usage:        1 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    1
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_sendInt
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           
  1327                           ;psect for function _nibbleToHex
  1328  0305                     _nibbleToHex:	
  1329                           
  1330                           ;incstack = 0
  1331                           ; Regs used in _nibbleToHex: [wreg+status,2+status,0]
  1332                           ;nibbleToHex@i stored from wreg
  1333  0305  00F2               	movwf	nibbleToHex@i
  1334  0306                     l1115:	
  1335                           
  1336                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 202:     if (i >= 10) {
  1337  0306  300A               	movlw	10
  1338  0307  0272               	subwf	nibbleToHex@i,w
  1339  0308  1C03               	skipc
  1340  0309  2B0B               	goto	u411
  1341  030A  2B0C               	goto	u410
  1342  030B                     u411:	
  1343  030B  2B0F               	goto	l1121
  1344  030C                     u410:	
  1345  030C                     l1117:	
  1346                           
  1347                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 203:         return 'A'+i-10;
  1348  030C  0872               	movf	nibbleToHex@i,w
  1349  030D  3E37               	addlw	55
  1350  030E  2B11               	goto	l129
  1351  030F                     l1121:	
  1352                           
  1353                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 205:     return '0'+i;
  1354  030F  0872               	movf	nibbleToHex@i,w
  1355  0310  3E30               	addlw	48
  1356  0311                     l129:	
  1357  0311  0008               	return
  1358  0312                     __end_of_nibbleToHex:	
  1359                           
  1360                           	psect	text4
  1361  0312                     __ptext4:	
  1362 ;; *************** function _hexToNibble *****************
  1363 ;; Defined at:
  1364 ;;		line 221 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  c               1    wreg     unsigned char 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  c               1    2[COMMON] unsigned char 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      unsigned char 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1378 ;;      Params:         0       0       0       0
  1379 ;;      Locals:         1       0       0       0
  1380 ;;      Temps:          0       0       0       0
  1381 ;;      Totals:         1       0       0       0
  1382 ;;Total ram usage:        1 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    1
  1385 ;; This function calls:
  1386 ;;		Nothing
  1387 ;; This function is called by:
  1388 ;;		_main
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           
  1393                           ;psect for function _hexToNibble
  1394  0312                     _hexToNibble:	
  1395                           
  1396                           ;incstack = 0
  1397                           ; Regs used in _hexToNibble: [wreg+status,2+status,0]
  1398                           ;hexToNibble@c stored from wreg
  1399  0312  00F2               	movwf	hexToNibble@c
  1400  0313                     l1137:	
  1401                           
  1402                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 222:     if (c >= 'A') {
  1403  0313  3041               	movlw	65
  1404  0314  0272               	subwf	hexToNibble@c,w
  1405  0315  1C03               	skipc
  1406  0316  2B18               	goto	u431
  1407  0317  2B19               	goto	u430
  1408  0318                     u431:	
  1409  0318  2B1C               	goto	l1143
  1410  0319                     u430:	
  1411  0319                     l1139:	
  1412                           
  1413                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 223:         return c-'A'+10;
  1414  0319  0872               	movf	hexToNibble@c,w
  1415  031A  3EC9               	addlw	201
  1416  031B  2B1E               	goto	l142
  1417  031C                     l1143:	
  1418                           
  1419                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 225:     return c-'0';
  1420  031C  0872               	movf	hexToNibble@c,w
  1421  031D  3ED0               	addlw	208
  1422  031E                     l142:	
  1423  031E  0008               	return
  1424  031F                     __end_of_hexToNibble:	
  1425                           
  1426                           	psect	intentry
  1427  0004                     __pintentry:	
  1428 ;; *************** function _myIsr *****************
  1429 ;; Defined at:
  1430 ;;		line 59 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;		None
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1444 ;;      Params:         0       0       0       0
  1445 ;;      Locals:         0       0       0       0
  1446 ;;      Temps:          2       0       0       0
  1447 ;;      Totals:         2       0       0       0
  1448 ;;Total ram usage:        2 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		Interrupt level 1
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457  0004                     _myIsr:	
  1458                           
  1459                           ;incstack = 0
  1460  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1461                           
  1462                           ; Regs used in _myIsr: [wreg-fsr0h+status,2+status,0]
  1463  0005  3180               	pagesel	$
  1464  0006                     i1l1147:	
  1465                           
  1466                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 61:     if (PIR4bits.TMR2IF) {
  1467  0006  014E               	movlb	14	; select bank14
  1468  0007  1C90               	btfss	16,1	;volatile
  1469  0008  280A               	goto	u44_21
  1470  0009  280B               	goto	u44_20
  1471  000A                     u44_21:	
  1472  000A  290C               	goto	i1l87
  1473  000B                     u44_20:	
  1474  000B                     i1l1149:	
  1475                           
  1476                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 62:         PIR4bits.TMR2IF = 0;
  1477  000B  1090               	bcf	16,1	;volatile
  1478  000C                     i1l1151:	
  1479                           
  1480                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 67:         TMR0H = (0xFF74 >> 8);
  1481  000C  30FF               	movlw	255
  1482  000D  014B               	movlb	11	; select bank11
  1483  000E  009D               	movwf	29	;volatile
  1484                           
  1485                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 68:         TMR0L = (0xFF74 & 0xFF);
  1486  000F  3074               	movlw	116
  1487  0010  009C               	movwf	28	;volatile
  1488  0011                     i1l1153:	
  1489                           
  1490                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 69:         Flags0.delay = 0;
  1491  0011  30FC               	movlw	-4
  1492  0012  05FB               	andwf	_Flags0,f
  1493  0013                     i1l1155:	
  1494                           
  1495                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 71:         if (Flags1.update) {
  1496  0013  0140               	movlb	0	; select bank0
  1497  0014  1CA8               	btfss	_Flags1,1
  1498  0015  2817               	goto	u45_21
  1499  0016  2818               	goto	u45_20
  1500  0017                     u45_21:	
  1501  0017  2973               	goto	i1l125
  1502  0018                     u45_20:	
  1503  0018                     i1l1157:	
  1504                           
  1505                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 72:             T0CON0bits.T0EN = 1;
  1506  0018  014B               	movlb	11	; select bank11
  1507  0019  179E               	bsf	30,7	;volatile
  1508  001A                     i1l1159:	
  1509                           
  1510                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 74:             Flags0.value = 0;
  1511  001A  01FB               	clrf	_Flags0
  1512                           
  1513                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 75:             Flags1.value = 0;
  1514  001B  0140               	movlb	0	; select bank0
  1515  001C  01A8               	clrf	_Flags1
  1516  001D                     i1l1161:	
  1517                           
  1518                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 76:             Delay0.value = 0xFFFF
      +                          ;
  1519  001D  30FF               	movlw	255
  1520  001E  00F7               	movwf	_Delay0
  1521  001F  30FF               	movlw	255
  1522  0020  00F8               	movwf	_Delay0+1
  1523  0021                     i1l1163:	
  1524                           
  1525                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 77:             Delay1.value = 0xFFFF
      +                          ;
  1526  0021  30FF               	movlw	255
  1527  0022  00A2               	movwf	_Delay1
  1528  0023  30FF               	movlw	255
  1529  0024  00A3               	movwf	_Delay1+1
  1530  0025                     i1l1165:	
  1531                           
  1532                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 78:             Delay2.value = 0xFFFF
      +                          ;
  1533  0025  30FF               	movlw	255
  1534  0026  00A0               	movwf	_Delay2
  1535  0027  30FF               	movlw	255
  1536  0028  00A1               	movwf	_Delay2+1
  1537  0029                     i1l1167:	
  1538                           
  1539                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 80:             LATAbits.LATA4 = 0;
  1540  0029  1218               	bcf	24,4	;volatile
  1541  002A                     i1l1169:	
  1542                           
  1543                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 81:             LATAbits.LATA5 = 0;
  1544  002A  1298               	bcf	24,5	;volatile
  1545  002B                     i1l1171:	
  1546                           
  1547                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 83:             if (Ch0Delay.value ==
      +                           0) {
  1548  002B  0879               	movf	_Ch0Delay,w
  1549  002C  047A               	iorwf	_Ch0Delay+1,w
  1550  002D  1D03               	btfss	3,2
  1551  002E  2830               	goto	u46_21
  1552  002F  2831               	goto	u46_20
  1553  0030                     u46_21:	
  1554  0030  285A               	goto	i1l1191
  1555  0031                     u46_20:	
  1556  0031                     i1l1173:	
  1557                           
  1558                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 84:                 Flags0.ch0aon = 1
      +                          ;
  1559  0031  177B               	bsf	_Flags0,6
  1560                           
  1561                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 85:                 LATAbits.LATA4 = 
      +                          1;
  1562  0032  1618               	bsf	24,4	;volatile
  1563  0033                     i1l1175:	
  1564                           
  1565                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 87:                 if (Ch1Delay.valu
      +                          e == 0) {
  1566  0033  0826               	movf	_Ch1Delay,w
  1567  0034  0427               	iorwf	_Ch1Delay+1,w
  1568  0035  1D03               	btfss	3,2
  1569  0036  2838               	goto	u47_21
  1570  0037  2839               	goto	u47_20
  1571  0038                     u47_21:	
  1572  0038  283E               	goto	i1l1179
  1573  0039                     u47_20:	
  1574  0039                     i1l1177:	
  1575                           
  1576                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 88:                     Flags0.ch1aon
      +                           = 1;
  1577  0039  17FB               	bsf	_Flags0,7
  1578                           
  1579                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 89:                     LATAbits.LATA
      +                          5 = 1;
  1580  003A  1698               	bsf	24,5	;volatile
  1581                           
  1582                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 90:                     T0CON0bits.T0
      +                          EN = 0;
  1583  003B  014B               	movlb	11	; select bank11
  1584  003C  139E               	bcf	30,7	;volatile
  1585                           
  1586                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 91:                 } else {
  1587  003D  2904               	goto	i1l1253
  1588  003E                     i1l1179:	
  1589                           
  1590                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 92:                     if (Ch1Delay.
      +                          value == 8191) {
  1591  003E  0A26               	incf	_Ch1Delay,w
  1592  003F  301F               	movlw	31
  1593  0040  1903               	skipnz
  1594  0041  0627               	xorwf	_Ch1Delay+1,w
  1595  0042  1D03               	btfss	3,2
  1596  0043  2845               	goto	u48_21
  1597  0044  2846               	goto	u48_20
  1598  0045                     u48_21:	
  1599  0045  2849               	goto	i1l1183
  1600  0046                     u48_20:	
  1601  0046                     i1l1181:	
  1602                           
  1603                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 93:                         T0CON0bit
      +                          s.T0EN = 0;
  1604  0046  014B               	movlb	11	; select bank11
  1605  0047  139E               	bcf	30,7	;volatile
  1606                           
  1607                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 94:                     } else {
  1608  0048  2904               	goto	i1l1253
  1609  0049                     i1l1183:	
  1610                           
  1611                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 95:                         Delay0.va
      +                          lue = Ch1Delay.value;
  1612  0049  0827               	movf	_Ch1Delay+1,w
  1613  004A  00F8               	movwf	_Delay0+1
  1614  004B  0826               	movf	_Ch1Delay,w
  1615  004C  00F7               	movwf	_Delay0
  1616  004D                     i1l1185:	
  1617                           
  1618                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 96:                         Flags0.ch
      +                          1on0 = 1;
  1619  004D  15FB               	bsf	_Flags0,3
  1620  004E                     i1l1187:	
  1621                           
  1622                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 97:                         Delay1.va
      +                          lue = 8191 - Ch1Delay.value;
  1623  004E  30FF               	movlw	255
  1624  004F  00F0               	movwf	??_myIsr
  1625  0050  301F               	movlw	31
  1626  0051  00F1               	movwf	??_myIsr+1
  1627  0052  0826               	movf	_Ch1Delay,w
  1628  0053  0270               	subwf	??_myIsr,w
  1629  0054  00A2               	movwf	_Delay1
  1630  0055  0827               	movf	_Ch1Delay+1,w
  1631  0056  3B71               	subwfb	??_myIsr+1,w
  1632  0057  00A3               	movwf	_Delay1+1
  1633  0058                     i1l1189:	
  1634                           
  1635                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 98:                         Flags1.of
      +                          f2 = 1;
  1636  0058  1428               	bsf	_Flags1,0
  1637  0059  2904               	goto	i1l1253
  1638  005A                     i1l1191:	
  1639  005A  0826               	movf	_Ch1Delay,w
  1640  005B  0427               	iorwf	_Ch1Delay+1,w
  1641  005C  1D03               	btfss	3,2
  1642  005D  285F               	goto	u49_21
  1643  005E  2860               	goto	u49_20
  1644  005F                     u49_21:	
  1645  005F  287E               	goto	i1l1207
  1646  0060                     u49_20:	
  1647  0060                     i1l1193:	
  1648                           
  1649                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 102:                 Flags0.ch1aon = 
      +                          1;
  1650  0060  17FB               	bsf	_Flags0,7
  1651                           
  1652                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 103:                 LATAbits.LATA5 =
      +                           1;
  1653  0061  1698               	bsf	24,5	;volatile
  1654  0062                     i1l1195:	
  1655                           
  1656                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 105:                 if (Ch0Delay.val
      +                          ue == 8191) {
  1657  0062  0A79               	incf	_Ch0Delay,w
  1658  0063  301F               	movlw	31
  1659  0064  1903               	skipnz
  1660  0065  067A               	xorwf	_Ch0Delay+1,w
  1661  0066  1D03               	btfss	3,2
  1662  0067  2869               	goto	u50_21
  1663  0068  286A               	goto	u50_20
  1664  0069                     u50_21:	
  1665  0069  286D               	goto	i1l1199
  1666  006A                     u50_20:	
  1667  006A                     i1l1197:	
  1668                           
  1669                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 106:                     T0CON0bits.T
      +                          0EN = 0;
  1670  006A  014B               	movlb	11	; select bank11
  1671  006B  139E               	bcf	30,7	;volatile
  1672                           
  1673                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 107:                 } else {
  1674  006C  2904               	goto	i1l1253
  1675  006D                     i1l1199:	
  1676                           
  1677                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 108:                     Delay0.value
      +                           = Ch0Delay.value;
  1678  006D  087A               	movf	_Ch0Delay+1,w
  1679  006E  00F8               	movwf	_Delay0+1
  1680  006F  0879               	movf	_Ch0Delay,w
  1681  0070  00F7               	movwf	_Delay0
  1682  0071                     i1l1201:	
  1683                           
  1684                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 109:                     Flags0.ch0on
      +                          0 = 1;
  1685  0071  157B               	bsf	_Flags0,2
  1686  0072                     i1l1203:	
  1687                           
  1688                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 110:                     Delay1.value
      +                           = 8191 - Ch0Delay.value;
  1689  0072  30FF               	movlw	255
  1690  0073  00F0               	movwf	??_myIsr
  1691  0074  301F               	movlw	31
  1692  0075  00F1               	movwf	??_myIsr+1
  1693  0076  0879               	movf	_Ch0Delay,w
  1694  0077  0270               	subwf	??_myIsr,w
  1695  0078  00A2               	movwf	_Delay1
  1696  0079  087A               	movf	_Ch0Delay+1,w
  1697  007A  3B71               	subwfb	??_myIsr+1,w
  1698  007B  00A3               	movwf	_Delay1+1
  1699  007C                     i1l1205:	
  1700                           
  1701                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 111:                     Flags1.off2 
      +                          = 1;
  1702  007C  1428               	bsf	_Flags1,0
  1703  007D  2904               	goto	i1l1253
  1704  007E                     i1l1207:	
  1705  007E  0827               	movf	_Ch1Delay+1,w
  1706  007F  067A               	xorwf	_Ch0Delay+1,w
  1707  0080  1D03               	skipz
  1708  0081  2884               	goto	u51_25
  1709  0082  0826               	movf	_Ch1Delay,w
  1710  0083  0679               	xorwf	_Ch0Delay,w
  1711  0084                     u51_25:	
  1712  0084  1D03               	skipz
  1713  0085  2887               	goto	u51_21
  1714  0086  2888               	goto	u51_20
  1715  0087                     u51_21:	
  1716  0087  28A5               	goto	i1l1223
  1717  0088                     u51_20:	
  1718  0088                     i1l1209:	
  1719                           
  1720                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 114:                 if (Ch0Delay.val
      +                          ue == 8191) {
  1721  0088  0A79               	incf	_Ch0Delay,w
  1722  0089  301F               	movlw	31
  1723  008A  1903               	skipnz
  1724  008B  067A               	xorwf	_Ch0Delay+1,w
  1725  008C  1D03               	btfss	3,2
  1726  008D  288F               	goto	u52_21
  1727  008E  2890               	goto	u52_20
  1728  008F                     u52_21:	
  1729  008F  2893               	goto	i1l1213
  1730  0090                     u52_20:	
  1731  0090                     i1l1211:	
  1732                           
  1733                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 115:                     T0CON0bits.T
      +                          0EN = 0;
  1734  0090  014B               	movlb	11	; select bank11
  1735  0091  139E               	bcf	30,7	;volatile
  1736                           
  1737                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 116:                 } else {
  1738  0092  2904               	goto	i1l1253
  1739  0093                     i1l1213:	
  1740                           
  1741                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 117:                     Delay0.value
      +                           = Ch0Delay.value;
  1742  0093  087A               	movf	_Ch0Delay+1,w
  1743  0094  00F8               	movwf	_Delay0+1
  1744  0095  0879               	movf	_Ch0Delay,w
  1745  0096  00F7               	movwf	_Delay0
  1746  0097                     i1l1215:	
  1747                           
  1748                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 118:                     Flags0.ch0on
      +                          0 = 1;
  1749  0097  157B               	bsf	_Flags0,2
  1750  0098                     i1l1217:	
  1751                           
  1752                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 119:                     Flags0.ch1on
      +                          0 = 1;
  1753  0098  15FB               	bsf	_Flags0,3
  1754  0099                     i1l1219:	
  1755                           
  1756                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 120:                     Delay1.value
      +                           = 8191 - Ch0Delay.value;
  1757  0099  30FF               	movlw	255
  1758  009A  00F0               	movwf	??_myIsr
  1759  009B  301F               	movlw	31
  1760  009C  00F1               	movwf	??_myIsr+1
  1761  009D  0879               	movf	_Ch0Delay,w
  1762  009E  0270               	subwf	??_myIsr,w
  1763  009F  00A2               	movwf	_Delay1
  1764  00A0  087A               	movf	_Ch0Delay+1,w
  1765  00A1  3B71               	subwfb	??_myIsr+1,w
  1766  00A2  00A3               	movwf	_Delay1+1
  1767  00A3                     i1l1221:	
  1768                           
  1769                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 121:                     Flags1.off2 
      +                          = 1;
  1770  00A3  1428               	bsf	_Flags1,0
  1771  00A4  2904               	goto	i1l1253
  1772  00A5                     i1l1223:	
  1773  00A5  087A               	movf	_Ch0Delay+1,w
  1774  00A6  0227               	subwf	_Ch1Delay+1,w
  1775  00A7  1D03               	skipz
  1776  00A8  28AB               	goto	u53_25
  1777  00A9  0879               	movf	_Ch0Delay,w
  1778  00AA  0226               	subwf	_Ch1Delay,w
  1779  00AB                     u53_25:	
  1780  00AB  1803               	skipnc
  1781  00AC  28AE               	goto	u53_21
  1782  00AD  28AF               	goto	u53_20
  1783  00AE                     u53_21:	
  1784  00AE  28DA               	goto	i1l1239
  1785  00AF                     u53_20:	
  1786  00AF                     i1l1225:	
  1787                           
  1788                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 124:                 Delay0.value = C
      +                          h1Delay.value;
  1789  00AF  0827               	movf	_Ch1Delay+1,w
  1790  00B0  00F8               	movwf	_Delay0+1
  1791  00B1  0826               	movf	_Ch1Delay,w
  1792  00B2  00F7               	movwf	_Delay0
  1793  00B3                     i1l1227:	
  1794                           
  1795                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 125:                 Flags0.ch1on0 = 
      +                          1;
  1796  00B3  15FB               	bsf	_Flags0,3
  1797  00B4                     i1l1229:	
  1798                           
  1799                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 126:                 if (Ch0Delay.val
      +                          ue == 8191) {
  1800  00B4  0A79               	incf	_Ch0Delay,w
  1801  00B5  301F               	movlw	31
  1802  00B6  1903               	skipnz
  1803  00B7  067A               	xorwf	_Ch0Delay+1,w
  1804  00B8  1D03               	btfss	3,2
  1805  00B9  28BB               	goto	u54_21
  1806  00BA  28BC               	goto	u54_20
  1807  00BB                     u54_21:	
  1808  00BB  28C8               	goto	i1l1235
  1809  00BC                     u54_20:	
  1810  00BC                     i1l1231:	
  1811                           
  1812                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 127:                     Delay1.value
      +                           = 8191 - Delay0.value;
  1813  00BC  30FF               	movlw	255
  1814  00BD  00F0               	movwf	??_myIsr
  1815  00BE  301F               	movlw	31
  1816  00BF  00F1               	movwf	??_myIsr+1
  1817  00C0  0877               	movf	_Delay0,w
  1818  00C1  0270               	subwf	??_myIsr,w
  1819  00C2  00A2               	movwf	_Delay1
  1820  00C3  0878               	movf	_Delay0+1,w
  1821  00C4  3B71               	subwfb	??_myIsr+1,w
  1822  00C5  00A3               	movwf	_Delay1+1
  1823  00C6                     i1l1233:	
  1824                           
  1825                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 128:                     Flags1.off2 
      +                          = 1;
  1826  00C6  1428               	bsf	_Flags1,0
  1827                           
  1828                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 129:                 } else {
  1829  00C7  2904               	goto	i1l1253
  1830  00C8                     i1l1235:	
  1831                           
  1832                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 130:                     Delay1.value
      +                           = Ch0Delay.value - Ch1Delay.value;
  1833  00C8  0826               	movf	_Ch1Delay,w
  1834  00C9  0279               	subwf	_Ch0Delay,w
  1835  00CA  00A2               	movwf	_Delay1
  1836  00CB  0827               	movf	_Ch1Delay+1,w
  1837  00CC  3B7A               	subwfb	_Ch0Delay+1,w
  1838  00CD  00A3               	movwf	_Delay1+1
  1839  00CE                     i1l1237:	
  1840                           
  1841                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 131:                     Flags0.ch0on
      +                          1 = 1;
  1842  00CE  167B               	bsf	_Flags0,4
  1843                           
  1844                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 132:                     Delay2.value
      +                           = 8191 - Ch0Delay.value;
  1845  00CF  30FF               	movlw	255
  1846  00D0  00F0               	movwf	??_myIsr
  1847  00D1  301F               	movlw	31
  1848  00D2  00F1               	movwf	??_myIsr+1
  1849  00D3  0879               	movf	_Ch0Delay,w
  1850  00D4  0270               	subwf	??_myIsr,w
  1851  00D5  00A0               	movwf	_Delay2
  1852  00D6  087A               	movf	_Ch0Delay+1,w
  1853  00D7  3B71               	subwfb	??_myIsr+1,w
  1854  00D8  00A1               	movwf	_Delay2+1
  1855  00D9  2904               	goto	i1l1253
  1856  00DA                     i1l1239:	
  1857                           
  1858                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 135:                 Delay0.value = C
      +                          h0Delay.value;
  1859  00DA  087A               	movf	_Ch0Delay+1,w
  1860  00DB  00F8               	movwf	_Delay0+1
  1861  00DC  0879               	movf	_Ch0Delay,w
  1862  00DD  00F7               	movwf	_Delay0
  1863  00DE                     i1l1241:	
  1864                           
  1865                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 136:                 Flags0.ch0on0 = 
      +                          1;
  1866  00DE  157B               	bsf	_Flags0,2
  1867  00DF                     i1l1243:	
  1868                           
  1869                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 137:                 if (Ch1Delay.val
      +                          ue == 8191) {
  1870  00DF  0A26               	incf	_Ch1Delay,w
  1871  00E0  301F               	movlw	31
  1872  00E1  1903               	skipnz
  1873  00E2  0627               	xorwf	_Ch1Delay+1,w
  1874  00E3  1D03               	btfss	3,2
  1875  00E4  28E6               	goto	u55_21
  1876  00E5  28E7               	goto	u55_20
  1877  00E6                     u55_21:	
  1878  00E6  28F3               	goto	i1l1249
  1879  00E7                     u55_20:	
  1880  00E7                     i1l1245:	
  1881                           
  1882                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 138:                     Delay1.value
      +                           = 8191 - Delay0.value;
  1883  00E7  30FF               	movlw	255
  1884  00E8  00F0               	movwf	??_myIsr
  1885  00E9  301F               	movlw	31
  1886  00EA  00F1               	movwf	??_myIsr+1
  1887  00EB  0877               	movf	_Delay0,w
  1888  00EC  0270               	subwf	??_myIsr,w
  1889  00ED  00A2               	movwf	_Delay1
  1890  00EE  0878               	movf	_Delay0+1,w
  1891  00EF  3B71               	subwfb	??_myIsr+1,w
  1892  00F0  00A3               	movwf	_Delay1+1
  1893  00F1                     i1l1247:	
  1894                           
  1895                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 139:                     Flags1.off2 
      +                          = 1;
  1896  00F1  1428               	bsf	_Flags1,0
  1897                           
  1898                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 140:                 } else {
  1899  00F2  2904               	goto	i1l1253
  1900  00F3                     i1l1249:	
  1901                           
  1902                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 141:                     Delay1.value
      +                           = Ch1Delay.value - Ch0Delay.value;
  1903  00F3  0879               	movf	_Ch0Delay,w
  1904  00F4  0226               	subwf	_Ch1Delay,w
  1905  00F5  00A2               	movwf	_Delay1
  1906  00F6  087A               	movf	_Ch0Delay+1,w
  1907  00F7  3B27               	subwfb	_Ch1Delay+1,w
  1908  00F8  00A3               	movwf	_Delay1+1
  1909  00F9                     i1l1251:	
  1910                           
  1911                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 142:                     Flags0.ch1on
      +                          1 = 1;
  1912  00F9  16FB               	bsf	_Flags0,5
  1913                           
  1914                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 143:                     Delay2.value
      +                           = 8191 - Ch1Delay.value;
  1915  00FA  30FF               	movlw	255
  1916  00FB  00F0               	movwf	??_myIsr
  1917  00FC  301F               	movlw	31
  1918  00FD  00F1               	movwf	??_myIsr+1
  1919  00FE  0826               	movf	_Ch1Delay,w
  1920  00FF  0270               	subwf	??_myIsr,w
  1921  0100  00A0               	movwf	_Delay2
  1922  0101  0827               	movf	_Ch1Delay+1,w
  1923  0102  3B71               	subwfb	??_myIsr+1,w
  1924  0103  00A1               	movwf	_Delay2+1
  1925  0104                     i1l1253:	
  1926                           
  1927                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 148:             Delay0.value = ~Dela
      +                          y0.value;
  1928  0104  09F7               	comf	_Delay0,f
  1929  0105  09F8               	comf	_Delay0+1,f
  1930  0106                     i1l1255:	
  1931                           
  1932                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 149:             Delay1.value = ~Dela
      +                          y1.value;
  1933  0106  0140               	movlb	0	; select bank0
  1934  0107  09A2               	comf	_Delay1,f
  1935  0108  09A3               	comf	_Delay1+1,f
  1936  0109                     i1l1257:	
  1937                           
  1938                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 150:             Delay2.value = ~Dela
      +                          y2.value;
  1939  0109  09A0               	comf	_Delay2,f
  1940  010A  09A1               	comf	_Delay2+1,f
  1941  010B  2973               	goto	i1l125
  1942  010C                     i1l87:	
  1943                           
  1944                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 153:         PIR0bits.TMR0IF = 0;
  1945  010C  128C               	bcf	12,5	;volatile
  1946                           
  1947                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 154:         switch(Flags0.delay) {
  1948  010D  295B               	goto	i1l1287
  1949  010E                     i1l1259:	
  1950                           
  1951                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 156:                 TMR0H = Delay0.m
      +                          sb;
  1952  010E  0878               	movf	_Delay0+1,w
  1953  010F  014B               	movlb	11	; select bank11
  1954  0110  009D               	movwf	29	;volatile
  1955                           
  1956                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 157:                 TMR0L = Delay0.l
      +                          sb;
  1957  0111  0877               	movf	_Delay0,w
  1958  0112  009C               	movwf	28	;volatile
  1959                           
  1960                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 158:                 break;
  1961  0113  2972               	goto	i1l112
  1962  0114                     i1l1261:	
  1963                           
  1964                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 160:                 TMR0H = Delay1.m
      +                          sb;
  1965  0114  0140               	movlb	0	; select bank0
  1966  0115  0823               	movf	_Delay1+1,w
  1967  0116  014B               	movlb	11	; select bank11
  1968  0117  009D               	movwf	29	;volatile
  1969                           
  1970                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 161:                 TMR0L = Delay1.l
      +                          sb;
  1971  0118  0140               	movlb	0	; select bank0
  1972  0119  0822               	movf	_Delay1,w
  1973  011A  014B               	movlb	11	; select bank11
  1974  011B  009C               	movwf	28	;volatile
  1975  011C                     i1l1263:	
  1976                           
  1977                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 162:                 if (Flags0.ch0on
      +                          0) {
  1978  011C  1D7B               	btfss	_Flags0,2
  1979  011D  291F               	goto	u56_21
  1980  011E  2920               	goto	u56_20
  1981  011F                     u56_21:	
  1982  011F  2922               	goto	i1l114
  1983  0120                     u56_20:	
  1984  0120                     i1l1265:	
  1985                           
  1986                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 163:                     LATAbits.LAT
      +                          A4 = 1;
  1987  0120  0140               	movlb	0	; select bank0
  1988  0121  1618               	bsf	24,4	;volatile
  1989  0122                     i1l114:	
  1990                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 164:                 }
  1991                           
  1992                           
  1993                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 165:                 if (Flags0.ch1on
      +                          0) {
  1994  0122  1DFB               	btfss	_Flags0,3
  1995  0123  2925               	goto	u57_21
  1996  0124  2926               	goto	u57_20
  1997  0125                     u57_21:	
  1998  0125  2972               	goto	i1l112
  1999  0126                     u57_20:	
  2000  0126                     i1l1267:	
  2001                           
  2002                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 166:                     LATAbits.LAT
      +                          A5 = 1;
  2003  0126  0140               	movlb	0	; select bank0
  2004  0127  1698               	bsf	24,5	;volatile
  2005  0128  2972               	goto	i1l112
  2006  0129                     i1l1269:	
  2007                           
  2008                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 170:                 TMR0H = Delay2.m
      +                          sb;
  2009  0129  0140               	movlb	0	; select bank0
  2010  012A  0821               	movf	_Delay2+1,w
  2011  012B  014B               	movlb	11	; select bank11
  2012  012C  009D               	movwf	29	;volatile
  2013                           
  2014                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 171:                 TMR0L = Delay2.l
      +                          sb;
  2015  012D  0140               	movlb	0	; select bank0
  2016  012E  0820               	movf	_Delay2,w
  2017  012F  014B               	movlb	11	; select bank11
  2018  0130  009C               	movwf	28	;volatile
  2019  0131                     i1l1271:	
  2020                           
  2021                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 172:                 if (Flags0.ch0on
      +                          1) {
  2022  0131  1E7B               	btfss	_Flags0,4
  2023  0132  2934               	goto	u58_21
  2024  0133  2935               	goto	u58_20
  2025  0134                     u58_21:	
  2026  0134  2937               	goto	i1l117
  2027  0135                     u58_20:	
  2028  0135                     i1l1273:	
  2029                           
  2030                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 173:                     LATAbits.LAT
      +                          A4 = 1;
  2031  0135  0140               	movlb	0	; select bank0
  2032  0136  1618               	bsf	24,4	;volatile
  2033  0137                     i1l117:	
  2034                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 174:                 }
  2035                           
  2036                           
  2037                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 175:                 if (Flags0.ch1on
      +                          1) {
  2038  0137  1EFB               	btfss	_Flags0,5
  2039  0138  293A               	goto	u59_21
  2040  0139  293B               	goto	u59_20
  2041  013A                     u59_21:	
  2042  013A  293D               	goto	i1l118
  2043  013B                     u59_20:	
  2044  013B                     i1l1275:	
  2045                           
  2046                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 176:                     LATAbits.LAT
      +                          A5 = 1;
  2047  013B  0140               	movlb	0	; select bank0
  2048  013C  1698               	bsf	24,5	;volatile
  2049  013D                     i1l118:	
  2050                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 177:                 }
  2051                           
  2052                           
  2053                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 178:                 if (Flags1.off2)
      +                           {
  2054  013D  0140               	movlb	0	; select bank0
  2055  013E  1C28               	btfss	_Flags1,0
  2056  013F  2941               	goto	u60_21
  2057  0140  2942               	goto	u60_20
  2058  0141                     u60_21:	
  2059  0141  2972               	goto	i1l112
  2060  0142                     u60_20:	
  2061  0142                     i1l1277:	
  2062                           
  2063                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 179:                     if (!Flags0.
      +                          ch0aon) {
  2064  0142  1B7B               	btfsc	_Flags0,6
  2065  0143  2945               	goto	u61_21
  2066  0144  2946               	goto	u61_20
  2067  0145                     u61_21:	
  2068  0145  2947               	goto	i1l120
  2069  0146                     u61_20:	
  2070  0146                     i1l1279:	
  2071                           
  2072                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 180:                         LATAbits
      +                          .LATA4 = 0;
  2073  0146  1218               	bcf	24,4	;volatile
  2074  0147                     i1l120:	
  2075                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 181:                     }
  2076                           
  2077                           
  2078                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 182:                     if (!Flags0.
      +                          ch1aon) {
  2079  0147  1BFB               	btfsc	_Flags0,7
  2080  0148  294A               	goto	u62_21
  2081  0149  294B               	goto	u62_20
  2082  014A                     u62_21:	
  2083  014A  2972               	goto	i1l112
  2084  014B                     u62_20:	
  2085  014B                     i1l1281:	
  2086                           
  2087                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 183:                         LATAbits
      +                          .LATA5 = 0;
  2088  014B  1298               	bcf	24,5	;volatile
  2089  014C  2972               	goto	i1l112
  2090  014D                     i1l122:	
  2091                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 187:             case 3:
  2092                           
  2093                           
  2094                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 188:                 if (!Flags0.ch0a
      +                          on) {
  2095  014D  1B7B               	btfsc	_Flags0,6
  2096  014E  2950               	goto	u63_21
  2097  014F  2951               	goto	u63_20
  2098  0150                     u63_21:	
  2099  0150  2953               	goto	i1l123
  2100  0151                     u63_20:	
  2101  0151                     i1l1283:	
  2102                           
  2103                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 189:                     LATAbits.LAT
      +                          A4 = 0;
  2104  0151  0140               	movlb	0	; select bank0
  2105  0152  1218               	bcf	24,4	;volatile
  2106  0153                     i1l123:	
  2107                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 190:                 }
  2108                           
  2109                           
  2110                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 191:                 if (!Flags0.ch1a
      +                          on) {
  2111  0153  1BFB               	btfsc	_Flags0,7
  2112  0154  2956               	goto	u64_21
  2113  0155  2957               	goto	u64_20
  2114  0156                     u64_21:	
  2115  0156  2959               	goto	i1l124
  2116  0157                     u64_20:	
  2117  0157                     i1l1285:	
  2118                           
  2119                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 192:                     LATAbits.LAT
      +                          A5 = 0;
  2120  0157  0140               	movlb	0	; select bank0
  2121  0158  1298               	bcf	24,5	;volatile
  2122  0159                     i1l124:	
  2123                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 193:                 }
  2124                           
  2125  0159  03FB               	decf	_Flags0,f	;# 
  2126                           
  2127                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 195:         }
  2128  015A  2972               	goto	i1l112
  2129  015B                     i1l1287:	
  2130  015B  087B               	movf	_Flags0,w
  2131  015C  3903               	andlw	3
  2132  015D  00F0               	movwf	??_myIsr
  2133  015E  01F1               	clrf	??_myIsr+1
  2134                           
  2135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2136                           ; Switch size 1, requested type "simple"
  2137                           ; Number of cases is 1, Range of values is 0 to 0
  2138                           ; switch strategies available:
  2139                           ; Name         Instructions Cycles
  2140                           ; simple_byte            4     3 (average)
  2141                           ; direct_byte            8     6 (fixed)
  2142                           ; jumptable            260     6 (fixed)
  2143                           ;	Chosen strategy is simple_byte
  2144  015F  0871               	movf	??_myIsr+1,w
  2145  0160  3A00               	xorlw	0	; case 0
  2146  0161  1903               	skipnz
  2147  0162  2964               	goto	i1l1745
  2148  0163  2972               	goto	i1l112
  2149  0164                     i1l1745:	
  2150                           
  2151                           ; Switch size 1, requested type "simple"
  2152                           ; Number of cases is 4, Range of values is 0 to 3
  2153                           ; switch strategies available:
  2154                           ; Name         Instructions Cycles
  2155                           ; simple_byte           13     7 (average)
  2156                           ; direct_byte           14     6 (fixed)
  2157                           ; jumptable            260     6 (fixed)
  2158                           ;	Chosen strategy is simple_byte
  2159  0164  0870               	movf	??_myIsr,w
  2160  0165  3A00               	xorlw	0	; case 0
  2161  0166  1903               	skipnz
  2162  0167  290E               	goto	i1l1259
  2163  0168  3A01               	xorlw	1	; case 1
  2164  0169  1903               	skipnz
  2165  016A  2914               	goto	i1l1261
  2166  016B  3A03               	xorlw	3	; case 2
  2167  016C  1903               	skipnz
  2168  016D  2929               	goto	i1l1269
  2169  016E  3A01               	xorlw	1	; case 3
  2170  016F  1903               	skipnz
  2171  0170  294D               	goto	i1l122
  2172  0171  2972               	goto	i1l112
  2173  0172                     i1l112:	
  2174  0172  0AFB               	incf	_Flags0,f	;# 
  2175  0173                     i1l125:	
  2176  0173  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2177  0174  0009               	retfie
  2178  0175                     __end_of_myIsr:	
  2179  007E                     btemp	set	126	;btemp
  2180  007E                     int$flags	set	126
  2181  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         17
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      2      14
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_sendInt
    _sendInt->_nibbleToHex
    _sendInt->_sendChar

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     362
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                        _hexToNibble
                           _sendChar
                            _sendInt
 ---------------------------------------------------------------------------------
 (1) _sendInt                                              3     3      0     157
                                              3 COMMON     3     3      0
                        _nibbleToHex
                           _sendChar
 ---------------------------------------------------------------------------------
 (2) _sendChar                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _nibbleToHex                                          1     1      0      66
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _hexToNibble                                          1     1      0      66
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myIsr                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _hexToNibble
   _sendChar
   _sendInt
     _nibbleToHex
     _sendChar

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       E       5       17.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      1A      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      1A      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Apr  6 20:05:57 2020

            __CFG_CP$OFF 0000                       _Rx 0029              __CFG_LVP$ON 0000  
                    l132 0320                      l142 031E                      l135 0328  
                    l129 0311                      l138 0304                      l170 0254  
                    l148 02BA                      l174 027E                      l179 02E8  
                    u410 030C                      u411 030B                      u420 0325  
                    u421 0324                      u430 0319                      _PR2 028D  
                    u431 0318                      u810 01C8                      u811 01C7  
                    u900 0253                      u820 01CD                      u901 0252  
                    u821 01CC                      u910 0274                      u830 01D4  
                    u911 0273                      u831 01D3                      u920 027D  
                    u840 01D9                      u921 027C                      u841 01D8  
                    u930 02BF                      u850 01E9                      u931 02BE  
                    u851 01E8                      u940 02CC                      u860 01EE  
                    u941 02CB                      u861 01ED                      u950 02D8  
                    u870 01FB                      u951 02D7                      u871 01FA  
                    u960 02E3                      u880 021B                      u961 02E2  
                    u881 021A                      u890 024A                      u891 0249  
                    _Cmd 002B             __CFG_BORV$HI 0000            __CFG_BBEN$OFF 0000  
           __CFG_ZCD$OFF 0000                     l1121 030F                     l1115 0306  
                   l1131 02F2                     l1117 030C                     l1125 0320  
                   l1133 02F9                     l1143 031C                     l1127 0325  
                   l1135 02FD                     l1137 0313                     l1129 02EB  
                   l1139 0319                     l1521 018E                     l1611 0239  
                   l1603 021C                     l1531 019C                     l1523 018F  
                   l1621 0255                     l1613 023D                     l1605 0224  
                   l1541 01A7                     l1533 019F                     l1525 0194  
                   l1623 025F                     l1631 026F                     l1615 0245  
                   l1607 0228                     l1551 01B3                     l1543 01AA  
                   l1535 01A1                     l1527 0196                     l1519 018B  
                   l1641 028D                     l1633 0274                     l1625 0263  
                   l1617 024A                     l1609 0231                     l1561 01B9  
                   l1553 01B4                     l1545 01AD                     l1537 01A3  
                   l1529 019A                     l1643 0292                     l1627 0268  
                   l1651 02B5                     l1571 01CE                     l1563 01C2  
                   l1555 01B5                     l1547 01AF                     l1539 01A5  
                   l1661 02CC                     l1653 02BF                     l1637 027F  
                   l1629 026A                     l1581 01E9                     l1573 01D4  
                   l1565 01C3                     l1557 01B6                     l1549 01B1  
                   l1671 02DD                     l1663 02D0                     l1655 02C3  
                   l1743 029E                     l1639 0289                     l1591 01FE  
                   l1583 01EE                     l1575 01D9                     l1567 01C8  
                   l1559 01B8                     l1673 02E3                     l1665 02D3  
                   l1657 02C5                     l1593 0201                     l1585 01F2  
                   l1649 0295                     l1569 01CD                     l1577 01DE  
                   l1667 02D8                     l1595 0209                     l1587 01F6  
                   l1579 01E3                     l1659 02C6                     l1597 020D  
                   l1589 01FB                     l1599 0215                     _LATA 0018  
                   _LATC 001A                     i1l87 010C                     _main 018B  
           hexToNibble@c 0072                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0175            __CFG_MCLRE$ON 0000             ?_nibbleToHex 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _T2CON 028E  
                  i1l120 0147                    i1l112 0172                    i1l122 014D  
                  i1l114 0122                    i1l123 0153                    i1l124 0159  
                  i1l117 0137                    i1l125 0173                    i1l118 013D  
                  _TMR0H 059D                    _TMR0L 059C                    u50_20 006A  
                  u50_21 0069                    u51_20 0088                    u51_21 0087  
                  u51_25 0084                    u60_20 0142                    u52_20 0090  
                  u44_20 000B                    u60_21 0141                    u52_21 008F  
                  u44_21 000A                    u61_20 0146                    u53_20 00AF  
                  u45_20 0018                    u61_21 0145                    u53_21 00AE  
                  u45_21 0017                    u53_25 00AB                    u62_20 014B  
                  u54_20 00BC                    u46_20 0031                    u62_21 014A  
                  u54_21 00BB                    u46_21 0030                    u63_20 0151  
                  u55_20 00E7                    u47_20 0039                    u63_21 0150  
                  u55_21 00E6                    u47_21 0038                    u64_20 0157  
                  u56_20 0120                    u48_20 0046                    u64_21 0156  
                  u56_21 011F                    u48_21 0045                    u57_20 0126  
                  u49_20 0060                    u57_21 0125                    u49_21 005F  
                  _TRISA 0012                    _TRISC 0014                    u58_20 0135  
                  u58_21 0134                    u59_20 013B                    u59_21 013A  
         __CFG_FCMEN$OFF 0000            __CFG_WRTB$OFF 0000            __CFG_WRTC$OFF 0000  
                  _myIsr 0004          __end_of_sendInt 0305                    status 0003  
                  wtemp0 007E           __CFG_CSWEN$OFF 0000          __initialization 0176  
           __end_of_main 02EA           __CFG_SAFEN$OFF 0000                   ??_main 002C  
                 ?_myIsr 0070                   _ANSELA 1F38                   _ANSELC 1F4E  
                 _T0CON1 059F                   _RA0PPS 1F10                   _RC1REG 0119  
                 _RC1STA 011D                   i1l1201 0071                   i1l1211 0090  
                 i1l1203 0072                   i1l1221 00A3                   i1l1213 0093  
                 i1l1205 007C                   i1l1231 00BC                   i1l1215 0097  
                 i1l1223 00A5                   i1l1207 007E                   i1l1151 000C  
                 i1l1241 00DE                   i1l1233 00C6                   i1l1225 00AF  
                 i1l1217 0098                   i1l1209 0088                   i1l1161 001D  
                 i1l1153 0011                   i1l1251 00F9                   i1l1243 00DF  
                 i1l1235 00C8                   i1l1227 00B3                   i1l1219 0099  
                 i1l1171 002B                   i1l1163 0021                   i1l1155 0013  
                 i1l1147 0006                   i1l1261 0114                   i1l1245 00E7  
                 i1l1237 00CE                   i1l1229 00B4                   i1l1181 0046  
                 i1l1253 0104                   i1l1173 0031                   i1l1165 0025  
                 i1l1157 0018                   i1l1149 000B                   i1l1271 0131  
                 i1l1263 011C                   i1l1255 0106                   i1l1247 00F1  
                 i1l1239 00DA                   i1l1183 0049                   i1l1175 0033  
                 i1l1191 005A                   i1l1167 0029                   i1l1159 001A  
                 i1l1281 014B                   i1l1273 0135                   i1l1265 0120  
                 i1l1257 0109                   i1l1249 00F3                   i1l1193 0060  
                 i1l1185 004D                   i1l1177 0039                   i1l1169 002A  
                 i1l1283 0151                   i1l1275 013B                   i1l1267 0126  
                 i1l1259 010E                   i1l1195 0062                   i1l1187 004E  
                 i1l1179 003E                   i1l1285 0157                   i1l1277 0142  
                 i1l1269 0129                   i1l1197 006A                   i1l1189 0058  
                 i1l1279 0146                   i1l1287 015B                   i1l1199 006D  
                 i1l1745 0164           __CFG_WDTCCS$SC 0000                   _ZCDCON 091F  
                 _TX1REG 011A                   _TX1STA 011E                   _CmdVal 0024  
                 _Delay0 0077                   _Delay1 0022                   _Delay2 0020  
                 _Flags0 007B                   _Flags1 0028           __CFG_PWRTE$OFF 0000  
                 _RcvCnt 002A     __size_of_hexToNibble 000D           __CFG_STVREN$ON 0000  
       __end_of_sendChar 0329                ??_sendInt 0073  __end_of__initialization 0188  
         __pcstackCOMMON 0070            __end_of_myIsr 0175     __size_of_nibbleToHex 000D  
                ??_myIsr 0070               __pbssBANK0 0020               __pmaintext 018B  
        __CFG_PPS1WAY$ON 0000               __pintentry 0004             nibbleToHex@i 0072  
                _SP1BRGL 011B                ?_sendChar 0070                  __ptext1 02EA  
                __ptext2 031F                  __ptext3 0305                  __ptext4 0312  
        __CFG_WRTAPP$OFF 0000                  _sendInt 02EA          __CFG_WRTSAF$OFF 0000  
   end_of_initialization 0188               ??_sendChar 0072    __CFG_WDTCPS$WDTCPS_31 0000  
       __CFG_FEXTOSC$OFF 0000            ??_hexToNibble 0072      start_initialization 0176  
       __CFG_LPBOREN$OFF 0000            ??_nibbleToHex 0072      __end_of_hexToNibble 031F  
            __pbssCOMMON 0077                ___latbits 0000            __pcstackBANK0 002C  
             sendInt@tmp 0074        __size_of_sendChar 000A      __end_of_nibbleToHex 0312  
               ?_sendInt 0070     __CFG_RSTOSC$HFINTPLL 0000                 _T2CLKCON 0290  
         __size_of_myIsr 0171                 _LATAbits 0018                 _Ch0Delay 0079  
               _PIE0bits 0716                 _Ch1Delay 0026                 _PIE4bits 071A  
            _hexToNibble 0312                 _PIR0bits 070C                 _PIR3bits 070F  
               _PIR4bits 0710                 _RX1DTPPS 1ECB        __CFG_BBSIZE$BB512 0000  
               _TX1CKPPS 1ECC                main@state 0076              _nibbleToHex 0305  
              sendChar@c 0072               _T0CON0bits 059E         __size_of_sendInt 001B  
          __size_of_main 015F                 _sendChar 031F     __CFG_WDTCWS$WDTCWS_7 0000  
             _RC1STAbits 011D                 int$flags 007E               _INTCONbits 000B  
               intlevel1 0000                 sendInt@i 0075        __CFG_CLKOUTEN$OFF 0000  
           ?_hexToNibble 0070  
