

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Apr  5 12:22:08 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16LF15323
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16LF15323 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000E                     	;# 
    65  0012                     	;# 
    66  0014                     	;# 
    67  0018                     	;# 
    68  001A                     	;# 
    69  009B                     	;# 
    70  009B                     	;# 
    71  009C                     	;# 
    72  009D                     	;# 
    73  009E                     	;# 
    74  009F                     	;# 
    75  0119                     	;# 
    76  0119                     	;# 
    77  0119                     	;# 
    78  011A                     	;# 
    79  011A                     	;# 
    80  011A                     	;# 
    81  011B                     	;# 
    82  011B                     	;# 
    83  011B                     	;# 
    84  011B                     	;# 
    85  011B                     	;# 
    86  011C                     	;# 
    87  011C                     	;# 
    88  011C                     	;# 
    89  011D                     	;# 
    90  011D                     	;# 
    91  011D                     	;# 
    92  011E                     	;# 
    93  011E                     	;# 
    94  011E                     	;# 
    95  011F                     	;# 
    96  011F                     	;# 
    97  011F                     	;# 
    98  011F                     	;# 
    99  011F                     	;# 
   100  018C                     	;# 
   101  018D                     	;# 
   102  018E                     	;# 
   103  018F                     	;# 
   104  0190                     	;# 
   105  0191                     	;# 
   106  0192                     	;# 
   107  020C                     	;# 
   108  020C                     	;# 
   109  020D                     	;# 
   110  020E                     	;# 
   111  020F                     	;# 
   112  020F                     	;# 
   113  0210                     	;# 
   114  0210                     	;# 
   115  0211                     	;# 
   116  0211                     	;# 
   117  028C                     	;# 
   118  028C                     	;# 
   119  028D                     	;# 
   120  028D                     	;# 
   121  028E                     	;# 
   122  028F                     	;# 
   123  0290                     	;# 
   124  0291                     	;# 
   125  030C                     	;# 
   126  030C                     	;# 
   127  030D                     	;# 
   128  030E                     	;# 
   129  030F                     	;# 
   130  0310                     	;# 
   131  0310                     	;# 
   132  0311                     	;# 
   133  0312                     	;# 
   134  0313                     	;# 
   135  0314                     	;# 
   136  0314                     	;# 
   137  0315                     	;# 
   138  0316                     	;# 
   139  0318                     	;# 
   140  0318                     	;# 
   141  0319                     	;# 
   142  031A                     	;# 
   143  031C                     	;# 
   144  031C                     	;# 
   145  031D                     	;# 
   146  031E                     	;# 
   147  038C                     	;# 
   148  038C                     	;# 
   149  038D                     	;# 
   150  038E                     	;# 
   151  058C                     	;# 
   152  058C                     	;# 
   153  058D                     	;# 
   154  058E                     	;# 
   155  058F                     	;# 
   156  058F                     	;# 
   157  0590                     	;# 
   158  0591                     	;# 
   159  0592                     	;# 
   160  0593                     	;# 
   161  059C                     	;# 
   162  059C                     	;# 
   163  059D                     	;# 
   164  059D                     	;# 
   165  059E                     	;# 
   166  059F                     	;# 
   167  060C                     	;# 
   168  060D                     	;# 
   169  060E                     	;# 
   170  060F                     	;# 
   171  0610                     	;# 
   172  0611                     	;# 
   173  0612                     	;# 
   174  0613                     	;# 
   175  0614                     	;# 
   176  070C                     	;# 
   177  070D                     	;# 
   178  070E                     	;# 
   179  070F                     	;# 
   180  0710                     	;# 
   181  0711                     	;# 
   182  0712                     	;# 
   183  0713                     	;# 
   184  0716                     	;# 
   185  0717                     	;# 
   186  0718                     	;# 
   187  0719                     	;# 
   188  071A                     	;# 
   189  071B                     	;# 
   190  071C                     	;# 
   191  071D                     	;# 
   192  0796                     	;# 
   193  0797                     	;# 
   194  0798                     	;# 
   195  0799                     	;# 
   196  079A                     	;# 
   197  079B                     	;# 
   198  080C                     	;# 
   199  080D                     	;# 
   200  080E                     	;# 
   201  080F                     	;# 
   202  0810                     	;# 
   203  0811                     	;# 
   204  0813                     	;# 
   205  0814                     	;# 
   206  081A                     	;# 
   207  081A                     	;# 
   208  081B                     	;# 
   209  081C                     	;# 
   210  081C                     	;# 
   211  081D                     	;# 
   212  081E                     	;# 
   213  081F                     	;# 
   214  088C                     	;# 
   215  088D                     	;# 
   216  088E                     	;# 
   217  088F                     	;# 
   218  0890                     	;# 
   219  0891                     	;# 
   220  0892                     	;# 
   221  0893                     	;# 
   222  0895                     	;# 
   223  0896                     	;# 
   224  090C                     	;# 
   225  090E                     	;# 
   226  090F                     	;# 
   227  091F                     	;# 
   228  098F                     	;# 
   229  098F                     	;# 
   230  0990                     	;# 
   231  0991                     	;# 
   232  0992                     	;# 
   233  0993                     	;# 
   234  0994                     	;# 
   235  0995                     	;# 
   236  0996                     	;# 
   237  0997                     	;# 
   238  1E0F                     	;# 
   239  1E10                     	;# 
   240  1E11                     	;# 
   241  1E12                     	;# 
   242  1E13                     	;# 
   243  1E14                     	;# 
   244  1E15                     	;# 
   245  1E16                     	;# 
   246  1E17                     	;# 
   247  1E18                     	;# 
   248  1E19                     	;# 
   249  1E1A                     	;# 
   250  1E1B                     	;# 
   251  1E1C                     	;# 
   252  1E1D                     	;# 
   253  1E1E                     	;# 
   254  1E1F                     	;# 
   255  1E20                     	;# 
   256  1E21                     	;# 
   257  1E22                     	;# 
   258  1E23                     	;# 
   259  1E24                     	;# 
   260  1E25                     	;# 
   261  1E26                     	;# 
   262  1E27                     	;# 
   263  1E28                     	;# 
   264  1E29                     	;# 
   265  1E2A                     	;# 
   266  1E2B                     	;# 
   267  1E2C                     	;# 
   268  1E2D                     	;# 
   269  1E2E                     	;# 
   270  1E2F                     	;# 
   271  1E30                     	;# 
   272  1E31                     	;# 
   273  1E32                     	;# 
   274  1E33                     	;# 
   275  1E34                     	;# 
   276  1E35                     	;# 
   277  1E36                     	;# 
   278  1E37                     	;# 
   279  1E8F                     	;# 
   280  1E90                     	;# 
   281  1E91                     	;# 
   282  1E92                     	;# 
   283  1E93                     	;# 
   284  1E9C                     	;# 
   285  1EA1                     	;# 
   286  1EA2                     	;# 
   287  1EB1                     	;# 
   288  1EBB                     	;# 
   289  1EBC                     	;# 
   290  1EBD                     	;# 
   291  1EBE                     	;# 
   292  1EC3                     	;# 
   293  1EC5                     	;# 
   294  1EC6                     	;# 
   295  1EC7                     	;# 
   296  1ECB                     	;# 
   297  1ECC                     	;# 
   298  1F10                     	;# 
   299  1F11                     	;# 
   300  1F12                     	;# 
   301  1F13                     	;# 
   302  1F14                     	;# 
   303  1F15                     	;# 
   304  1F20                     	;# 
   305  1F21                     	;# 
   306  1F22                     	;# 
   307  1F23                     	;# 
   308  1F24                     	;# 
   309  1F25                     	;# 
   310  1F38                     	;# 
   311  1F39                     	;# 
   312  1F3A                     	;# 
   313  1F3B                     	;# 
   314  1F3C                     	;# 
   315  1F3D                     	;# 
   316  1F3E                     	;# 
   317  1F3F                     	;# 
   318  1F4E                     	;# 
   319  1F4F                     	;# 
   320  1F50                     	;# 
   321  1F51                     	;# 
   322  1F52                     	;# 
   323  1F53                     	;# 
   324  1F54                     	;# 
   325  1F55                     	;# 
   326  1FE4                     	;# 
   327  1FE5                     	;# 
   328  1FE6                     	;# 
   329  1FE7                     	;# 
   330  1FE8                     	;# 
   331  1FE8                     	;# 
   332  1FE9                     	;# 
   333  1FEA                     	;# 
   334  1FEA                     	;# 
   335  1FEB                     	;# 
   336  1FED                     	;# 
   337  1FEE                     	;# 
   338  1FEF                     	;# 
   339  000B                     _INTCONbits	set	11
   340  0014                     _TRISC	set	20
   341  0012                     _TRISA	set	18
   342  001A                     _LATC	set	26
   343  0018                     _LATA	set	24
   344  0018                     _LATAbits	set	24
   345  0119                     _RC1REG	set	281
   346  011D                     _RC1STAbits	set	285
   347  011D                     _RC1STA	set	285
   348  011E                     _TX1STA	set	286
   349  011B                     _SP1BRGL	set	283
   350  011A                     _TX1REG	set	282
   351  028E                     _T2CON	set	654
   352  028D                     _PR2	set	653
   353  0290                     _T2CLKCON	set	656
   354  059F                     _T0CON1	set	1439
   355  059E                     _T0CON0bits	set	1438
   356  059C                     _TMR0L	set	1436
   357  059D                     _TMR0H	set	1437
   358  0716                     _PIE0bits	set	1814
   359  071A                     _PIE4bits	set	1818
   360  070F                     _PIR3bits	set	1807
   361  070C                     _PIR0bits	set	1804
   362  0710                     _PIR4bits	set	1808
   363  091F                     _ZCDCON	set	2335
   364  1ECB                     _RX1DTPPS	set	7883
   365  1ECC                     _TX1CKPPS	set	7884
   366  1F10                     _RA0PPS	set	7952
   367  1F4E                     _ANSELC	set	8014
   368  1F38                     _ANSELA	set	7992
   369                           
   370                           ; #config settings
   371  0000                     
   372                           	psect	cinit
   373  0176                     start_initialization:	
   374  0176                     __initialization:	
   375                           
   376                           ; Clear objects allocated to COMMON
   377  0176  01F7               	clrf	__pbssCOMMON& (0+127)
   378  0177  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   379  0178  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   380  0179  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   381  017A  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   382                           
   383                           ; Clear objects allocated to BANK0
   384  017B  0140               	movlb	0	; select bank0
   385  017C  01A0               	clrf	__pbssBANK0& (0+127)
   386  017D  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   387  017E  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   388  017F  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   389  0180  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   390  0181  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   391  0182  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   392  0183  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   393  0184  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   394  0185  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   395  0186  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   396  0187  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   397  0188                     end_of_initialization:	
   398                           ;End of C runtime variable initialization code
   399                           
   400  0188                     __end_of__initialization:	
   401  0188  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   402  0189  0140               	movlb	0
   403  018A  298B               	ljmp	_main	;jump to C main() function
   404                           
   405                           	psect	bssCOMMON
   406  0077                     __pbssCOMMON:	
   407  0077                     _Delay0:	
   408  0077                     	ds	2
   409  0079                     _Ch0Delay:	
   410  0079                     	ds	2
   411  007B                     _Flags0:	
   412  007B                     	ds	1
   413                           
   414                           	psect	bssBANK0
   415  0020                     __pbssBANK0:	
   416  0020                     _Delay2:	
   417  0020                     	ds	2
   418  0022                     _Delay1:	
   419  0022                     	ds	2
   420  0024                     _CmdVal:	
   421  0024                     	ds	2
   422  0026                     _Ch1Delay:	
   423  0026                     	ds	2
   424  0028                     _Flags1:	
   425  0028                     	ds	1
   426  0029                     _Rx:	
   427  0029                     	ds	1
   428  002A                     _RcvCnt:	
   429  002A                     	ds	1
   430  002B                     _Cmd:	
   431  002B                     	ds	1
   432                           
   433                           	psect	cstackCOMMON
   434  0070                     __pcstackCOMMON:	
   435  0070                     ?_myIsr:	
   436  0070                     ??_myIsr:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_nibbleToHex:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_sendChar:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_sendInt:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_hexToNibble:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_main:	
   452                           ; 1 bytes @ 0x0
   453                           
   454                           
   455                           ; 2 bytes @ 0x0
   456  0070                     	ds	2
   457  0072                     ??_nibbleToHex:	
   458  0072                     ??_sendChar:	
   459                           ; 1 bytes @ 0x2
   460                           
   461  0072                     ??_hexToNibble:	
   462                           ; 1 bytes @ 0x2
   463                           
   464  0072                     nibbleToHex@i:	
   465                           ; 1 bytes @ 0x2
   466                           
   467  0072                     sendChar@c:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0072                     hexToNibble@c:	
   471                           ; 1 bytes @ 0x2
   472                           
   473                           
   474                           ; 1 bytes @ 0x2
   475  0072                     	ds	1
   476  0073                     ??_sendInt:	
   477                           
   478                           ; 1 bytes @ 0x3
   479  0073                     	ds	1
   480  0074                     sendInt@tmp:	
   481                           
   482                           ; 1 bytes @ 0x4
   483  0074                     	ds	1
   484  0075                     sendInt@i:	
   485                           
   486                           ; 1 bytes @ 0x5
   487  0075                     	ds	1
   488  0076                     main@state:	
   489                           
   490                           ; 1 bytes @ 0x6
   491  0076                     	ds	1
   492                           
   493                           	psect	cstackBANK0
   494  002C                     __pcstackBANK0:	
   495  002C                     ??_main:	
   496                           
   497                           ; 1 bytes @ 0x0
   498  002C                     	ds	2
   499                           
   500                           	psect	maintext
   501  018B                     __pmaintext:	
   502 ;;
   503 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   504 ;;
   505 ;; *************** function _main *****************
   506 ;; Defined at:
   507 ;;		line 228 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  state           1    6[COMMON] unsigned char 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  2  146[None  ] int 
   514 ;; Registers used:
   515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : B3F/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   521 ;;      Params:         0       0       0       0
   522 ;;      Locals:         1       0       0       0
   523 ;;      Temps:          0       2       0       0
   524 ;;      Totals:         1       2       0       0
   525 ;;Total ram usage:        3 bytes
   526 ;; Hardware stack levels required when called:    3
   527 ;; This function calls:
   528 ;;		_hexToNibble
   529 ;;		_sendChar
   530 ;;		_sendInt
   531 ;; This function is called by:
   532 ;;		Startup code after reset
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           
   537                           ;psect for function _main
   538  018B                     _main:	
   539  018B                     l1523:	
   540                           ;incstack = 0
   541                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   542                           
   543                           
   544                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 230:     uchar state;;/Users/craig/MP
      +                          LABXProjects/AC-Dimmer-C.X/main.c: 232:     ANSELA = 0b00000100;
   545  018B  3004               	movlw	4
   546  018C  017E               	movlb	62	; select bank62
   547  018D  00B8               	movwf	56	;volatile
   548  018E                     l1525:	
   549                           
   550                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 234:     ANSELC = 0b00000000;
   551  018E  01CE               	clrf	78	;volatile
   552  018F                     l1527:	
   553                           
   554                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 238:     RA0PPS = 0xF;
   555  018F  300F               	movlw	15
   556  0190  0090               	movwf	16	;volatile
   557                           
   558                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 242:     LATA = 0b00000000;
   559  0191  0140               	movlb	0	; select bank0
   560  0192  0198               	clrf	24	;volatile
   561                           
   562                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 244:     LATC = 0b00000000;
   563  0193  019A               	clrf	26	;volatile
   564  0194                     l1529:	
   565                           
   566                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 246:     TRISA = 0b11001110;
   567  0194  30CE               	movlw	206
   568  0195  0092               	movwf	18	;volatile
   569  0196                     l1531:	
   570                           
   571                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 248:     TRISC = 0b11111111;
   572  0196  30FF               	movlw	255
   573  0197  0094               	movwf	20	;volatile
   574                           
   575                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 252:     TX1CKPPS = 0x00;
   576  0198  017D               	movlb	61	; select bank61
   577  0199  01CC               	clrf	76	;volatile
   578  019A                     l1533:	
   579                           
   580                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 253:     RX1DTPPS = 0x01;
   581  019A  3001               	movlw	1
   582  019B  00CB               	movwf	75	;volatile
   583  019C                     l1535:	
   584                           
   585                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 259:     SP1BRGL = 16;
   586  019C  3010               	movlw	16
   587  019D  0142               	movlb	2	; select bank2
   588  019E  009B               	movwf	27	;volatile
   589  019F                     l1537:	
   590                           
   591                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 261:     TX1STA = 0b00100100;
   592  019F  3024               	movlw	36
   593  01A0  009E               	movwf	30	;volatile
   594  01A1                     l1539:	
   595                           
   596                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 262:     RC1STA = 0b10010000;
   597  01A1  3090               	movlw	144
   598  01A2  009D               	movwf	29	;volatile
   599  01A3                     l1541:	
   600                           
   601                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 269:     T0CON0bits.T016BIT = 1;
   602  01A3  014B               	movlb	11	; select bank11
   603  01A4  161E               	bsf	30,4	;volatile
   604  01A5                     l1543:	
   605                           
   606                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 270:     T0CON1 = 0b01000011;
   607  01A5  3043               	movlw	67
   608  01A6  009F               	movwf	31	;volatile
   609  01A7                     l1545:	
   610                           
   611                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 273:     ZCDCON = 0b10000011;
   612  01A7  3083               	movlw	131
   613  01A8  0152               	movlb	18	; select bank18
   614  01A9  009F               	movwf	31	;volatile
   615  01AA                     l1547:	
   616                           
   617                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 277:     T2CLKCON = 0b00000110;
   618  01AA  3006               	movlw	6
   619  01AB  0145               	movlb	5	; select bank5
   620  01AC  0090               	movwf	16	;volatile
   621  01AD                     l1549:	
   622                           
   623                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 279:     PR2 = 133;
   624  01AD  3085               	movlw	133
   625  01AE  008D               	movwf	13	;volatile
   626  01AF                     l1551:	
   627                           
   628                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 280:     T2CON = 0b10010000;
   629  01AF  3090               	movlw	144
   630  01B0  008E               	movwf	14	;volatile
   631  01B1                     l1553:	
   632                           
   633                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 281:     PIE4bits.TMR2IE = 1;
   634  01B1  014E               	movlb	14	; select bank14
   635  01B2  149A               	bsf	26,1	;volatile
   636  01B3                     l1555:	
   637                           
   638                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 287:     INTCONbits.PEIE = 1;
   639  01B3  170B               	bsf	11,6	;volatile
   640  01B4                     l1557:	
   641                           
   642                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 288:     INTCONbits.GIE = 1;
   643  01B4  178B               	bsf	11,7	;volatile
   644  01B5                     l1559:	
   645                           
   646                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 291:     PIE0bits.TMR0IE = 1;
   647  01B5  1696               	bsf	22,5	;volatile
   648  01B6                     l1561:	
   649                           
   650                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 293:     RcvCnt = 0;
   651  01B6  0140               	movlb	0	; select bank0
   652  01B7  01AA               	clrf	_RcvCnt
   653  01B8                     l1563:	
   654                           
   655                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 294:     Flags1.value = 0;
   656  01B8  01A8               	clrf	_Flags1
   657  01B9                     l1565:	
   658                           
   659                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 295:     Flags0.value = 0;
   660  01B9  01FB               	clrf	_Flags0
   661                           
   662                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 296:     Ch0Delay.value = 8191;
   663  01BA  30FF               	movlw	255
   664  01BB  00F9               	movwf	_Ch0Delay
   665  01BC  301F               	movlw	31
   666  01BD  00FA               	movwf	_Ch0Delay+1
   667                           
   668                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 297:     Ch1Delay.value = 8191;
   669  01BE  30FF               	movlw	255
   670  01BF  00A6               	movwf	_Ch1Delay
   671  01C0  301F               	movlw	31
   672  01C1  00A7               	movwf	_Ch1Delay+1
   673  01C2                     l1567:	
   674                           
   675                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 300:         state = 0;
   676  01C2  01F6               	clrf	main@state
   677  01C3                     l1569:	
   678                           
   679                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 301:         if (PIR3bits.RC1IF) {
   680  01C3  014E               	movlb	14	; select bank14
   681  01C4  1E8F               	btfss	15,5	;volatile
   682  01C5  29C7               	goto	u851
   683  01C6  29C8               	goto	u850
   684  01C7                     u851:	
   685  01C7  2ABF               	goto	l148
   686  01C8                     u850:	
   687  01C8                     l1571:	
   688                           
   689                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 302:             if (RC1STAbits.FERR)
      +                           {
   690  01C8  0142               	movlb	2	; select bank2
   691  01C9  1D1D               	btfss	29,2	;volatile
   692  01CA  29CC               	goto	u861
   693  01CB  29CD               	goto	u860
   694  01CC                     u861:	
   695  01CC  29DE               	goto	l1581
   696  01CD                     u860:	
   697  01CD                     l1573:	
   698                           
   699                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 303:                 RC1REG;
   700  01CD  0819               	movf	25,w	;volatile
   701  01CE                     l1575:	
   702                           
   703                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 305:                 if (Rx != 0 || R
      +                          cvCnt != 0) {
   704  01CE  0140               	movlb	0	; select bank0
   705  01CF  0829               	movf	_Rx,w
   706  01D0  1D03               	btfss	3,2
   707  01D1  29D3               	goto	u871
   708  01D2  29D4               	goto	u870
   709  01D3                     u871:	
   710  01D3  29D9               	goto	l1579
   711  01D4                     u870:	
   712  01D4                     l1577:	
   713  01D4  082A               	movf	_RcvCnt,w
   714  01D5  1903               	btfsc	3,2
   715  01D6  29D8               	goto	u881
   716  01D7  29D9               	goto	u880
   717  01D8                     u881:	
   718  01D8  2ACB               	goto	l1663
   719  01D9                     u880:	
   720  01D9                     l1579:	
   721                           
   722                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 306:                     state = 3;
   723  01D9  3003               	movlw	3
   724  01DA  00AC               	movwf	??_main
   725  01DB  082C               	movf	??_main,w
   726  01DC  00F6               	movwf	main@state
   727  01DD  2ACB               	goto	l1663
   728  01DE                     l1581:	
   729                           
   730                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 309:                 Rx = RC1REG;
   731  01DE  0819               	movf	25,w	;volatile
   732  01DF  0140               	movlb	0	; select bank0
   733  01E0  00AC               	movwf	??_main
   734  01E1  082C               	movf	??_main,w
   735  01E2  00A9               	movwf	_Rx
   736  01E3                     l1583:	
   737                           
   738                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 310:                 if (Rx == 'S') {
   739  01E3  3053               	movlw	83
   740  01E4  0629               	xorwf	_Rx,w
   741  01E5  1D03               	btfss	3,2
   742  01E6  29E8               	goto	u891
   743  01E7  29E9               	goto	u890
   744  01E8                     u891:	
   745  01E8  2A9A               	goto	l1653
   746  01E9                     u890:	
   747  01E9                     l1585:	
   748                           
   749                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 311:                     if (RcvCnt !
      +                          = 0) {
   750  01E9  082A               	movf	_RcvCnt,w
   751  01EA  1903               	btfsc	3,2
   752  01EB  29ED               	goto	u901
   753  01EC  29EE               	goto	u900
   754  01ED                     u901:	
   755  01ED  29F2               	goto	l1589
   756  01EE                     u900:	
   757  01EE                     l1587:	
   758                           
   759                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 312:                         sendChar
      +                          ('N');
   760  01EE  304E               	movlw	78
   761  01EF  3183  2324  3181   	fcall	_sendChar
   762  01F2                     l1589:	
   763                           
   764                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 314:                     RcvCnt = 1;
   765  01F2  0140               	movlb	0	; select bank0
   766  01F3  01AA               	clrf	_RcvCnt
   767  01F4  0AAA               	incf	_RcvCnt,f
   768                           
   769                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 315:                 } else {
   770  01F5  2ACB               	goto	l1663
   771  01F6                     l1591:	
   772                           
   773                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 318:                             if (
      +                          Rx != 0) {
   774  01F6  0829               	movf	_Rx,w
   775  01F7  1903               	btfsc	3,2
   776  01F8  29FA               	goto	u911
   777  01F9  29FB               	goto	u910
   778  01FA                     u911:	
   779  01FA  29FE               	goto	l1595
   780  01FB                     u910:	
   781  01FB                     l1593:	
   782                           
   783                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 319:                                 
      +                          state = 1;
   784  01FB  01F6               	clrf	main@state
   785  01FC  0AF6               	incf	main@state,f
   786                           
   787                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 320:                             } el
      +                          se {
   788  01FD  2ABA               	goto	l1655
   789  01FE                     l1595:	
   790                           
   791                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 321:                                 
      +                          RcvCnt--;
   792  01FE  3001               	movlw	1
   793  01FF  02AA               	subwf	_RcvCnt,f
   794  0200  2ABA               	goto	l1655
   795  0201                     l1597:	
   796                           
   797                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 325:                             Cmd 
      +                          = hexToNibble(Rx);
   798  0201  0829               	movf	_Rx,w
   799  0202  3183  2317  3181   	fcall	_hexToNibble
   800  0205  0140               	movlb	0	; select bank0
   801  0206  00AC               	movwf	??_main
   802  0207  082C               	movf	??_main,w
   803  0208  00AB               	movwf	_Cmd
   804  0209                     l1599:	
   805                           
   806                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 326:                             Cmd 
      +                          <<= 4;
   807  0209  0EAB               	swapf	_Cmd,f
   808  020A  30F0               	movlw	240
   809  020B  05AB               	andwf	_Cmd,f
   810                           
   811                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 327:                             brea
      +                          k;
   812  020C  2ABA               	goto	l1655
   813  020D                     l1601:	
   814                           
   815                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 329:                             Cmd 
      +                          += hexToNibble(Rx);
   816  020D  0829               	movf	_Rx,w
   817  020E  3183  2317  3181   	fcall	_hexToNibble
   818  0211  0140               	movlb	0	; select bank0
   819  0212  00AC               	movwf	??_main
   820  0213  082C               	movf	??_main,w
   821  0214  07AB               	addwf	_Cmd,f
   822  0215                     l1603:	
   823                           
   824                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 330:                             if (
      +                          Cmd > 1) {
   825  0215  3002               	movlw	2
   826  0216  022B               	subwf	_Cmd,w
   827  0217  1C03               	skipc
   828  0218  2A1A               	goto	u921
   829  0219  2A1B               	goto	u920
   830  021A                     u921:	
   831  021A  2ABA               	goto	l1655
   832  021B                     u920:	
   833  021B  29FB               	goto	l1593
   834  021C                     l1607:	
   835                           
   836                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 335:                             CmdV
      +                          al.msb = hexToNibble(Rx);
   837  021C  0829               	movf	_Rx,w
   838  021D  3183  2317  3181   	fcall	_hexToNibble
   839  0220  0140               	movlb	0	; select bank0
   840  0221  00AC               	movwf	??_main
   841  0222  082C               	movf	??_main,w
   842  0223  00A5               	movwf	_CmdVal+1
   843  0224                     l1609:	
   844                           
   845                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 336:                             CmdV
      +                          al.msb <<= 4;
   846  0224  0EA5               	swapf	_CmdVal+1,f
   847  0225  30F0               	movlw	240
   848  0226  05A5               	andwf	_CmdVal+1,f
   849                           
   850                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 337:                             brea
      +                          k;
   851  0227  2ABA               	goto	l1655
   852  0228                     l1611:	
   853                           
   854                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 339:                             CmdV
      +                          al.msb += hexToNibble(Rx);
   855  0228  0829               	movf	_Rx,w
   856  0229  3183  2317  3181   	fcall	_hexToNibble
   857  022C  0140               	movlb	0	; select bank0
   858  022D  00AC               	movwf	??_main
   859  022E  082C               	movf	??_main,w
   860  022F  07A5               	addwf	_CmdVal+1,f
   861                           
   862                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 340:                             brea
      +                          k;
   863  0230  2ABA               	goto	l1655
   864  0231                     l1613:	
   865                           
   866                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 342:                             CmdV
      +                          al.lsb = hexToNibble(Rx);
   867  0231  0829               	movf	_Rx,w
   868  0232  3183  2317  3181   	fcall	_hexToNibble
   869  0235  0140               	movlb	0	; select bank0
   870  0236  00AC               	movwf	??_main
   871  0237  082C               	movf	??_main,w
   872  0238  00A4               	movwf	_CmdVal
   873  0239                     l1615:	
   874                           
   875                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 343:                             CmdV
      +                          al.lsb <<= 4;
   876  0239  0EA4               	swapf	_CmdVal,f
   877  023A  30F0               	movlw	240
   878  023B  05A4               	andwf	_CmdVal,f
   879                           
   880                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 344:                             brea
      +                          k;
   881  023C  2ABA               	goto	l1655
   882  023D                     l1617:	
   883                           
   884                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 346:                             CmdV
      +                          al.lsb += hexToNibble(Rx);
   885  023D  0829               	movf	_Rx,w
   886  023E  3183  2317  3181   	fcall	_hexToNibble
   887  0241  0140               	movlb	0	; select bank0
   888  0242  00AC               	movwf	??_main
   889  0243  082C               	movf	??_main,w
   890  0244  07A4               	addwf	_CmdVal,f
   891  0245                     l1619:	
   892                           
   893                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 347:                             if (
      +                          Cmd == 0) {
   894  0245  082B               	movf	_Cmd,w
   895  0246  1D03               	btfss	3,2
   896  0247  2A49               	goto	u931
   897  0248  2A4A               	goto	u930
   898  0249                     u931:	
   899  0249  2A71               	goto	l1635
   900  024A                     u930:	
   901  024A                     l1621:	
   902                           
   903                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 348:                                 
      +                          if (Flags1.update || CmdVal.value > 8191) {
   904  024A  18A8               	btfsc	_Flags1,1
   905  024B  2A4D               	goto	u941
   906  024C  2A4E               	goto	u940
   907  024D                     u941:	
   908  024D  29FB               	goto	l1593
   909  024E                     u940:	
   910  024E                     l1623:	
   911  024E  3020               	movlw	32
   912  024F  0225               	subwf	_CmdVal+1,w
   913  0250  3000               	movlw	0
   914  0251  1903               	skipnz
   915  0252  0224               	subwf	_CmdVal,w
   916  0253  1C03               	skipc
   917  0254  2A56               	goto	u951
   918  0255  2A57               	goto	u950
   919  0256                     u951:	
   920  0256  2A58               	goto	l1625
   921  0257                     u950:	
   922  0257  29FB               	goto	l1593
   923  0258                     l1625:	
   924                           
   925                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 351:                                 
      +                              Ch0Delay.value = 8191 -CmdVal.value;
   926  0258  30FF               	movlw	255
   927  0259  00AC               	movwf	??_main
   928  025A  301F               	movlw	31
   929  025B  00AD               	movwf	??_main+1
   930  025C  0824               	movf	_CmdVal,w
   931  025D  022C               	subwf	??_main,w
   932  025E  00F9               	movwf	_Ch0Delay
   933  025F  0825               	movf	_CmdVal+1,w
   934  0260  3B2D               	subwfb	??_main+1,w
   935  0261  00FA               	movwf	_Ch0Delay+1
   936  0262                     l1627:	
   937                           
   938                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 352:                                 
      +                              sendInt(Ch0Delay.msb);
   939  0262  087A               	movf	_Ch0Delay+1,w
   940  0263  3182  22EF  3181   	fcall	_sendInt
   941  0266                     l1629:	
   942                           
   943                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 353:                                 
      +                              sendInt(Ch0Delay.lsb);
   944  0266  0879               	movf	_Ch0Delay,w
   945  0267  3182  22EF  3181   	fcall	_sendInt
   946  026A                     l1631:	
   947                           
   948                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 354:                                 
      +                              Flags1.update = 1;
   949  026A  0140               	movlb	0	; select bank0
   950  026B  14A8               	bsf	_Flags1,1
   951  026C                     l1633:	
   952                           
   953                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 355:                                 
      +                              state = 2;
   954  026C  3002               	movlw	2
   955  026D  00AC               	movwf	??_main
   956  026E  082C               	movf	??_main,w
   957  026F  00F6               	movwf	main@state
   958  0270  2ABA               	goto	l1655
   959  0271                     l1635:	
   960  0271  032B               	decf	_Cmd,w
   961  0272  1D03               	btfss	3,2
   962  0273  2A75               	goto	u961
   963  0274  2A76               	goto	u960
   964  0275                     u961:	
   965  0275  2ABA               	goto	l1655
   966  0276                     u960:	
   967  0276                     l1637:	
   968                           
   969                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 358:                                 
      +                          if (Flags1.update || CmdVal.value > 8191) {
   970  0276  18A8               	btfsc	_Flags1,1
   971  0277  2A79               	goto	u971
   972  0278  2A7A               	goto	u970
   973  0279                     u971:	
   974  0279  29FB               	goto	l1593
   975  027A                     u970:	
   976  027A                     l1639:	
   977  027A  3020               	movlw	32
   978  027B  0225               	subwf	_CmdVal+1,w
   979  027C  3000               	movlw	0
   980  027D  1903               	skipnz
   981  027E  0224               	subwf	_CmdVal,w
   982  027F  1C03               	skipc
   983  0280  2A82               	goto	u981
   984  0281  2A83               	goto	u980
   985  0282                     u981:	
   986  0282  2A84               	goto	l1641
   987  0283                     u980:	
   988  0283  29FB               	goto	l1593
   989  0284                     l1641:	
   990                           
   991                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 361:                                 
      +                              Ch1Delay.value = 8191 -CmdVal.value;
   992  0284  30FF               	movlw	255
   993  0285  00AC               	movwf	??_main
   994  0286  301F               	movlw	31
   995  0287  00AD               	movwf	??_main+1
   996  0288  0824               	movf	_CmdVal,w
   997  0289  022C               	subwf	??_main,w
   998  028A  00A6               	movwf	_Ch1Delay
   999  028B  0825               	movf	_CmdVal+1,w
  1000  028C  3B2D               	subwfb	??_main+1,w
  1001  028D  00A7               	movwf	_Ch1Delay+1
  1002  028E                     l1643:	
  1003                           
  1004                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 362:                                 
      +                              sendInt(Ch1Delay.msb);
  1005  028E  0827               	movf	_Ch1Delay+1,w
  1006  028F  3182  22EF  3181   	fcall	_sendInt
  1007  0292                     l1645:	
  1008                           
  1009                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 363:                                 
      +                              sendInt(Ch1Delay.lsb);
  1010  0292  0140               	movlb	0	; select bank0
  1011  0293  0826               	movf	_Ch1Delay,w
  1012  0294  3182  22EF  3181   	fcall	_sendInt
  1013  0297                     l1647:	
  1014                           
  1015                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 364:                                 
      +                              Flags1.update = 1;
  1016  0297  0140               	movlb	0	; select bank0
  1017  0298  14A8               	bsf	_Flags1,1
  1018  0299  2A6C               	goto	l1633
  1019  029A                     l1653:	
  1020  029A  082A               	movf	_RcvCnt,w
  1021  029B  3907               	andlw	7
  1022  029C  00AC               	movwf	??_main
  1023  029D  01AD               	clrf	??_main+1
  1024                           
  1025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1026                           ; Switch size 1, requested type "simple"
  1027                           ; Number of cases is 1, Range of values is 0 to 0
  1028                           ; switch strategies available:
  1029                           ; Name         Instructions Cycles
  1030                           ; simple_byte            4     3 (average)
  1031                           ; direct_byte            8     6 (fixed)
  1032                           ; jumptable            260     6 (fixed)
  1033                           ;	Chosen strategy is simple_byte
  1034  029E  082D               	movf	??_main+1,w
  1035  029F  3A00               	xorlw	0	; case 0
  1036  02A0  1903               	skipnz
  1037  02A1  2AA3               	goto	l1747
  1038  02A2  2ABA               	goto	l1655
  1039  02A3                     l1747:	
  1040                           
  1041                           ; Switch size 1, requested type "simple"
  1042                           ; Number of cases is 7, Range of values is 0 to 6
  1043                           ; switch strategies available:
  1044                           ; Name         Instructions Cycles
  1045                           ; direct_byte           20     6 (fixed)
  1046                           ; simple_byte           22    12 (average)
  1047                           ; jumptable            260     6 (fixed)
  1048                           ;	Chosen strategy is simple_byte
  1049  02A3  082C               	movf	??_main,w
  1050  02A4  3A00               	xorlw	0	; case 0
  1051  02A5  1903               	skipnz
  1052  02A6  29F6               	goto	l1591
  1053  02A7  3A01               	xorlw	1	; case 1
  1054  02A8  1903               	skipnz
  1055  02A9  2A01               	goto	l1597
  1056  02AA  3A03               	xorlw	3	; case 2
  1057  02AB  1903               	skipnz
  1058  02AC  2A0D               	goto	l1601
  1059  02AD  3A01               	xorlw	1	; case 3
  1060  02AE  1903               	skipnz
  1061  02AF  2A1C               	goto	l1607
  1062  02B0  3A07               	xorlw	7	; case 4
  1063  02B1  1903               	skipnz
  1064  02B2  2A28               	goto	l1611
  1065  02B3  3A01               	xorlw	1	; case 5
  1066  02B4  1903               	skipnz
  1067  02B5  2A31               	goto	l1613
  1068  02B6  3A03               	xorlw	3	; case 6
  1069  02B7  1903               	skipnz
  1070  02B8  2A3D               	goto	l1617
  1071  02B9  2ABA               	goto	l1655
  1072  02BA                     l1655:	
  1073                           
  1074                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 370:                     RcvCnt++;
  1075  02BA  3001               	movlw	1
  1076  02BB  00AC               	movwf	??_main
  1077  02BC  082C               	movf	??_main,w
  1078  02BD  07AA               	addwf	_RcvCnt,f
  1079  02BE  2ACB               	goto	l1663
  1080  02BF                     l148:	
  1081  02BF  0142               	movlb	2	; select bank2
  1082  02C0  1C9D               	btfss	29,1	;volatile
  1083  02C1  2AC3               	goto	u991
  1084  02C2  2AC4               	goto	u990
  1085  02C3                     u991:	
  1086  02C3  2ACB               	goto	l1663
  1087  02C4                     u990:	
  1088  02C4                     l1657:	
  1089                           
  1090                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 374:             sendChar('O');
  1091  02C4  304F               	movlw	79
  1092  02C5  3183  2324  3181   	fcall	_sendChar
  1093  02C8                     l1659:	
  1094                           
  1095                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 375:             RC1STAbits.CREN = 0;
  1096  02C8  0142               	movlb	2	; select bank2
  1097  02C9  121D               	bcf	29,4	;volatile
  1098  02CA                     l1661:	
  1099                           
  1100                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 376:             RC1STAbits.CREN = 1;
  1101  02CA  161D               	bsf	29,4	;volatile
  1102  02CB                     l1663:	
  1103                           
  1104                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 379:         if (state == 2) {
  1105  02CB  3002               	movlw	2
  1106  02CC  0676               	xorwf	main@state,w
  1107  02CD  1D03               	btfss	3,2
  1108  02CE  2AD0               	goto	u1001
  1109  02CF  2AD1               	goto	u1000
  1110  02D0                     u1001:	
  1111  02D0  2AD8               	goto	l1669
  1112  02D1                     u1000:	
  1113  02D1                     l1665:	
  1114                           
  1115                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 380:             sendChar('K');
  1116  02D1  304B               	movlw	75
  1117  02D2  3183  2324  3181   	fcall	_sendChar
  1118  02D5                     l1667:	
  1119                           
  1120                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 381:             RcvCnt = 0;
  1121  02D5  0140               	movlb	0	; select bank0
  1122  02D6  01AA               	clrf	_RcvCnt
  1123                           
  1124                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 382:         } else if (state == 1) {
  1125  02D7  29C2               	goto	l1567
  1126  02D8                     l1669:	
  1127  02D8  0376               	decf	main@state,w
  1128  02D9  1D03               	btfss	3,2
  1129  02DA  2ADC               	goto	u1011
  1130  02DB  2ADD               	goto	u1010
  1131  02DC                     u1011:	
  1132  02DC  2AE2               	goto	l1675
  1133  02DD                     u1010:	
  1134  02DD                     l1671:	
  1135                           
  1136                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 383:             sendChar('N');
  1137  02DD  304E               	movlw	78
  1138  02DE  3183  2324  3181   	fcall	_sendChar
  1139  02E1  2AD5               	goto	l1667
  1140  02E2                     l1675:	
  1141  02E2  3003               	movlw	3
  1142  02E3  0676               	xorwf	main@state,w
  1143  02E4  1D03               	btfss	3,2
  1144  02E5  2AE7               	goto	u1021
  1145  02E6  2AE8               	goto	u1020
  1146  02E7                     u1021:	
  1147  02E7  2AED               	goto	l183
  1148  02E8                     u1020:	
  1149  02E8                     l1677:	
  1150                           
  1151                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 386:             sendChar('Z');
  1152  02E8  305A               	movlw	90
  1153  02E9  3183  2324  3181   	fcall	_sendChar
  1154  02EC  2AD5               	goto	l1667
  1155  02ED                     l183:	
  1156  02ED  29C2               	goto	l1567
  1157  02EE  2975               	ljmp	start
  1158  02EF                     __end_of_main:	
  1159                           
  1160                           	psect	text1
  1161  02EF                     __ptext1:	
  1162 ;; *************** function _sendInt *****************
  1163 ;; Defined at:
  1164 ;;		line 213 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  i               1    wreg     unsigned char 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  i               1    5[COMMON] unsigned char 
  1169 ;;  tmp             1    4[COMMON] unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0, pclath, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1179 ;;      Params:         0       0       0       0
  1180 ;;      Locals:         2       0       0       0
  1181 ;;      Temps:          1       0       0       0
  1182 ;;      Totals:         3       0       0       0
  1183 ;;Total ram usage:        3 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    2
  1186 ;; This function calls:
  1187 ;;		_nibbleToHex
  1188 ;;		_sendChar
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           
  1195                           ;psect for function _sendInt
  1196  02EF                     _sendInt:	
  1197                           
  1198                           ;incstack = 0
  1199                           ; Regs used in _sendInt: [wreg+status,2+status,0+pclath+cstack]
  1200                           ;sendInt@i stored from wreg
  1201  02EF  00F5               	movwf	sendInt@i
  1202  02F0                     l1133:	
  1203                           
  1204                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 214:     uchar tmp = i;
  1205  02F0  0875               	movf	sendInt@i,w
  1206  02F1  00F3               	movwf	??_sendInt
  1207  02F2  0873               	movf	??_sendInt,w
  1208  02F3  00F4               	movwf	sendInt@tmp
  1209                           
  1210                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 215:     tmp >>= 4;
  1211  02F4  0EF4               	swapf	sendInt@tmp,f
  1212  02F5  300F               	movlw	15
  1213  02F6  05F4               	andwf	sendInt@tmp,f
  1214  02F7                     l1135:	
  1215                           
  1216                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 216:     sendChar(nibbleToHex(tmp));
  1217  02F7  0874               	movf	sendInt@tmp,w
  1218  02F8  3183  230A  3182   	fcall	_nibbleToHex
  1219  02FB  3183  2324  3182   	fcall	_sendChar
  1220  02FE                     l1137:	
  1221                           
  1222                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 217:     i &= 0xF;
  1223  02FE  300F               	movlw	15
  1224  02FF  00F3               	movwf	??_sendInt
  1225  0300  0873               	movf	??_sendInt,w
  1226  0301  05F5               	andwf	sendInt@i,f
  1227  0302                     l1139:	
  1228                           
  1229                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 218:     sendChar(nibbleToHex(i));
  1230  0302  0875               	movf	sendInt@i,w
  1231  0303  3183  230A  3182   	fcall	_nibbleToHex
  1232  0306  3183  2324  3182   	fcall	_sendChar
  1233  0309                     l138:	
  1234  0309  0008               	return
  1235  030A                     __end_of_sendInt:	
  1236                           
  1237                           	psect	text2
  1238  0324                     __ptext2:	
  1239 ;; *************** function _sendChar *****************
  1240 ;; Defined at:
  1241 ;;		line 208 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;  c               1    wreg     unsigned char 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  c               1    2[COMMON] unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1255 ;;      Params:         0       0       0       0
  1256 ;;      Locals:         1       0       0       0
  1257 ;;      Temps:          0       0       0       0
  1258 ;;      Totals:         1       0       0       0
  1259 ;;Total ram usage:        1 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    1
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_sendInt
  1266 ;;		_main
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           
  1271                           ;psect for function _sendChar
  1272  0324                     _sendChar:	
  1273                           
  1274                           ;incstack = 0
  1275                           ; Regs used in _sendChar: [wreg]
  1276                           ;sendChar@c stored from wreg
  1277  0324  00F2               	movwf	sendChar@c
  1278  0325                     l1129:	
  1279  0325                     l132:	
  1280                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 209:     while (!PIR3bits.TX1IF);
  1281                           
  1282  0325  014E               	movlb	14	; select bank14
  1283  0326  1E0F               	btfss	15,4	;volatile
  1284  0327  2B29               	goto	u441
  1285  0328  2B2A               	goto	u440
  1286  0329                     u441:	
  1287  0329  2B25               	goto	l132
  1288  032A                     u440:	
  1289  032A                     l1131:	
  1290                           
  1291                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 210:     TX1REG = c;
  1292  032A  0872               	movf	sendChar@c,w
  1293  032B  0142               	movlb	2	; select bank2
  1294  032C  009A               	movwf	26	;volatile
  1295  032D                     l135:	
  1296  032D  0008               	return
  1297  032E                     __end_of_sendChar:	
  1298                           
  1299                           	psect	text3
  1300  030A                     __ptext3:	
  1301 ;; *************** function _nibbleToHex *****************
  1302 ;; Defined at:
  1303 ;;		line 201 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  i               1    wreg     unsigned char 
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  i               1    2[COMMON] unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      unsigned char 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1317 ;;      Params:         0       0       0       0
  1318 ;;      Locals:         1       0       0       0
  1319 ;;      Temps:          0       0       0       0
  1320 ;;      Totals:         1       0       0       0
  1321 ;;Total ram usage:        1 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    1
  1324 ;; This function calls:
  1325 ;;		Nothing
  1326 ;; This function is called by:
  1327 ;;		_sendInt
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           
  1332                           ;psect for function _nibbleToHex
  1333  030A                     _nibbleToHex:	
  1334                           
  1335                           ;incstack = 0
  1336                           ; Regs used in _nibbleToHex: [wreg+status,2+status,0]
  1337                           ;nibbleToHex@i stored from wreg
  1338  030A  00F2               	movwf	nibbleToHex@i
  1339  030B                     l1119:	
  1340                           
  1341                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 202:     if (i >= 10) {
  1342  030B  300A               	movlw	10
  1343  030C  0272               	subwf	nibbleToHex@i,w
  1344  030D  1C03               	skipc
  1345  030E  2B10               	goto	u431
  1346  030F  2B11               	goto	u430
  1347  0310                     u431:	
  1348  0310  2B14               	goto	l1125
  1349  0311                     u430:	
  1350  0311                     l1121:	
  1351                           
  1352                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 203:         return 'A'+i-10;
  1353  0311  0872               	movf	nibbleToHex@i,w
  1354  0312  3E37               	addlw	55
  1355  0313  2B16               	goto	l129
  1356  0314                     l1125:	
  1357                           
  1358                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 205:     return '0'+i;
  1359  0314  0872               	movf	nibbleToHex@i,w
  1360  0315  3E30               	addlw	48
  1361  0316                     l129:	
  1362  0316  0008               	return
  1363  0317                     __end_of_nibbleToHex:	
  1364                           
  1365                           	psect	text4
  1366  0317                     __ptext4:	
  1367 ;; *************** function _hexToNibble *****************
  1368 ;; Defined at:
  1369 ;;		line 221 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;  c               1    wreg     unsigned char 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  c               1    2[COMMON] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      unsigned char 
  1376 ;; Registers used:
  1377 ;;		wreg, status,2, status,0
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1383 ;;      Params:         0       0       0       0
  1384 ;;      Locals:         1       0       0       0
  1385 ;;      Temps:          0       0       0       0
  1386 ;;      Totals:         1       0       0       0
  1387 ;;Total ram usage:        1 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; Hardware stack levels required when called:    1
  1390 ;; This function calls:
  1391 ;;		Nothing
  1392 ;; This function is called by:
  1393 ;;		_main
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           
  1398                           ;psect for function _hexToNibble
  1399  0317                     _hexToNibble:	
  1400                           
  1401                           ;incstack = 0
  1402                           ; Regs used in _hexToNibble: [wreg+status,2+status,0]
  1403                           ;hexToNibble@c stored from wreg
  1404  0317  00F2               	movwf	hexToNibble@c
  1405  0318                     l1141:	
  1406                           
  1407                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 222:     if (c >= 'A') {
  1408  0318  3041               	movlw	65
  1409  0319  0272               	subwf	hexToNibble@c,w
  1410  031A  1C03               	skipc
  1411  031B  2B1D               	goto	u451
  1412  031C  2B1E               	goto	u450
  1413  031D                     u451:	
  1414  031D  2B21               	goto	l1147
  1415  031E                     u450:	
  1416  031E                     l1143:	
  1417                           
  1418                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 223:         return c-'A'+10;
  1419  031E  0872               	movf	hexToNibble@c,w
  1420  031F  3EC9               	addlw	201
  1421  0320  2B23               	goto	l142
  1422  0321                     l1147:	
  1423                           
  1424                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 225:     return c-'0';
  1425  0321  0872               	movf	hexToNibble@c,w
  1426  0322  3ED0               	addlw	208
  1427  0323                     l142:	
  1428  0323  0008               	return
  1429  0324                     __end_of_hexToNibble:	
  1430                           
  1431                           	psect	intentry
  1432  0004                     __pintentry:	
  1433 ;; *************** function _myIsr *****************
  1434 ;; Defined at:
  1435 ;;		line 59 in file "/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;		None
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1449 ;;      Params:         0       0       0       0
  1450 ;;      Locals:         0       0       0       0
  1451 ;;      Temps:          2       0       0       0
  1452 ;;      Totals:         2       0       0       0
  1453 ;;Total ram usage:        2 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		Interrupt level 1
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462  0004                     _myIsr:	
  1463                           
  1464                           ;incstack = 0
  1465  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1466                           
  1467                           ; Regs used in _myIsr: [wreg-fsr0h+status,2+status,0]
  1468  0005  3180               	pagesel	$
  1469  0006                     i1l1151:	
  1470                           
  1471                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 61:     if (PIR4bits.TMR2IF) {
  1472  0006  014E               	movlb	14	; select bank14
  1473  0007  1C90               	btfss	16,1	;volatile
  1474  0008  280A               	goto	u46_21
  1475  0009  280B               	goto	u46_20
  1476  000A                     u46_21:	
  1477  000A  290C               	goto	i1l87
  1478  000B                     u46_20:	
  1479  000B                     i1l1153:	
  1480                           
  1481                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 62:         PIR4bits.TMR2IF = 0;
  1482  000B  1090               	bcf	16,1	;volatile
  1483  000C                     i1l1155:	
  1484                           
  1485                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 67:         TMR0H = (0xFF74 >> 8);
  1486  000C  30FF               	movlw	255
  1487  000D  014B               	movlb	11	; select bank11
  1488  000E  009D               	movwf	29	;volatile
  1489                           
  1490                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 68:         TMR0L = (0xFF74 & 0xFF);
  1491  000F  3074               	movlw	116
  1492  0010  009C               	movwf	28	;volatile
  1493  0011                     i1l1157:	
  1494                           
  1495                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 69:         Flags0.delay = 0;
  1496  0011  30FC               	movlw	-4
  1497  0012  05FB               	andwf	_Flags0,f
  1498  0013                     i1l1159:	
  1499                           
  1500                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 71:         if (Flags1.update) {
  1501  0013  0140               	movlb	0	; select bank0
  1502  0014  1CA8               	btfss	_Flags1,1
  1503  0015  2817               	goto	u47_21
  1504  0016  2818               	goto	u47_20
  1505  0017                     u47_21:	
  1506  0017  2973               	goto	i1l125
  1507  0018                     u47_20:	
  1508  0018                     i1l1161:	
  1509                           
  1510                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 72:             T0CON0bits.T0EN = 1;
  1511  0018  014B               	movlb	11	; select bank11
  1512  0019  179E               	bsf	30,7	;volatile
  1513  001A                     i1l1163:	
  1514                           
  1515                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 74:             Flags0.value = 0;
  1516  001A  01FB               	clrf	_Flags0
  1517                           
  1518                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 75:             Flags1.value = 0;
  1519  001B  0140               	movlb	0	; select bank0
  1520  001C  01A8               	clrf	_Flags1
  1521  001D                     i1l1165:	
  1522                           
  1523                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 76:             Delay0.value = 0xFFFF
      +                          ;
  1524  001D  30FF               	movlw	255
  1525  001E  00F7               	movwf	_Delay0
  1526  001F  30FF               	movlw	255
  1527  0020  00F8               	movwf	_Delay0+1
  1528  0021                     i1l1167:	
  1529                           
  1530                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 77:             Delay1.value = 0xFFFF
      +                          ;
  1531  0021  30FF               	movlw	255
  1532  0022  00A2               	movwf	_Delay1
  1533  0023  30FF               	movlw	255
  1534  0024  00A3               	movwf	_Delay1+1
  1535  0025                     i1l1169:	
  1536                           
  1537                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 78:             Delay2.value = 0xFFFF
      +                          ;
  1538  0025  30FF               	movlw	255
  1539  0026  00A0               	movwf	_Delay2
  1540  0027  30FF               	movlw	255
  1541  0028  00A1               	movwf	_Delay2+1
  1542  0029                     i1l1171:	
  1543                           
  1544                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 80:             LATAbits.LATA4 = 0;
  1545  0029  1218               	bcf	24,4	;volatile
  1546  002A                     i1l1173:	
  1547                           
  1548                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 81:             LATAbits.LATA5 = 0;
  1549  002A  1298               	bcf	24,5	;volatile
  1550  002B                     i1l1175:	
  1551                           
  1552                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 83:             if (Ch0Delay.value ==
      +                           0) {
  1553  002B  0879               	movf	_Ch0Delay,w
  1554  002C  047A               	iorwf	_Ch0Delay+1,w
  1555  002D  1D03               	btfss	3,2
  1556  002E  2830               	goto	u48_21
  1557  002F  2831               	goto	u48_20
  1558  0030                     u48_21:	
  1559  0030  285A               	goto	i1l1195
  1560  0031                     u48_20:	
  1561  0031                     i1l1177:	
  1562                           
  1563                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 84:                 Flags0.ch0aon = 1
      +                          ;
  1564  0031  177B               	bsf	_Flags0,6
  1565                           
  1566                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 85:                 LATAbits.LATA4 = 
      +                          1;
  1567  0032  1618               	bsf	24,4	;volatile
  1568  0033                     i1l1179:	
  1569                           
  1570                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 87:                 if (Ch1Delay.valu
      +                          e == 0) {
  1571  0033  0826               	movf	_Ch1Delay,w
  1572  0034  0427               	iorwf	_Ch1Delay+1,w
  1573  0035  1D03               	btfss	3,2
  1574  0036  2838               	goto	u49_21
  1575  0037  2839               	goto	u49_20
  1576  0038                     u49_21:	
  1577  0038  283E               	goto	i1l1183
  1578  0039                     u49_20:	
  1579  0039                     i1l1181:	
  1580                           
  1581                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 88:                     Flags0.ch1aon
      +                           = 1;
  1582  0039  17FB               	bsf	_Flags0,7
  1583                           
  1584                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 89:                     LATAbits.LATA
      +                          5 = 1;
  1585  003A  1698               	bsf	24,5	;volatile
  1586                           
  1587                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 90:                     T0CON0bits.T0
      +                          EN = 0;
  1588  003B  014B               	movlb	11	; select bank11
  1589  003C  139E               	bcf	30,7	;volatile
  1590                           
  1591                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 91:                 } else {
  1592  003D  2904               	goto	i1l1257
  1593  003E                     i1l1183:	
  1594                           
  1595                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 92:                     if (Ch1Delay.
      +                          value == 8191) {
  1596  003E  0A26               	incf	_Ch1Delay,w
  1597  003F  301F               	movlw	31
  1598  0040  1903               	skipnz
  1599  0041  0627               	xorwf	_Ch1Delay+1,w
  1600  0042  1D03               	btfss	3,2
  1601  0043  2845               	goto	u50_21
  1602  0044  2846               	goto	u50_20
  1603  0045                     u50_21:	
  1604  0045  2849               	goto	i1l1187
  1605  0046                     u50_20:	
  1606  0046                     i1l1185:	
  1607                           
  1608                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 93:                         T0CON0bit
      +                          s.T0EN = 0;
  1609  0046  014B               	movlb	11	; select bank11
  1610  0047  139E               	bcf	30,7	;volatile
  1611                           
  1612                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 94:                     } else {
  1613  0048  2904               	goto	i1l1257
  1614  0049                     i1l1187:	
  1615                           
  1616                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 95:                         Delay0.va
      +                          lue = Ch1Delay.value;
  1617  0049  0827               	movf	_Ch1Delay+1,w
  1618  004A  00F8               	movwf	_Delay0+1
  1619  004B  0826               	movf	_Ch1Delay,w
  1620  004C  00F7               	movwf	_Delay0
  1621  004D                     i1l1189:	
  1622                           
  1623                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 96:                         Flags0.ch
      +                          1on0 = 1;
  1624  004D  15FB               	bsf	_Flags0,3
  1625  004E                     i1l1191:	
  1626                           
  1627                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 97:                         Delay1.va
      +                          lue = 8191 - Ch1Delay.value;
  1628  004E  30FF               	movlw	255
  1629  004F  00F0               	movwf	??_myIsr
  1630  0050  301F               	movlw	31
  1631  0051  00F1               	movwf	??_myIsr+1
  1632  0052  0826               	movf	_Ch1Delay,w
  1633  0053  0270               	subwf	??_myIsr,w
  1634  0054  00A2               	movwf	_Delay1
  1635  0055  0827               	movf	_Ch1Delay+1,w
  1636  0056  3B71               	subwfb	??_myIsr+1,w
  1637  0057  00A3               	movwf	_Delay1+1
  1638  0058                     i1l1193:	
  1639                           
  1640                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 98:                         Flags1.of
      +                          f2 = 1;
  1641  0058  1428               	bsf	_Flags1,0
  1642  0059  2904               	goto	i1l1257
  1643  005A                     i1l1195:	
  1644  005A  0826               	movf	_Ch1Delay,w
  1645  005B  0427               	iorwf	_Ch1Delay+1,w
  1646  005C  1D03               	btfss	3,2
  1647  005D  285F               	goto	u51_21
  1648  005E  2860               	goto	u51_20
  1649  005F                     u51_21:	
  1650  005F  287E               	goto	i1l1211
  1651  0060                     u51_20:	
  1652  0060                     i1l1197:	
  1653                           
  1654                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 102:                 Flags0.ch1aon = 
      +                          1;
  1655  0060  17FB               	bsf	_Flags0,7
  1656                           
  1657                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 103:                 LATAbits.LATA5 =
      +                           1;
  1658  0061  1698               	bsf	24,5	;volatile
  1659  0062                     i1l1199:	
  1660                           
  1661                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 105:                 if (Ch0Delay.val
      +                          ue == 8191) {
  1662  0062  0A79               	incf	_Ch0Delay,w
  1663  0063  301F               	movlw	31
  1664  0064  1903               	skipnz
  1665  0065  067A               	xorwf	_Ch0Delay+1,w
  1666  0066  1D03               	btfss	3,2
  1667  0067  2869               	goto	u52_21
  1668  0068  286A               	goto	u52_20
  1669  0069                     u52_21:	
  1670  0069  286D               	goto	i1l1203
  1671  006A                     u52_20:	
  1672  006A                     i1l1201:	
  1673                           
  1674                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 106:                     T0CON0bits.T
      +                          0EN = 0;
  1675  006A  014B               	movlb	11	; select bank11
  1676  006B  139E               	bcf	30,7	;volatile
  1677                           
  1678                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 107:                 } else {
  1679  006C  2904               	goto	i1l1257
  1680  006D                     i1l1203:	
  1681                           
  1682                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 108:                     Delay0.value
      +                           = Ch0Delay.value;
  1683  006D  087A               	movf	_Ch0Delay+1,w
  1684  006E  00F8               	movwf	_Delay0+1
  1685  006F  0879               	movf	_Ch0Delay,w
  1686  0070  00F7               	movwf	_Delay0
  1687  0071                     i1l1205:	
  1688                           
  1689                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 109:                     Flags0.ch0on
      +                          0 = 1;
  1690  0071  157B               	bsf	_Flags0,2
  1691  0072                     i1l1207:	
  1692                           
  1693                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 110:                     Delay1.value
      +                           = 8191 - Ch0Delay.value;
  1694  0072  30FF               	movlw	255
  1695  0073  00F0               	movwf	??_myIsr
  1696  0074  301F               	movlw	31
  1697  0075  00F1               	movwf	??_myIsr+1
  1698  0076  0879               	movf	_Ch0Delay,w
  1699  0077  0270               	subwf	??_myIsr,w
  1700  0078  00A2               	movwf	_Delay1
  1701  0079  087A               	movf	_Ch0Delay+1,w
  1702  007A  3B71               	subwfb	??_myIsr+1,w
  1703  007B  00A3               	movwf	_Delay1+1
  1704  007C                     i1l1209:	
  1705                           
  1706                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 111:                     Flags1.off2 
      +                          = 1;
  1707  007C  1428               	bsf	_Flags1,0
  1708  007D  2904               	goto	i1l1257
  1709  007E                     i1l1211:	
  1710  007E  0827               	movf	_Ch1Delay+1,w
  1711  007F  067A               	xorwf	_Ch0Delay+1,w
  1712  0080  1D03               	skipz
  1713  0081  2884               	goto	u53_25
  1714  0082  0826               	movf	_Ch1Delay,w
  1715  0083  0679               	xorwf	_Ch0Delay,w
  1716  0084                     u53_25:	
  1717  0084  1D03               	skipz
  1718  0085  2887               	goto	u53_21
  1719  0086  2888               	goto	u53_20
  1720  0087                     u53_21:	
  1721  0087  28A5               	goto	i1l1227
  1722  0088                     u53_20:	
  1723  0088                     i1l1213:	
  1724                           
  1725                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 114:                 if (Ch0Delay.val
      +                          ue == 8191) {
  1726  0088  0A79               	incf	_Ch0Delay,w
  1727  0089  301F               	movlw	31
  1728  008A  1903               	skipnz
  1729  008B  067A               	xorwf	_Ch0Delay+1,w
  1730  008C  1D03               	btfss	3,2
  1731  008D  288F               	goto	u54_21
  1732  008E  2890               	goto	u54_20
  1733  008F                     u54_21:	
  1734  008F  2893               	goto	i1l1217
  1735  0090                     u54_20:	
  1736  0090                     i1l1215:	
  1737                           
  1738                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 115:                     T0CON0bits.T
      +                          0EN = 0;
  1739  0090  014B               	movlb	11	; select bank11
  1740  0091  139E               	bcf	30,7	;volatile
  1741                           
  1742                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 116:                 } else {
  1743  0092  2904               	goto	i1l1257
  1744  0093                     i1l1217:	
  1745                           
  1746                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 117:                     Delay0.value
      +                           = Ch0Delay.value;
  1747  0093  087A               	movf	_Ch0Delay+1,w
  1748  0094  00F8               	movwf	_Delay0+1
  1749  0095  0879               	movf	_Ch0Delay,w
  1750  0096  00F7               	movwf	_Delay0
  1751  0097                     i1l1219:	
  1752                           
  1753                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 118:                     Flags0.ch0on
      +                          0 = 1;
  1754  0097  157B               	bsf	_Flags0,2
  1755  0098                     i1l1221:	
  1756                           
  1757                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 119:                     Flags0.ch1on
      +                          0 = 1;
  1758  0098  15FB               	bsf	_Flags0,3
  1759  0099                     i1l1223:	
  1760                           
  1761                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 120:                     Delay1.value
      +                           = 8191 - Ch0Delay.value;
  1762  0099  30FF               	movlw	255
  1763  009A  00F0               	movwf	??_myIsr
  1764  009B  301F               	movlw	31
  1765  009C  00F1               	movwf	??_myIsr+1
  1766  009D  0879               	movf	_Ch0Delay,w
  1767  009E  0270               	subwf	??_myIsr,w
  1768  009F  00A2               	movwf	_Delay1
  1769  00A0  087A               	movf	_Ch0Delay+1,w
  1770  00A1  3B71               	subwfb	??_myIsr+1,w
  1771  00A2  00A3               	movwf	_Delay1+1
  1772  00A3                     i1l1225:	
  1773                           
  1774                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 121:                     Flags1.off2 
      +                          = 1;
  1775  00A3  1428               	bsf	_Flags1,0
  1776  00A4  2904               	goto	i1l1257
  1777  00A5                     i1l1227:	
  1778  00A5  087A               	movf	_Ch0Delay+1,w
  1779  00A6  0227               	subwf	_Ch1Delay+1,w
  1780  00A7  1D03               	skipz
  1781  00A8  28AB               	goto	u55_25
  1782  00A9  0879               	movf	_Ch0Delay,w
  1783  00AA  0226               	subwf	_Ch1Delay,w
  1784  00AB                     u55_25:	
  1785  00AB  1803               	skipnc
  1786  00AC  28AE               	goto	u55_21
  1787  00AD  28AF               	goto	u55_20
  1788  00AE                     u55_21:	
  1789  00AE  28DA               	goto	i1l1243
  1790  00AF                     u55_20:	
  1791  00AF                     i1l1229:	
  1792                           
  1793                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 124:                 Delay0.value = C
      +                          h1Delay.value;
  1794  00AF  0827               	movf	_Ch1Delay+1,w
  1795  00B0  00F8               	movwf	_Delay0+1
  1796  00B1  0826               	movf	_Ch1Delay,w
  1797  00B2  00F7               	movwf	_Delay0
  1798  00B3                     i1l1231:	
  1799                           
  1800                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 125:                 Flags0.ch1on0 = 
      +                          1;
  1801  00B3  15FB               	bsf	_Flags0,3
  1802  00B4                     i1l1233:	
  1803                           
  1804                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 126:                 if (Ch0Delay.val
      +                          ue == 8191) {
  1805  00B4  0A79               	incf	_Ch0Delay,w
  1806  00B5  301F               	movlw	31
  1807  00B6  1903               	skipnz
  1808  00B7  067A               	xorwf	_Ch0Delay+1,w
  1809  00B8  1D03               	btfss	3,2
  1810  00B9  28BB               	goto	u56_21
  1811  00BA  28BC               	goto	u56_20
  1812  00BB                     u56_21:	
  1813  00BB  28C8               	goto	i1l1239
  1814  00BC                     u56_20:	
  1815  00BC                     i1l1235:	
  1816                           
  1817                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 127:                     Delay1.value
      +                           = 8191 - Delay0.value;
  1818  00BC  30FF               	movlw	255
  1819  00BD  00F0               	movwf	??_myIsr
  1820  00BE  301F               	movlw	31
  1821  00BF  00F1               	movwf	??_myIsr+1
  1822  00C0  0877               	movf	_Delay0,w
  1823  00C1  0270               	subwf	??_myIsr,w
  1824  00C2  00A2               	movwf	_Delay1
  1825  00C3  0878               	movf	_Delay0+1,w
  1826  00C4  3B71               	subwfb	??_myIsr+1,w
  1827  00C5  00A3               	movwf	_Delay1+1
  1828  00C6                     i1l1237:	
  1829                           
  1830                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 128:                     Flags1.off2 
      +                          = 1;
  1831  00C6  1428               	bsf	_Flags1,0
  1832                           
  1833                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 129:                 } else {
  1834  00C7  2904               	goto	i1l1257
  1835  00C8                     i1l1239:	
  1836                           
  1837                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 130:                     Delay1.value
      +                           = Ch0Delay.value - Ch1Delay.value;
  1838  00C8  0826               	movf	_Ch1Delay,w
  1839  00C9  0279               	subwf	_Ch0Delay,w
  1840  00CA  00A2               	movwf	_Delay1
  1841  00CB  0827               	movf	_Ch1Delay+1,w
  1842  00CC  3B7A               	subwfb	_Ch0Delay+1,w
  1843  00CD  00A3               	movwf	_Delay1+1
  1844  00CE                     i1l1241:	
  1845                           
  1846                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 131:                     Flags0.ch0on
      +                          1 = 1;
  1847  00CE  167B               	bsf	_Flags0,4
  1848                           
  1849                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 132:                     Delay2.value
      +                           = 8191 - Ch0Delay.value;
  1850  00CF  30FF               	movlw	255
  1851  00D0  00F0               	movwf	??_myIsr
  1852  00D1  301F               	movlw	31
  1853  00D2  00F1               	movwf	??_myIsr+1
  1854  00D3  0879               	movf	_Ch0Delay,w
  1855  00D4  0270               	subwf	??_myIsr,w
  1856  00D5  00A0               	movwf	_Delay2
  1857  00D6  087A               	movf	_Ch0Delay+1,w
  1858  00D7  3B71               	subwfb	??_myIsr+1,w
  1859  00D8  00A1               	movwf	_Delay2+1
  1860  00D9  2904               	goto	i1l1257
  1861  00DA                     i1l1243:	
  1862                           
  1863                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 135:                 Delay0.value = C
      +                          h0Delay.value;
  1864  00DA  087A               	movf	_Ch0Delay+1,w
  1865  00DB  00F8               	movwf	_Delay0+1
  1866  00DC  0879               	movf	_Ch0Delay,w
  1867  00DD  00F7               	movwf	_Delay0
  1868  00DE                     i1l1245:	
  1869                           
  1870                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 136:                 Flags0.ch0on0 = 
      +                          1;
  1871  00DE  157B               	bsf	_Flags0,2
  1872  00DF                     i1l1247:	
  1873                           
  1874                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 137:                 if (Ch1Delay.val
      +                          ue == 8191) {
  1875  00DF  0A26               	incf	_Ch1Delay,w
  1876  00E0  301F               	movlw	31
  1877  00E1  1903               	skipnz
  1878  00E2  0627               	xorwf	_Ch1Delay+1,w
  1879  00E3  1D03               	btfss	3,2
  1880  00E4  28E6               	goto	u57_21
  1881  00E5  28E7               	goto	u57_20
  1882  00E6                     u57_21:	
  1883  00E6  28F3               	goto	i1l1253
  1884  00E7                     u57_20:	
  1885  00E7                     i1l1249:	
  1886                           
  1887                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 138:                     Delay1.value
      +                           = 8191 - Delay0.value;
  1888  00E7  30FF               	movlw	255
  1889  00E8  00F0               	movwf	??_myIsr
  1890  00E9  301F               	movlw	31
  1891  00EA  00F1               	movwf	??_myIsr+1
  1892  00EB  0877               	movf	_Delay0,w
  1893  00EC  0270               	subwf	??_myIsr,w
  1894  00ED  00A2               	movwf	_Delay1
  1895  00EE  0878               	movf	_Delay0+1,w
  1896  00EF  3B71               	subwfb	??_myIsr+1,w
  1897  00F0  00A3               	movwf	_Delay1+1
  1898  00F1                     i1l1251:	
  1899                           
  1900                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 139:                     Flags1.off2 
      +                          = 1;
  1901  00F1  1428               	bsf	_Flags1,0
  1902                           
  1903                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 140:                 } else {
  1904  00F2  2904               	goto	i1l1257
  1905  00F3                     i1l1253:	
  1906                           
  1907                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 141:                     Delay1.value
      +                           = Ch1Delay.value - Ch0Delay.value;
  1908  00F3  0879               	movf	_Ch0Delay,w
  1909  00F4  0226               	subwf	_Ch1Delay,w
  1910  00F5  00A2               	movwf	_Delay1
  1911  00F6  087A               	movf	_Ch0Delay+1,w
  1912  00F7  3B27               	subwfb	_Ch1Delay+1,w
  1913  00F8  00A3               	movwf	_Delay1+1
  1914  00F9                     i1l1255:	
  1915                           
  1916                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 142:                     Flags0.ch1on
      +                          1 = 1;
  1917  00F9  16FB               	bsf	_Flags0,5
  1918                           
  1919                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 143:                     Delay2.value
      +                           = 8191 - Ch1Delay.value;
  1920  00FA  30FF               	movlw	255
  1921  00FB  00F0               	movwf	??_myIsr
  1922  00FC  301F               	movlw	31
  1923  00FD  00F1               	movwf	??_myIsr+1
  1924  00FE  0826               	movf	_Ch1Delay,w
  1925  00FF  0270               	subwf	??_myIsr,w
  1926  0100  00A0               	movwf	_Delay2
  1927  0101  0827               	movf	_Ch1Delay+1,w
  1928  0102  3B71               	subwfb	??_myIsr+1,w
  1929  0103  00A1               	movwf	_Delay2+1
  1930  0104                     i1l1257:	
  1931                           
  1932                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 148:             Delay0.value = ~Dela
      +                          y0.value;
  1933  0104  09F7               	comf	_Delay0,f
  1934  0105  09F8               	comf	_Delay0+1,f
  1935  0106                     i1l1259:	
  1936                           
  1937                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 149:             Delay1.value = ~Dela
      +                          y1.value;
  1938  0106  0140               	movlb	0	; select bank0
  1939  0107  09A2               	comf	_Delay1,f
  1940  0108  09A3               	comf	_Delay1+1,f
  1941  0109                     i1l1261:	
  1942                           
  1943                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 150:             Delay2.value = ~Dela
      +                          y2.value;
  1944  0109  09A0               	comf	_Delay2,f
  1945  010A  09A1               	comf	_Delay2+1,f
  1946  010B  2973               	goto	i1l125
  1947  010C                     i1l87:	
  1948                           
  1949                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 153:         PIR0bits.TMR0IF = 0;
  1950  010C  128C               	bcf	12,5	;volatile
  1951                           
  1952                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 154:         switch(Flags0.delay) {
  1953  010D  295B               	goto	i1l1291
  1954  010E                     i1l1263:	
  1955                           
  1956                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 156:                 TMR0H = Delay0.m
      +                          sb;
  1957  010E  0878               	movf	_Delay0+1,w
  1958  010F  014B               	movlb	11	; select bank11
  1959  0110  009D               	movwf	29	;volatile
  1960                           
  1961                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 157:                 TMR0L = Delay0.l
      +                          sb;
  1962  0111  0877               	movf	_Delay0,w
  1963  0112  009C               	movwf	28	;volatile
  1964                           
  1965                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 158:                 break;
  1966  0113  2972               	goto	i1l112
  1967  0114                     i1l1265:	
  1968                           
  1969                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 160:                 TMR0H = Delay1.m
      +                          sb;
  1970  0114  0140               	movlb	0	; select bank0
  1971  0115  0823               	movf	_Delay1+1,w
  1972  0116  014B               	movlb	11	; select bank11
  1973  0117  009D               	movwf	29	;volatile
  1974                           
  1975                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 161:                 TMR0L = Delay1.l
      +                          sb;
  1976  0118  0140               	movlb	0	; select bank0
  1977  0119  0822               	movf	_Delay1,w
  1978  011A  014B               	movlb	11	; select bank11
  1979  011B  009C               	movwf	28	;volatile
  1980  011C                     i1l1267:	
  1981                           
  1982                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 162:                 if (Flags0.ch0on
      +                          0) {
  1983  011C  1D7B               	btfss	_Flags0,2
  1984  011D  291F               	goto	u58_21
  1985  011E  2920               	goto	u58_20
  1986  011F                     u58_21:	
  1987  011F  2922               	goto	i1l114
  1988  0120                     u58_20:	
  1989  0120                     i1l1269:	
  1990                           
  1991                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 163:                     LATAbits.LAT
      +                          A4 = 1;
  1992  0120  0140               	movlb	0	; select bank0
  1993  0121  1618               	bsf	24,4	;volatile
  1994  0122                     i1l114:	
  1995                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 164:                 }
  1996                           
  1997                           
  1998                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 165:                 if (Flags0.ch1on
      +                          0) {
  1999  0122  1DFB               	btfss	_Flags0,3
  2000  0123  2925               	goto	u59_21
  2001  0124  2926               	goto	u59_20
  2002  0125                     u59_21:	
  2003  0125  2972               	goto	i1l112
  2004  0126                     u59_20:	
  2005  0126                     i1l1271:	
  2006                           
  2007                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 166:                     LATAbits.LAT
      +                          A5 = 1;
  2008  0126  0140               	movlb	0	; select bank0
  2009  0127  1698               	bsf	24,5	;volatile
  2010  0128  2972               	goto	i1l112
  2011  0129                     i1l1273:	
  2012                           
  2013                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 170:                 TMR0H = Delay2.m
      +                          sb;
  2014  0129  0140               	movlb	0	; select bank0
  2015  012A  0821               	movf	_Delay2+1,w
  2016  012B  014B               	movlb	11	; select bank11
  2017  012C  009D               	movwf	29	;volatile
  2018                           
  2019                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 171:                 TMR0L = Delay2.l
      +                          sb;
  2020  012D  0140               	movlb	0	; select bank0
  2021  012E  0820               	movf	_Delay2,w
  2022  012F  014B               	movlb	11	; select bank11
  2023  0130  009C               	movwf	28	;volatile
  2024  0131                     i1l1275:	
  2025                           
  2026                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 172:                 if (Flags0.ch0on
      +                          1) {
  2027  0131  1E7B               	btfss	_Flags0,4
  2028  0132  2934               	goto	u60_21
  2029  0133  2935               	goto	u60_20
  2030  0134                     u60_21:	
  2031  0134  2937               	goto	i1l117
  2032  0135                     u60_20:	
  2033  0135                     i1l1277:	
  2034                           
  2035                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 173:                     LATAbits.LAT
      +                          A4 = 1;
  2036  0135  0140               	movlb	0	; select bank0
  2037  0136  1618               	bsf	24,4	;volatile
  2038  0137                     i1l117:	
  2039                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 174:                 }
  2040                           
  2041                           
  2042                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 175:                 if (Flags0.ch1on
      +                          1) {
  2043  0137  1EFB               	btfss	_Flags0,5
  2044  0138  293A               	goto	u61_21
  2045  0139  293B               	goto	u61_20
  2046  013A                     u61_21:	
  2047  013A  293D               	goto	i1l118
  2048  013B                     u61_20:	
  2049  013B                     i1l1279:	
  2050                           
  2051                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 176:                     LATAbits.LAT
      +                          A5 = 1;
  2052  013B  0140               	movlb	0	; select bank0
  2053  013C  1698               	bsf	24,5	;volatile
  2054  013D                     i1l118:	
  2055                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 177:                 }
  2056                           
  2057                           
  2058                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 178:                 if (Flags1.off2)
      +                           {
  2059  013D  0140               	movlb	0	; select bank0
  2060  013E  1C28               	btfss	_Flags1,0
  2061  013F  2941               	goto	u62_21
  2062  0140  2942               	goto	u62_20
  2063  0141                     u62_21:	
  2064  0141  2972               	goto	i1l112
  2065  0142                     u62_20:	
  2066  0142                     i1l1281:	
  2067                           
  2068                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 179:                     if (!Flags0.
      +                          ch0aon) {
  2069  0142  1B7B               	btfsc	_Flags0,6
  2070  0143  2945               	goto	u63_21
  2071  0144  2946               	goto	u63_20
  2072  0145                     u63_21:	
  2073  0145  2947               	goto	i1l120
  2074  0146                     u63_20:	
  2075  0146                     i1l1283:	
  2076                           
  2077                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 180:                         LATAbits
      +                          .LATA4 = 0;
  2078  0146  1218               	bcf	24,4	;volatile
  2079  0147                     i1l120:	
  2080                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 181:                     }
  2081                           
  2082                           
  2083                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 182:                     if (!Flags0.
      +                          ch1aon) {
  2084  0147  1BFB               	btfsc	_Flags0,7
  2085  0148  294A               	goto	u64_21
  2086  0149  294B               	goto	u64_20
  2087  014A                     u64_21:	
  2088  014A  2972               	goto	i1l112
  2089  014B                     u64_20:	
  2090  014B                     i1l1285:	
  2091                           
  2092                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 183:                         LATAbits
      +                          .LATA5 = 0;
  2093  014B  1298               	bcf	24,5	;volatile
  2094  014C  2972               	goto	i1l112
  2095  014D                     i1l122:	
  2096                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 187:             case 3:
  2097                           
  2098                           
  2099                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 188:                 if (!Flags0.ch0a
      +                          on) {
  2100  014D  1B7B               	btfsc	_Flags0,6
  2101  014E  2950               	goto	u65_21
  2102  014F  2951               	goto	u65_20
  2103  0150                     u65_21:	
  2104  0150  2953               	goto	i1l123
  2105  0151                     u65_20:	
  2106  0151                     i1l1287:	
  2107                           
  2108                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 189:                     LATAbits.LAT
      +                          A4 = 0;
  2109  0151  0140               	movlb	0	; select bank0
  2110  0152  1218               	bcf	24,4	;volatile
  2111  0153                     i1l123:	
  2112                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 190:                 }
  2113                           
  2114                           
  2115                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 191:                 if (!Flags0.ch1a
      +                          on) {
  2116  0153  1BFB               	btfsc	_Flags0,7
  2117  0154  2956               	goto	u66_21
  2118  0155  2957               	goto	u66_20
  2119  0156                     u66_21:	
  2120  0156  2959               	goto	i1l124
  2121  0157                     u66_20:	
  2122  0157                     i1l1289:	
  2123                           
  2124                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 192:                     LATAbits.LAT
      +                          A5 = 0;
  2125  0157  0140               	movlb	0	; select bank0
  2126  0158  1298               	bcf	24,5	;volatile
  2127  0159                     i1l124:	
  2128                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 193:                 }
  2129                           
  2130  0159  03FB               	decf	_Flags0,f	;# 
  2131                           
  2132                           ;/Users/craig/MPLABXProjects/AC-Dimmer-C.X/main.c: 195:         }
  2133  015A  2972               	goto	i1l112
  2134  015B                     i1l1291:	
  2135  015B  087B               	movf	_Flags0,w
  2136  015C  3903               	andlw	3
  2137  015D  00F0               	movwf	??_myIsr
  2138  015E  01F1               	clrf	??_myIsr+1
  2139                           
  2140                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2141                           ; Switch size 1, requested type "simple"
  2142                           ; Number of cases is 1, Range of values is 0 to 0
  2143                           ; switch strategies available:
  2144                           ; Name         Instructions Cycles
  2145                           ; simple_byte            4     3 (average)
  2146                           ; direct_byte            8     6 (fixed)
  2147                           ; jumptable            260     6 (fixed)
  2148                           ;	Chosen strategy is simple_byte
  2149  015F  0871               	movf	??_myIsr+1,w
  2150  0160  3A00               	xorlw	0	; case 0
  2151  0161  1903               	skipnz
  2152  0162  2964               	goto	i1l1749
  2153  0163  2972               	goto	i1l112
  2154  0164                     i1l1749:	
  2155                           
  2156                           ; Switch size 1, requested type "simple"
  2157                           ; Number of cases is 4, Range of values is 0 to 3
  2158                           ; switch strategies available:
  2159                           ; Name         Instructions Cycles
  2160                           ; simple_byte           13     7 (average)
  2161                           ; direct_byte           14     6 (fixed)
  2162                           ; jumptable            260     6 (fixed)
  2163                           ;	Chosen strategy is simple_byte
  2164  0164  0870               	movf	??_myIsr,w
  2165  0165  3A00               	xorlw	0	; case 0
  2166  0166  1903               	skipnz
  2167  0167  290E               	goto	i1l1263
  2168  0168  3A01               	xorlw	1	; case 1
  2169  0169  1903               	skipnz
  2170  016A  2914               	goto	i1l1265
  2171  016B  3A03               	xorlw	3	; case 2
  2172  016C  1903               	skipnz
  2173  016D  2929               	goto	i1l1273
  2174  016E  3A01               	xorlw	1	; case 3
  2175  016F  1903               	skipnz
  2176  0170  294D               	goto	i1l122
  2177  0171  2972               	goto	i1l112
  2178  0172                     i1l112:	
  2179  0172  0AFB               	incf	_Flags0,f	;# 
  2180  0173                     i1l125:	
  2181  0173  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2182  0174  0009               	retfie
  2183  0175                     __end_of_myIsr:	
  2184  007E                     btemp	set	126	;btemp
  2185  007E                     int$flags	set	126
  2186  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         17
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      2      14
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_sendInt
    _sendInt->_nibbleToHex
    _sendInt->_sendChar

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     362
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                        _hexToNibble
                           _sendChar
                            _sendInt
 ---------------------------------------------------------------------------------
 (1) _sendInt                                              3     3      0     157
                                              3 COMMON     3     3      0
                        _nibbleToHex
                           _sendChar
 ---------------------------------------------------------------------------------
 (2) _sendChar                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _nibbleToHex                                          1     1      0      66
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _hexToNibble                                          1     1      0      66
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myIsr                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _hexToNibble
   _sendChar
   _sendInt
     _nibbleToHex
     _sendChar

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       E       5       17.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      1A      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      1A      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Apr  5 12:22:08 2020

            __CFG_CP$OFF 0000                       _Rx 0029              __CFG_LVP$ON 0000  
                    l132 0325                      l142 0323                      l135 032D  
                    l129 0316                      l138 0309                      l148 02BF  
                    l183 02ED                      u430 0311                      _PR2 028D  
                    u431 0310                      u440 032A                      u441 0329  
                    u450 031E                      u451 031D                      u900 01EE  
                    u901 01ED                      u910 01FB                      u911 01FA  
                    u920 021B                      u921 021A                      u930 024A  
                    u850 01C8                      u931 0249                      u851 01C7  
                    u940 024E                      u860 01CD                      u941 024D  
                    u861 01CC                      u950 0257                      u870 01D4  
                    u951 0256                      u871 01D3                      u960 0276  
                    u880 01D9                      u961 0275                      u881 01D8  
                    u970 027A                      u890 01E9                      u971 0279  
                    u891 01E8                      u980 0283                      u981 0282  
                    u990 02C4                      u991 02C3                      _Cmd 002B  
           __CFG_BORV$HI 0000            __CFG_BBEN$OFF 0000             __CFG_ZCD$OFF 0000  
                   l1121 0311                     l1131 032A                     l1141 0318  
                   l1125 0314                     l1133 02F0                     l1143 031E  
                   l1119 030B                     l1135 02F7                     l1129 0325  
                   l1137 02FE                     l1147 0321                     l1139 0302  
                   l1601 020D                     l1611 0228                     l1603 0215  
                   l1531 0196                     l1523 018B                     l1621 024A  
                   l1613 0231                     l1541 01A3                     l1533 019A  
                   l1525 018E                     l1631 026A                     l1623 024E  
                   l1615 0239                     l1607 021C                     l1551 01AF  
                   l1543 01A5                     l1535 019C                     l1527 018F  
                   l1641 0284                     l1633 026C                     l1625 0258  
                   l1617 023D                     l1609 0224                     l1561 01B6  
                   l1553 01B1                     l1545 01A7                     l1537 019F  
                   l1529 0194                     l1643 028E                     l1627 0262  
                   l1635 0271                     l1619 0245                     l1571 01C8  
                   l1563 01B8                     l1555 01B3                     l1547 01AA  
                   l1539 01A1                     l1661 02CA                     l1645 0292  
                   l1637 0276                     l1629 0266                     l1653 029A  
                   l1573 01CD                     l1581 01DE                     l1565 01B9  
                   l1557 01B4                     l1549 01AD                     l1671 02DD  
                   l1647 0297                     l1639 027A                     l1655 02BA  
                   l1591 01F6                     l1583 01E3                     l1663 02CB  
                   l1575 01CE                     l1567 01C2                     l1559 01B5  
                   l1665 02D1                     l1657 02C4                     l1593 01FB  
                   l1585 01E9                     l1577 01D4                     l1569 01C3  
                   l1675 02E2                     l1667 02D5                     l1659 02C8  
                   l1747 02A3                     l1595 01FE                     l1587 01EE  
                   l1579 01D9                     l1677 02E8                     l1669 02D8  
                   l1597 0201                     l1589 01F2                     l1599 0209  
                   u1000 02D1                     u1001 02D0                     u1010 02DD  
                   u1011 02DC                     u1020 02E8                     u1021 02E7  
                   _LATA 0018                     _LATC 001A                     i1l87 010C  
                   _main 018B             hexToNibble@c 0072                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0175            __CFG_MCLRE$ON 0000  
           ?_nibbleToHex 0070                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _T2CON 028E                    i1l120 0147                    i1l112 0172  
                  i1l122 014D                    i1l114 0122                    i1l123 0153  
                  i1l124 0159                    i1l117 0137                    i1l125 0173  
                  i1l118 013D                    _TMR0H 059D                    _TMR0L 059C  
                  u50_20 0046                    u50_21 0045                    u51_20 0060  
                  u51_21 005F                    u60_20 0135                    u52_20 006A  
                  u60_21 0134                    u52_21 0069                    u61_20 013B  
                  u53_20 0088                    u61_21 013A                    u53_21 0087  
                  u53_25 0084                    u62_20 0142                    u54_20 0090  
                  u46_20 000B                    u62_21 0141                    u54_21 008F  
                  u46_21 000A                    u63_20 0146                    u55_20 00AF  
                  u47_20 0018                    u63_21 0145                    u55_21 00AE  
                  u47_21 0017                    u55_25 00AB                    u64_20 014B  
                  u56_20 00BC                    u48_20 0031                    u64_21 014A  
                  u56_21 00BB                    u48_21 0030                    u65_20 0151  
                  u57_20 00E7                    u49_20 0039                    u65_21 0150  
                  u57_21 00E6                    u49_21 0038                    _TRISA 0012  
                  _TRISC 0014                    u66_20 0157                    u58_20 0120  
                  u66_21 0156                    u58_21 011F                    u59_20 0126  
                  u59_21 0125           __CFG_FCMEN$OFF 0000            __CFG_WRTB$OFF 0000  
          __CFG_WRTC$OFF 0000                    _myIsr 0004          __end_of_sendInt 030A  
                  status 0003                    wtemp0 007E           __CFG_CSWEN$OFF 0000  
        __initialization 0176             __end_of_main 02EF           __CFG_SAFEN$OFF 0000  
                 ??_main 002C                   ?_myIsr 0070                   _ANSELA 1F38  
                 _ANSELC 1F4E                   _T0CON1 059F                   _RA0PPS 1F10  
                 _RC1REG 0119                   _RC1STA 011D                   i1l1201 006A  
                 i1l1203 006D                   i1l1211 007E                   i1l1221 0098  
                 i1l1213 0088                   i1l1205 0071                   i1l1231 00B3  
                 i1l1223 0099                   i1l1215 0090                   i1l1207 0072  
                 i1l1151 0006                   i1l1241 00CE                   i1l1233 00B4  
                 i1l1225 00A3                   i1l1217 0093                   i1l1209 007C  
                 i1l1161 0018                   i1l1153 000B                   i1l1251 00F1  
                 i1l1235 00BC                   i1l1243 00DA                   i1l1219 0097  
                 i1l1227 00A5                   i1l1171 0029                   i1l1163 001A  
                 i1l1155 000C                   i1l1261 0109                   i1l1253 00F3  
                 i1l1245 00DE                   i1l1237 00C6                   i1l1229 00AF  
                 i1l1181 0039                   i1l1173 002A                   i1l1165 001D  
                 i1l1157 0011                   i1l1271 0126                   i1l1263 010E  
                 i1l1255 00F9                   i1l1247 00DF                   i1l1239 00C8  
                 i1l1191 004E                   i1l1183 003E                   i1l1175 002B  
                 i1l1167 0021                   i1l1159 0013                   i1l1281 0142  
                 i1l1273 0129                   i1l1265 0114                   i1l1249 00E7  
                 i1l1193 0058                   i1l1185 0046                   i1l1257 0104  
                 i1l1177 0031                   i1l1169 0025                   i1l1283 0146  
                 i1l1275 0131                   i1l1267 011C                   i1l1291 015B  
                 i1l1259 0106                   i1l1187 0049                   i1l1179 0033  
                 i1l1195 005A                   i1l1285 014B                   i1l1277 0135  
                 i1l1269 0120                   i1l1197 0060                   i1l1189 004D  
                 i1l1287 0151                   i1l1279 013B                   i1l1199 0062  
                 i1l1289 0157                   i1l1749 0164           __CFG_WDTCCS$SC 0000  
                 _ZCDCON 091F                   _TX1REG 011A                   _TX1STA 011E  
                 _CmdVal 0024                   _Delay0 0077                   _Delay1 0022  
                 _Delay2 0020                   _Flags0 007B                   _Flags1 0028  
         __CFG_PWRTE$OFF 0000                   _RcvCnt 002A     __size_of_hexToNibble 000D  
         __CFG_STVREN$ON 0000         __end_of_sendChar 032E                ??_sendInt 0073  
__end_of__initialization 0188           __pcstackCOMMON 0070            __end_of_myIsr 0175  
   __size_of_nibbleToHex 000D                  ??_myIsr 0070               __pbssBANK0 0020  
             __pmaintext 018B          __CFG_PPS1WAY$ON 0000               __pintentry 0004  
           nibbleToHex@i 0072                  _SP1BRGL 011B                ?_sendChar 0070  
                __ptext1 02EF                  __ptext2 0324                  __ptext3 030A  
                __ptext4 0317          __CFG_WRTAPP$OFF 0000                  _sendInt 02EF  
        __CFG_WRTSAF$OFF 0000     end_of_initialization 0188               ??_sendChar 0072  
  __CFG_WDTCPS$WDTCPS_31 0000         __CFG_FEXTOSC$OFF 0000            ??_hexToNibble 0072  
    start_initialization 0176         __CFG_LPBOREN$OFF 0000            ??_nibbleToHex 0072  
    __end_of_hexToNibble 0324              __pbssCOMMON 0077                ___latbits 0000  
          __pcstackBANK0 002C               sendInt@tmp 0074        __size_of_sendChar 000A  
    __end_of_nibbleToHex 0317                 ?_sendInt 0070     __CFG_RSTOSC$HFINTPLL 0000  
               _T2CLKCON 0290           __size_of_myIsr 0171                 _LATAbits 0018  
               _Ch0Delay 0079                 _PIE0bits 0716                 _Ch1Delay 0026  
               _PIE4bits 071A              _hexToNibble 0317                 _PIR0bits 070C  
               _PIR3bits 070F                 _PIR4bits 0710                 _RX1DTPPS 1ECB  
      __CFG_BBSIZE$BB512 0000                 _TX1CKPPS 1ECC                main@state 0076  
            _nibbleToHex 030A                sendChar@c 0072               _T0CON0bits 059E  
       __size_of_sendInt 001B            __size_of_main 0164                 _sendChar 0324  
   __CFG_WDTCWS$WDTCWS_7 0000               _RC1STAbits 011D                 int$flags 007E  
             _INTCONbits 000B                 intlevel1 0000                 sendInt@i 0075  
      __CFG_CLKOUTEN$OFF 0000             ?_hexToNibble 0070  
